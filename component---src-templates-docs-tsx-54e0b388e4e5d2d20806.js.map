{"version":3,"sources":["webpack:///./src/components/Content/EditButton.tsx","webpack:///./src/components/Content/AvatarList.tsx","webpack:///./src/components/Content/Article.tsx","webpack:///./src/components/Content/MainContent.tsx","webpack:///./src/templates/docs.tsx"],"names":["EditButton","_ref","title","filename","_ref$sourcePath","sourcePath","external_React_default","a","createElement","tooltip_default","className","target","href","icon_default","type","AvatarList","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","stop","render","_this$props$avatarLis","this","props","avatarList","map","item","text","avatar_default","src","alt","size","React","Component","Article","delegation","delegate","node","e","window","ga","delegateTarget","componentWillUnmount","clearTimeout","pingTimer","destroy","_this","content","meta","subtitle","path","modifiedTime","locale","context","intl","_react_document_title_2_0_3_react_document_title_default","ref","Content_EditButton","index_es","id","Content_AvatarList","moment","format","toc","length","affix_default","offsetTop","dangerouslySetInnerHTML","__html","replace","PureComponent","contextTypes","PropTypes","object","isRequired","SubMenu","getModuleDataWithProps","moduleData","menuList","excludedSuffix","isZhCN","location","pathname","filter","includes","isNotTopLevel","level","MainContent","_React$PureComponent","call","handleMenuOpenChange","openKeys","setState","convertFilename","generateMenuItem","_ref2","_ref2$before","before","_ref2$after","after","key","disabled","child","link","rel","gatsby_browser_entry","to","menu_default","Item","important","badge_default","dot","generateSubMenuItems","obj","footerNavIcons","topLevel","bind","assertThisInitialized_default","itemGroups","Object","keys","groupItems","sort","b","order","charCodeAt","ItemGroup","concat","getMenuItems","menuItems","subMenu","category","subMenuItems","_ref4","getPreAndNext","localizedPageData","list","children","reduce","pre","index","findIndex","state","getSideBarOpenKeys","componentDidUpdate","componentWillReceiveProps","nextProps","hash","element","document","getElementById","decodeURIComponent","setTimeout","scrollIntoView","timer","prevModule","currentModule","split","_this$props","isMobile","activeMenuItem","_this$getPreAndNext","mainContainerClass","classNames","menuChild","inlineIndent","mode","selectedKeys","onOpenChange","row_default","es","iconChild","wrapperClassName","col_default","xxl","xl","lg","md","sm","xs","Article_Article","assign","span","offset","Template","data","rest","objectWithoutPropertiesLoose_default","markdownRemark","allMarkdownRemark","frontmatter","fields","html","tableOfContents","edges","newFrontmatter","transformerFrontmatter","slug","layout","MainContent_MainContent","pageQuery"],"mappings":"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","file":"component---src-templates-docs-tsx-54e0b388e4e5d2d20806.js","sourcesContent":["import React from 'react';\nimport { Tooltip, Icon } from 'antd';\n\nconst EditButton: React.SFC<{\n  title: React.ReactNode;\n  filename?: string;\n  sourcePath?: string;\n}> = ({\n  title,\n  filename,\n  sourcePath = 'https://github.com/ant-design/ant-design-pro-site/edit/master',\n}) => {\n  return (\n    <Tooltip title={title}>\n      <a className=\"edit-button\" target=\"_blank\" href={`${sourcePath}${filename}`}>\n        <Icon type=\"edit\" />\n      </a>\n    </Tooltip>\n  );\n};\n\nexport default EditButton;\n","import React from 'react';\nimport { Avatar, Tooltip } from 'antd';\n\nclass AvatarList extends React.Component<{\n  avatarList: Array<{\n    href: string;\n    text: string;\n    src: string;\n  }>;\n}> {\n  main: HTMLDivElement | null;\n  async componentDidMount() {}\n  render() {\n    const { avatarList = [] } = this.props;\n    if (!avatarList) {\n      return null;\n    }\n    return (\n      <div className=\"doc-avatar-list\">\n        {avatarList.map(item => {\n          return (\n            <a className=\"href-box\" href={`http://github.com${item.href}`}>\n              <Tooltip title={item.text}>\n                <Avatar src={item.src} alt={item.text} size=\"small\" />\n              </Tooltip>\n            </a>\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default AvatarList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport DocumentTitle from 'react-document-title';\nimport { Affix } from 'antd';\nimport delegate from 'delegate';\nimport EditButton from './EditButton';\nimport { IFrontmatterData } from '../../templates/docs';\nimport moment from 'moment';\nimport AvatarList from './AvatarList';\n\ninterface ArticleProps {\n  content: {\n    meta: IFrontmatterData;\n    toc: string | false;\n    content: string;\n  };\n}\n\nexport default class Article extends React.PureComponent<ArticleProps> {\n  static contextTypes = {\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    // Add ga event click\n    this.delegation = delegate(\n      this.node,\n      '.resource-card',\n      'click',\n      (e: { delegateTarget: { href: any } }) => {\n        if ((window as any).ga) {\n          (window as any).ga('send', 'event', 'Download', 'resource', e.delegateTarget.href);\n        }\n      },\n      false\n    );\n  }\n  delegation: any;\n  pingTimer: number;\n  componentWillUnmount() {\n    clearTimeout(this.pingTimer);\n    if (this.delegation) {\n      this.delegation.destroy();\n    }\n  }\n\n  node: HTMLElement | null | undefined;\n\n  render() {\n    const props = this.props;\n    const content = props.content;\n    const { meta } = content;\n    const { title, subtitle, path, modifiedTime, avatarList } = meta;\n    const {\n      intl: { locale },\n    } = this.context as {\n      intl: {\n        locale: 'zh-CN' | 'en-US';\n      };\n    };\n    return (\n      <DocumentTitle title={`${title[locale] || title} - Ant Design`}>\n        <article\n          className=\"markdown\"\n          ref={node => {\n            this.node = node;\n          }}\n        >\n          <h1>\n            {title[locale] || title}\n            {!subtitle || locale === 'en-US' ? null : <span className=\"subtitle\">{subtitle}</span>}\n            <EditButton title={<FormattedMessage id=\"app.content.edit-page\" />} filename={path} />\n          </h1>\n          <div className=\"modifiedTime\">\n            <AvatarList avatarList={avatarList} />\n            <FormattedMessage id=\"app.content.modifiedTime\" />\n            {moment(modifiedTime).format('YYYY-MM-DD HH:mm:SS')}\n          </div>\n          {!content.toc || content.toc.length <= 1 || meta.toc === false ? null : (\n            <Affix className=\"toc-affix\" offsetTop={16}>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: content.toc.replace(/<ul>/g, '<ul class=\"toc\">').replace(/\\/#/g, '#'),\n                }}\n              />\n            </Affix>\n          )}\n          <section\n            className=\"markdown api-container\"\n            dangerouslySetInnerHTML={{ __html: content.content }}\n          />\n        </article>\n      </DocumentTitle>\n    );\n  }\n}\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { Badge, Row, Col, Menu, Icon } from 'antd';\nimport classNames from 'classnames';\nimport MobileMenu from 'rc-drawer-menu';\nimport Article from './Article';\nimport { isZhCN, getMenuItems } from '../utils';\nimport { IFrontmatterData } from '../../templates/docs';\n\nconst { SubMenu } = Menu;\n\ninterface MenuDataItem extends IFrontmatterData {\n  link?: string;\n  topLevel?: {\n    [x: string]: { sort: (arg0: (a: any, b: any) => number) => { map: (arg0: any) => void } };\n    topLevel?: any;\n  };\n}\n\nexport interface MainContentProps {\n  isMobile: boolean;\n  location: {\n    pathname: string;\n  };\n  menuList: MenuDataItem[];\n  localizedPageData: {\n    meta: IFrontmatterData;\n    toc: string | false;\n    content: string;\n  };\n}\n\ninterface MainContentState {\n  openKeys: string[];\n}\n\nfunction getActiveMenuItem(props: MainContentProps) {\n  const { pathname } = props.location;\n  return pathname;\n}\n\nfunction getModuleDataWithProps(props: MainContentProps) {\n  const moduleData = props.menuList;\n  const excludedSuffix = isZhCN(props.location.pathname) ? 'zh-CN' : 'en-US';\n  return moduleData.filter(({ filename }) => {\n    if (!filename) {\n      return false;\n    }\n    if (!filename.includes('zh-CN') && !filename.includes('en-US')) {\n      return true;\n    }\n    return filename.includes(excludedSuffix);\n  });\n}\n\nfunction isNotTopLevel(level: string) {\n  return level !== 'topLevel';\n}\n\nexport default class MainContent extends React.PureComponent<MainContentProps, MainContentState> {\n  static contextTypes = {\n    intl: PropTypes.object.isRequired,\n  };\n\n  constructor(props: MainContentProps) {\n    super(props);\n    this.state = {\n      openKeys: this.getSideBarOpenKeys(props) || [],\n    };\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentWillReceiveProps(nextProps: MainContentProps) {\n    const openKeys = this.getSideBarOpenKeys(nextProps);\n    if (openKeys) {\n      this.setState({\n        openKeys,\n      });\n    }\n  }\n  timer: number;\n  componentDidUpdate() {\n    if (!window.location.hash) {\n      return;\n    }\n    const element = document.getElementById(\n      decodeURIComponent(window.location.hash.replace('#', ''))\n    );\n    setTimeout(() => {\n      if (element) {\n        element.scrollIntoView(true);\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  handleMenuOpenChange = (openKeys: string[]) => {\n    this.setState({\n      openKeys,\n    });\n  };\n  currentModule: string;\n  getSideBarOpenKeys(nextProps: MainContentProps) {\n    const { pathname } = nextProps.location;\n    const prevModule = this.currentModule;\n    this.currentModule = pathname.replace(/^\\//, '').split('/')[1] || 'components';\n    if (this.currentModule === 'react') {\n      this.currentModule = 'components';\n    }\n    const locale = isZhCN(pathname) ? 'zh-CN' : 'en-US';\n    if (prevModule !== this.currentModule) {\n      const moduleData = getModuleDataWithProps(nextProps);\n      const shouldOpenKeys = Object.keys(getMenuItems(moduleData, locale));\n      return shouldOpenKeys;\n    }\n  }\n\n  convertFilename = (filename: string) => {\n    const {\n      location: { pathname },\n    } = this.props;\n    if (isZhCN(pathname) && !filename.includes('-cn')) {\n      return `${filename}-cn`;\n    }\n    return filename;\n  };\n\n  generateMenuItem = ({ before = null, after = null }, item: MenuDataItem) => {\n    if (!item.title) {\n      return;\n    }\n    const {\n      intl: { locale },\n    } = this.context as {\n      intl: {\n        locale: 'zh-CN' | 'en-US';\n      };\n    };\n    const text = [\n      <span key=\"english\">{item.title[locale] || item.title}</span>,\n      <span className=\"chinese\" key=\"chinese\">\n        {locale === 'zh-CN' && item.subtitle}\n      </span>,\n    ];\n\n    const disabled = item.disabled;\n\n    const child = !item.link ? (\n      <Link to={this.convertFilename(item.filename)}>\n        {before}\n        {text}\n        {after}\n      </Link>\n    ) : (\n      <a\n        href={item.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"menu-item-link-outside\"\n      >\n        {before}\n        {text} <Icon type=\"export\" />\n        {after}\n      </a>\n    );\n    return (\n      <Menu.Item key={this.convertFilename(item.filename)} disabled={disabled}>\n        {item.important ? <Badge dot={item.important}>{child}</Badge> : child}\n      </Menu.Item>\n    );\n  };\n\n  generateSubMenuItems = (\n    obj: {\n      [x: string]: { sort: (arg0: (a: any, b: any) => number) => { map: (arg0: any) => void } };\n      topLevel?: any;\n    },\n    footerNavIcons = {}\n  ) => {\n    if (!obj) return [];\n    const topLevel = (obj.topLevel || []).map(this.generateMenuItem.bind(this, footerNavIcons));\n    const itemGroups = Object.keys(obj)\n      .filter(isNotTopLevel)\n      .map(type => {\n        const groupItems = obj[type]\n          .sort((a, b) => {\n            if ('order' in a && 'order' in b) {\n              return a.order - b.order;\n            }\n            return a.title.charCodeAt(0) - b.title.charCodeAt(0);\n          })\n          .map(this.generateMenuItem.bind(this, footerNavIcons));\n        return (\n          <Menu.ItemGroup title={type} key={type}>\n            {groupItems}\n          </Menu.ItemGroup>\n        );\n      });\n    return [...topLevel, ...itemGroups];\n  };\n\n  getMenuItems = (footerNavIcons = {}) => {\n    const moduleData = getModuleDataWithProps(this.props);\n    const {\n      intl: { locale },\n    } = this.context;\n    const menuItems: {\n      [key: string]: any;\n      topLevel?: MenuDataItem['topLevel'];\n    } = getMenuItems(moduleData, locale) || {};\n    let topLevel = [];\n    if (menuItems.topLevel) {\n      topLevel = this.generateSubMenuItems(menuItems.topLevel, footerNavIcons);\n    }\n\n    const subMenu = Object.keys(menuItems)\n      .filter(isNotTopLevel)\n      .map((category: string) => {\n        const subMenuItems = this.generateSubMenuItems(menuItems[category], footerNavIcons);\n        return (\n          <SubMenu title={<h4>{category}</h4>} key={category}>\n            {subMenuItems}\n          </SubMenu>\n        );\n      });\n    const result = [...topLevel, ...subMenu].filter(({ key }) => key);\n    return result;\n  };\n\n  getPreAndNext = (menuItems: any) => {\n    const {\n      localizedPageData: {\n        meta: { filename },\n      },\n    } = this.props;\n\n    const list =\n      menuItems.length && !menuItems[0].props.children.length\n        ? menuItems\n        : Object.keys(menuItems).reduce((pre, key) => {\n            return pre.concat(menuItems[key].props.children);\n          }, []);\n    const index = list.findIndex((item: { key: string }) => {\n      return item.key === filename || item.key === `${filename}-cn`;\n    });\n\n    if (index === -1) {\n      return {};\n    }\n    return {\n      prev: list[index - 1],\n      next: list[index + 1],\n    };\n  };\n\n  render() {\n    const { localizedPageData, isMobile } = this.props;\n\n    const activeMenuItem = getActiveMenuItem(this.props);\n    const menuItems = this.getMenuItems();\n    const { prev, next } = this.getPreAndNext(menuItems);\n    const mainContainerClass = classNames('main-container', {});\n    const { openKeys } = this.state;\n    const menuChild = (\n      <Menu\n        inlineIndent={54}\n        className=\"aside-container\"\n        mode=\"inline\"\n        openKeys={openKeys}\n        selectedKeys={[activeMenuItem]}\n        onOpenChange={this.handleMenuOpenChange}\n      >\n        {menuItems}\n      </Menu>\n    );\n    return (\n      <div className=\"main-wrapper\">\n        <Row>\n          {isMobile ? (\n            <MobileMenu\n              iconChild={[<Icon type=\"menu-unfold\" />, <Icon type=\"menu-fold\" />]}\n              key=\"mobile-menu\"\n              wrapperClassName=\"drawer-wrapper\"\n            >\n              {menuChild}\n            </MobileMenu>\n          ) : (\n            <Col xxl={4} xl={5} lg={6} md={24} sm={24} xs={24} className=\"main-menu\">\n              {menuChild}\n            </Col>\n          )}\n          <Col xxl={20} xl={19} lg={18} md={24} sm={24} xs={24}>\n            <div className={mainContainerClass}>\n              <Article {...this.props} content={localizedPageData} />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={{ span: 20, offset: 4 }} md={24} sm={24} xs={24}>\n            <section className=\"prev-next-nav\">\n              {prev ? (\n                <a className=\"prev-page\">\n                  <Icon className=\"footer-nav-icon-before\" type=\"left\" />\n                  {prev.props.children}\n                </a>\n              ) : null}\n              {next ? (\n                <a className=\"next-page\">\n                  {next.props.children}\n                  <Icon className=\"footer-nav-icon-after\" type=\"right\" />\n                </a>\n              ) : null}\n            </section>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport WrapperLayout from '../components/layout';\nimport MainContent from '../components/Content/MainContent';\nimport { transformerFrontmatter } from '../components/utils';\n\ninterface IMarkDownFields {\n  path: string;\n  slug: string;\n  modifiedTime: number;\n  avatarList: Array<{\n    href: string;\n    text: string;\n    src: string;\n  }>;\n}\nexport interface IFrontmatterData extends IMarkDownFields {\n  title: {\n    'zh-CN': string;\n    'en-US': string;\n  };\n  toc: string | boolean;\n  order: string;\n  type: string;\n  filename: string;\n  subtitle: string;\n  path: string;\n  disabled: boolean;\n  important: boolean;\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport interface IGraphqlFrontmatterData extends Omit<IFrontmatterData, 'title'> {\n  title: {\n    zh_CN: string;\n    en_US: string;\n  };\n}\n\nexport interface IMarkdownRemarkData {\n  html: string;\n  tableOfContents: string;\n  frontmatter: IGraphqlFrontmatterData;\n  fields: IMarkDownFields;\n}\n\nexport interface IAllMarkdownRemarkData {\n  edges: Array<{\n    node: {\n      frontmatter: IGraphqlFrontmatterData;\n      fields: IMarkDownFields;\n    };\n  }>;\n}\n\nexport default function Template({\n  data,\n  ...rest\n}: {\n  data: { markdownRemark: IMarkdownRemarkData; allMarkdownRemark: IAllMarkdownRemarkData };\n  isMobile: boolean;\n  location: {\n    pathname: string;\n  };\n}) {\n  const { markdownRemark, allMarkdownRemark } = data;\n  const { frontmatter, fields, html, tableOfContents } = markdownRemark;\n  const { edges } = allMarkdownRemark;\n  const menuList = edges.map(({ node }) => {\n    const newFrontmatter = transformerFrontmatter(node.frontmatter);\n    return {\n      slug: node.fields.slug,\n      meta: {\n        ...newFrontmatter,\n        slug: node.fields.slug,\n        filename: node.fields.slug,\n      },\n      ...newFrontmatter,\n      filename: node.fields.path,\n    };\n  });\n  return (\n    <WrapperLayout {...rest}>\n      <MainContent\n        {...rest}\n        localizedPageData={{\n          meta: {\n            ...transformerFrontmatter(frontmatter),\n            ...fields,\n            filename: fields.slug,\n            path: fields.path,\n          },\n          toc: tableOfContents,\n          content: html,\n        }}\n        menuList={menuList}\n      />\n    </WrapperLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query TemplateDocsMarkdown($slug: String!, $type: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      tableOfContents(maxDepth: 3)\n      frontmatter {\n        title {\n          zh_CN\n          en_US\n        }\n        order\n        type\n      }\n      fields {\n        path\n        slug\n        modifiedTime\n        avatarList {\n          href\n          text\n          src\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: $type } }\n      sort: { fields: [fields___slug], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title {\n              zh_CN\n              en_US\n            }\n            order\n            type\n          }\n          fields {\n            slug\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}