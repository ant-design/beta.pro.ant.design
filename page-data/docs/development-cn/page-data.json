{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/development-cn","result":{"data":{"markdownRemark":{"html":"<p>Ant Design Pro 以 umi 作为脚手架，启动和开发与 umi 基本相同。</p>\n<h2 id=\"启动项目\" style=\"position:relative;\"><a href=\"#%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE\" aria-label=\"启动项目 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>启动项目</h2>\n<p>在项目根目录下执行 <code>npm run start</code>, 即可启动项目。</p>\n<p><img src=\"https://gw.alipayobjects.com/zos/antfincdn/%26df0HXZbRD/4B634700-7C4F-44BA-A45C-E250601C8971.png\" alt=\"strat\"></p>\n<p>此时访问 <a href=\"http://localhost:8000/\">http://localhost:8000/</a> 即可看到下面的界面。</p>\n<p><img src=\"https://gw.alipayobjects.com/zos/antfincdn/9bvHFQRjep/0B7EE9A4-2CD7-4626-9B8E-DEEA85EE2126.png\" alt=\"app\"></p>\n<blockquote>\n<p>由于默认使用了 user 权限，可以需要使用 admin 登录才能看到全部页面。</p>\n</blockquote>\n<h3 id=\"区分环境\" style=\"position:relative;\"><a href=\"#%E5%8C%BA%E5%88%86%E7%8E%AF%E5%A2%83\" aria-label=\"区分环境 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>区分环境</h3>\n<p>对于很多项目来说都需要一个区分环境的变量，同时也提供了快捷的启动方式和相应的 ui 展示。Pro 中内置 <code>dev</code>，<code>test</code>, <code>pre</code> 三个环境。可以分别通过运行 <code>npm run start:test</code> 等命令启动。同时也会给每个页面注入一个 <code>REACT_APP_ENV</code> 的变量来区分。</p>\n<blockquote>\n<p><code>dev</code>，<code>test</code>, <code>pre</code> 环境都默认关闭了 mock。 <code>REACT_APP_ENV</code> 并不是挂载在 windows 中的,不能通过 <code>windows.REACT_APP_ENV</code>来获取。</p>\n</blockquote>\n<h2 id=\"mock\" style=\"position:relative;\"><a href=\"#mock\" aria-label=\"mock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MOCK</h2>\n<p>在很多情况下前端实在后端还没有开发完成之前就开始开发的，这时候我们就需要用到 mock 数据了。Pro 中约定了两种 mock 的定义方式。</p>\n<ul>\n<li>在根目录的 mock 中接入</li>\n<li>在 src/page 中的 mock.ts 的文件中配置</li>\n</ul>\n<p>一个标准的 mock 由三部分组成，以 List 配置为例。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'GET /api/rule'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'12'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'POST /api/rule'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token operator\">:</span> Request<span class=\"token punctuation\">,</span> res<span class=\"token operator\">:</span> Response<span class=\"token punctuation\">,</span> u<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      success<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>第一部分是 网络请求的 Method 配置，完整的列表可以看<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods\">这里</a>。一般我们都会使用 GET 和 POST。</p>\n<p>第二部分是 URL 也就是我们发起网络请求的地址。一般我们会使用统一的前缀方便代理的使用。</p>\n<p>第三部分是 数据处理，我们可以配置一个 JSON, JSON 数据会直接返回。或者是配置一个 function，function 有三个参数 <a href=\"https://expressjs.com/en/4x/api.html#req\">req</a>, <a href=\"https://expressjs.com/en/4x/api.html#res\">res</a>，url 。具体使用方式与 <a href=\"https://expressjs.com/\">express</a> 相同。数据必须要通过 <code>res.send</code> 来返回。</p>\n<h2 id=\"代理\" style=\"position:relative;\"><a href=\"#%E4%BB%A3%E7%90%86\" aria-label=\"代理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代理</h2>\n<p>代理是为了解决跨域的问题，同时方便联调而使用的技术，在 Pro 中我们内置了代理，并且做了环境的区分。一个标准的配置是这样的。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  dev<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'/api/'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      target<span class=\"token operator\">:</span> <span class=\"token string\">'https://preview.pro.ant.design'</span><span class=\"token punctuation\">,</span>\n      changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'^'</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  test<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'/api/'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      target<span class=\"token operator\">:</span> <span class=\"token string\">'https://preview.pro.ant.design'</span><span class=\"token punctuation\">,</span>\n      changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'^'</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  pre<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'/api/'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      target<span class=\"token operator\">:</span> <span class=\"token string\">'your pre url'</span><span class=\"token punctuation\">,</span>\n      changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'^'</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>代理有一些重要的配置首先一个用来匹配路由的正则，<code>/api/</code> 会匹配 <code>/api/list</code>，但是不会匹配 <code>api/list</code>，或者 <code>/list/api</code>。target 需要请求的位置，<code>target: 'https://preview.pro.ant.design',</code> 会把 <code>/api/list</code> 拼接为 <code>https://preview.pro.ant.design/api/list</code> 来进行请求。pathRewrite 是一个对象 <code>{ '/api': '/qixian' }</code>会把 url 中<code>/api</code> 全部替换为<code>/qixian</code>再发出</p>\n<blockquote>\n<p>代理不会修改控制台的 url，它的所有操作都在 node.js 中进行。</p>\n</blockquote>\n<h2 id=\"表格\" style=\"position:relative;\"><a href=\"#%E8%A1%A8%E6%A0%BC\" aria-label=\"表格 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>表格</h2>\n<p>开发一个表格是一个中后台的基本修养，我们封装了一个重型组件来介绍样板代码，它有个两个能节省代码功能，首先他是支持 request 来请求数据，这样刷新和所有他可以自动触发。其次它支持了很多预设比如常见的 数字，日期，或者复杂的枚举，他都可以帮你自动处理，还能顺便生成查询表单。下图是一个简单的 ProTable 的用法。</p>\n<p><img src=\"https://gw.alipayobjects.com/zos/antfincdn/Qi5lwGanlE/47FCD236-C1D4-4FD1-9721-6B4F2443F420.png\" alt=\"protable\"></p>\n<p>参考文档：<a href=\"https://protable.ant.design/\">https://protable.ant.design/</a></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/development-cn/#%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE\">启动项目</a></p>\n<ul>\n<li><a href=\"/docs/development-cn/#%E5%8C%BA%E5%88%86%E7%8E%AF%E5%A2%83\">区分环境</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/development-cn/#mock\">MOCK</a></li>\n<li><a href=\"/docs/development-cn/#%E4%BB%A3%E7%90%86\">代理</a></li>\n<li><a href=\"/docs/development-cn/#%E8%A1%A8%E6%A0%BC\">表格</a></li>\n</ul>","frontmatter":{"title":"开发","order":11,"type":"基础使用"},"fields":{"path":"/docs/development.zh-CN.md","slug":"/docs/development-cn","modifiedTime":1604284204602,"avatarList":"[]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"设计资源","order":94,"type":"其它","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":"升级到 V5","order":92,"type":"其它","time":null},"fields":{"slug":"/docs/upgrade-v5-cn","path":"/docs/upgrade-v5.zh-CN.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":91,"type":"其它","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"部署","order":32,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"构建","order":31,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/lint-cn","path":"/docs/lint.zh-CN.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/type-script-cn","path":"/docs/typeScript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"单元测试","order":22,"type":"高级使用","time":null},"fields":{"slug":"/docs/unit-test-cn","path":"/docs/unit-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":21,"type":"高级使用","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":20,"type":"基础使用","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"简易数据流","order":19,"type":"基础使用","time":null},"fields":{"slug":"/docs/simple-model-cn","path":"/docs/simple-model.zh-CN.md"}}},{"node":{"frontmatter":{"title":"全局初始数据","order":18,"type":"基础使用","time":null},"fields":{"slug":"/docs/initial-state-cn","path":"/docs/initial-state.zh-CN.md"}}},{"node":{"frontmatter":{"title":"修改样式","order":17,"type":"基础使用","time":null},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":16,"type":"基础使用","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"内置布局","order":15,"type":"基础使用","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"网络请求","order":14,"type":"基础使用","time":null},"fields":{"slug":"/docs/request-cn","path":"/docs/request.zh-CN.md"}}},{"node":{"frontmatter":{"title":"调试","order":12,"type":"基础使用","time":null},"fields":{"slug":"/docs/debug-cn","path":"/docs/debug.zh-CN.md"}}},{"node":{"frontmatter":{"title":"使用 Pro 的资产","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/assets-cn","path":"/docs/assets.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开发","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/development-cn","path":"/docs/development.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":1,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"介绍","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/introduction-cn","path":"/docs/introduction.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/development-cn","type":"/docs/","locale":"/-cn/"}},"staticQueryHashes":[]}