{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/advanced-menu-cn","result":{"data":{"markdownRemark":{"html":"<p>Pro 中默认会读取 <code>config/config.tsx</code> 中的 routes 配置作为 ProLayout 的菜单数据来生成菜单，并且配合 <a href=\"https://umijs.org/zh-CN/plugins/plugin-access\"><code>plugin-access</code></a> 还可以很方便的进行菜单的权限管理。这个模式可以满足大部分需求，但是业务的复杂度总是在的，有些时候就需要一些高级的用法。</p>\n<h2 id=\"从服务端请求菜单\" style=\"position:relative;\"><a href=\"#%E4%BB%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E8%8F%9C%E5%8D%95\" aria-label=\"从服务端请求菜单 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>从服务端请求菜单</h2>\n<p>在某些情况下，写死的菜单数据可能满足不了我们的需求，Pro 也提供了相应的解决方案来进行远程的菜单数据请求。我们这里需要用到两个 API, <code>menu.request</code> 和 <code>menu.params</code>，request 需要传入一个 promise，它会自动托管 loading，params 修改会触发 request 方便重新请求菜单。</p>\n<p>具体的代码实现如下，我们可以在 <code>src/app.tsx</code> 定义 layout 对象，并且导出。看起来可能是这样的：</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// https://umijs.org/zh-CN/plugins/plugin-layout</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> layout<span class=\"token operator\">:</span> <span class=\"token function-variable function\">RunTimeLayoutConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> initialState <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 每当 initialState?.currentUser?.userid 发生修改时重新执行 request</span>\n      params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        userId<span class=\"token operator\">:</span> initialState<span class=\"token operator\">?.</span>currentUser<span class=\"token operator\">?.</span>userid<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">request</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">params<span class=\"token punctuation\">,</span> defaultMenuData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// initialState.currentUser 中包含了所有用户信息</span>\n        <span class=\"token keyword\">const</span> menuData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchMenuData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> menuData<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>以上就是一个远程请求菜单的案例，一般情况的菜单都是根据角色来实现的，我们可以配置 <code>initialState</code> 中的数据来向后端请求不同的数据。</p>\n<p>如果你的数据希望通过 initialState 来保存，你可以在 request 中直接读取，这样每次 <code>initialState</code> 变化都会重新加载菜单。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// https://umijs.org/zh-CN/plugins/plugin-layout</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> layout<span class=\"token operator\">:</span> <span class=\"token function-variable function\">RunTimeLayoutConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> initialState <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 每当 initialState?.currentUser?.userid 发生修改时重新执行 request</span>\n      params<span class=\"token operator\">:</span> initialState<span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">request</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">params<span class=\"token punctuation\">,</span> defaultMenuData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> initialState<span class=\"token punctuation\">.</span>menuData<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如果你希望可以手动的控制菜单刷新，可以使用 <code>actionRef</code> 功能。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> layoutActionRef <span class=\"token operator\">=</span> createRef<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">reload</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// https://umijs.org/zh-CN/plugins/plugin-layout</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> layout<span class=\"token operator\">:</span> <span class=\"token function-variable function\">RunTimeLayoutConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    actionRef<span class=\"token operator\">:</span> layoutActionRef<span class=\"token punctuation\">,</span>\n    menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">request</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">params<span class=\"token punctuation\">,</span> defaultMenuData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> initialState<span class=\"token punctuation\">.</span>menuData<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 调用</span>\n<span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  layoutActionRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"自定义高亮\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%AB%98%E4%BA%AE\" aria-label=\"自定义高亮 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义高亮</h2>\n<p>大部分时候菜单的高亮是可以通过父子关系来满足的，我们也推荐这种用法。假如有一个增删改查的页面，可以如下设置：</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  path<span class=\"token operator\">:</span> <span class=\"token string\">'/product'</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'产品管理'</span><span class=\"token punctuation\">,</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/product'</span><span class=\"token punctuation\">,</span> redirect<span class=\"token operator\">:</span> <span class=\"token string\">'product/list'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/list'</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'产品列表'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/new'</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'新建产品'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/:id'</span><span class=\"token punctuation\">,</span>\n      hideInMenu<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'产品详情'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/update/:id'</span><span class=\"token punctuation\">,</span>\n      hideInMenu<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'修改产品'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这样的路由非常标准，可以被 ProLayout 完美的消费，高亮也能正确展示，但是不一定所有的菜单的都可以做的这么规范，ProLayout 也提供一个方式来重定向菜单的高亮。如果我们想要 <code>/list/:id</code>，高亮 <code>/product</code>可以这样配置。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/product'</span><span class=\"token punctuation\">,</span>\n    hideInMenu<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'产品管理'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/list/:id'</span><span class=\"token punctuation\">,</span>\n    hideInMenu<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'列表详情'</span><span class=\"token punctuation\">,</span>\n    parentKeys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/product'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这样就可以在<code>/list/:id</code>路径的时候，也高亮 <code>/product</code>, <code>parentKeys</code> 中的 <code>key</code> 一般是路径，如果不方便设置为路径的话可以在 菜单配置中增加 key 属性，Layout 会优先使用配置的 <code>Key</code> 属性。</p>\n<h2 id=\"根据路径更换布局\" style=\"position:relative;\"><a href=\"#%E6%A0%B9%E6%8D%AE%E8%B7%AF%E5%BE%84%E6%9B%B4%E6%8D%A2%E5%B8%83%E5%B1%80\" aria-label=\"根据路径更换布局 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>根据路径更换布局</h2>\n<p>在一些复杂的路径中我们可以需要根据不同的 <code>url</code> 展示不同的界面，比如在新建的时候我们是不需要左侧菜单，如果用传统的方法实现需要根据 <code>pathname</code> 来进行不同的配置。实现成本比较高，为了降低实现成本，我们在 <code>routers</code> 配置中增加了一些约定。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/product'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 不展示菜单</span>\n    menuRender<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'产品管理'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/list/:id'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 编辑的时候使用顶部菜单</span>\n    layout<span class=\"token operator\">:</span> <span class=\"token string\">'top'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'列表详情'</span><span class=\"token punctuation\">,</span>\n    parentKeys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/product'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这样在 <code>/product</code> 的时候不展示菜单，在 <code>/list/:id</code> 中的时候展示了顶部菜单。在菜单中可以配置以下的 api。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Setting</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * @name false 时不展示顶栏\n   */</span>\n  headerRender<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @name false 时不展示页脚\n   */</span>\n  footerRender<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @name false 时不展示菜单\n   */</span>\n  menuRender<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @name false 时不展示菜单顶栏\n   */</span>\n  menuHeaderRender<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @name 固定顶栏\n   **/</span>\n  fixedHeader<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @name 固定菜单\n   */</span>\n  fixSiderbar<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @name theme for nav menu\n   * @name 导航菜单的主题\n   */</span>\n  navTheme<span class=\"token operator\">:</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'realDark'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @name nav menu position: `side` or `top`\n   * @name 导航菜单的位置\n   * @description side 为正常模式，top菜单显示在顶部，mix 两种兼有\n   */</span>\n  layout<span class=\"token operator\">:</span> <span class=\"token string\">'side'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'mix'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @name 顶部导航的主题，mix 模式生效\n   */</span>\n  headerTheme<span class=\"token operator\">:</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/docs/advanced-menu-cn/#%E4%BB%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E8%8F%9C%E5%8D%95\">从服务端请求菜单</a></li>\n<li><a href=\"/docs/advanced-menu-cn/#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%AB%98%E4%BA%AE\">自定义高亮</a></li>\n<li><a href=\"/docs/advanced-menu-cn/#%E6%A0%B9%E6%8D%AE%E8%B7%AF%E5%BE%84%E6%9B%B4%E6%8D%A2%E5%B8%83%E5%B1%80\">根据路径更换布局</a></li>\n</ul>","frontmatter":{"title":"菜单的高级用法","order":90,"type":"高级使用"},"fields":{"path":"/docs/advanced-menu.zh-CN.md","slug":"/docs/advanced-menu-cn","modifiedTime":1622775599991,"avatarList":"[]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"文档总览","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/overview-cn","path":"/docs/overview.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":3,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新手需知","order":4,"type":"入门","time":null},"fields":{"slug":"/docs/introduction-cn","path":"/docs/introduction.zh-CN.md"}}},{"node":{"frontmatter":{"title":"启动项目","order":10,"type":"基础使用","time":null},"fields":{"slug":"/docs/development-cn","path":"/docs/development.zh-CN.md"}}},{"node":{"frontmatter":{"title":"文件夹结构","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/folder-cn","path":"/docs/folder.zh-CN.md"}}},{"node":{"frontmatter":{"title":"标题和加载页","order":12,"type":"基础使用","time":null},"fields":{"slug":"/docs/title-landing-cn","path":"/docs/title-landing.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":12,"type":"页面开发","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"图表","order":15,"type":"页面开发","time":null},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":"布局","order":15,"type":"页面开发","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"简易数据流","order":19,"type":"数据管理","time":null},"fields":{"slug":"/docs/simple-model-cn","path":"/docs/simple-model.zh-CN.md"}}},{"node":{"frontmatter":{"title":"使用 css","order":20,"type":"样式和资源","time":null},"fields":{"slug":"/docs/css-cn","path":"/docs/css.zh-CN.md"}}},{"node":{"frontmatter":{"title":"CSS Modules","order":22,"type":"样式和资源","time":null},"fields":{"slug":"/docs/css-modules-cn","path":"/docs/css-modules.zh-CN.md"}}},{"node":{"frontmatter":{"title":"使用 less","order":23,"type":"样式和资源","time":null},"fields":{"slug":"/docs/less-cn","path":"/docs/less.zh-CN.md"}}},{"node":{"frontmatter":{"title":"添加图片，字体和文件","order":24,"type":"样式和资源","time":null},"fields":{"slug":"/docs/adding-images-fonts-and-files-cn","path":"/docs/adding-images-fonts-and-files.zh-CN.md"}}},{"node":{"frontmatter":{"title":"OpenAPI","order":30,"type":"后端集成","time":null},"fields":{"slug":"/docs/openapi-cn","path":"/docs/openapi.zh-CN.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":30,"type":"数据管理","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"网络请求","order":31,"type":"后端集成","time":null},"fields":{"slug":"/docs/request-cn","path":"/docs/request.zh-CN.md"}}},{"node":{"frontmatter":{"title":"构建","order":31,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"质量","time":null},"fields":{"slug":"/docs/lint-cn","path":"/docs/lint.zh-CN.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"质量","time":null},"fields":{"slug":"/docs/type-script-cn","path":"/docs/typeScript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"代理","order":32,"type":"后端集成","time":null},"fields":{"slug":"/docs/proxy-cn","path":"/docs/proxy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"全局初始数据","order":32,"type":"数据管理","time":null},"fields":{"slug":"/docs/initial-state-cn","path":"/docs/initial-state.zh-CN.md"}}},{"node":{"frontmatter":{"title":"部署","order":32,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"调试","order":34,"type":"后端集成","time":null},"fields":{"slug":"/docs/debug-cn","path":"/docs/debug.zh-CN.md"}}},{"node":{"frontmatter":{"title":"菜单的高级用法","order":90,"type":"高级使用","time":null},"fields":{"slug":"/docs/advanced-menu-cn","path":"/docs/advanced-menu.zh-CN.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":91,"type":"其它","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Pro 资产的使用","order":91,"type":"高级使用","time":null},"fields":{"slug":"/docs/assets-cn","path":"/docs/assets.zh-CN.md"}}},{"node":{"frontmatter":{"title":"升级到 V5","order":92,"type":"其它","time":null},"fields":{"slug":"/docs/upgrade-v5-cn","path":"/docs/upgrade-v5.zh-CN.md"}}},{"node":{"frontmatter":{"title":"环境变量","order":92,"type":"高级使用","time":null},"fields":{"slug":"/docs/environment-manage-cn","path":"/docs/environment-manage.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":93,"type":"高级使用","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"设计资源","order":94,"type":"其它","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":"测试","order":94,"type":"质量","time":null},"fields":{"slug":"/docs/test-cn","path":"/docs/test.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/advanced-menu-cn","type":"/docs/","locale":"/-cn/"}},"staticQueryHashes":[]}