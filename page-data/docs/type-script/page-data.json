{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/type-script","result":{"data":{"markdownRemark":{"html":"<p>In Pro, TypeScript is used as the default development language. The benefits of TypeScript are no longer necessary. Both development costs and maintenance costs can be greatly reduced. It is a must for middle and back-end development. Here are several dimensions to talk about the best practices for TypeScript in Pro.</p>\n<h2 id=\"when-is-type-recommended-and-when-is-interface-used\" style=\"position:relative;\"><a href=\"#when-is-type-recommended-and-when-is-interface-used\" aria-label=\"when is type recommended and when is interface used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>When is type recommended and when is interface used?</h2>\n<p>It is recommended to use type at all times. Type is more like a variable. Compared with interface, the characteristics of type are as follows:</p>\n<p>-The expression function is more powerful, not limited to object/class/function -To extend an existing type, a new type needs to be created, and the name cannot be duplicated -Support more complex type operations</p>\n<p>Basically all types expressed with interface have their equivalent type expressions. In the course of practice, we also found that a type can only be expressed by interface, but cannot be expressed by type, that is, attaching attributes to functions.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">FuncWithAttachment</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span>param<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  someProperty<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> testFunc<span class=\"token operator\">:</span> FuncWithAttachment <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">testFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mike'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Type reminder</span>\ntestFunc<span class=\"token punctuation\">.</span>someProperty <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Type reminder</span></code></pre></div>\n<h2 id=\"define-interface-data\" style=\"position:relative;\"><a href=\"#define-interface-data\" aria-label=\"define interface data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Define interface data</h2>\n<p>Any project is inseparable from the processing of data and interfaces. Splicing data and interfaces is one of the main tasks of forming business logic and front-end. Defining the TypeScript type of data returned by the interface can reduce a lot of maintenance costs and the time of querying apis.</p>\n<p>In Pro, it is recommended to define the type of interface data in <code>src/services/API.d.ts</code>. Take basic user information as an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">namespace</span> <span class=\"token constant\">API</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Basic user information</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">CurrentUser</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    avatar<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    title<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    group<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    signature<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    tags<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      label<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    userid<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    access<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'user'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'guest'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">;</span>\n    unreadCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>There are no type definitions in many projects, and websites such as <a href=\"http://json2ts.com/\">json2ts</a> are recommended for automatic conversion.</p>\n</blockquote>\n<p>We can use it easily when using it. Files ending with <code>d.ts</code> will be imported to the global by TypeScript by default, but the <code>import</code> syntax cannot be used. If you need to quote, you need to use triple slashes.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">request</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// props</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">UserProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  userInfo<span class=\"token operator\">:</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"generic\" style=\"position:relative;\"><a href=\"#generic\" aria-label=\"generic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generic</h2>\n<p>We don't recommend writing generics when developing in industry code, but in order to get a better typescript experience, we may need to understand the generic tips of commonly used component libraries. Here is a brief list.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> ProForm <span class=\"token keyword\">from</span> <span class=\"token string\">'@ant-design/pro-form'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ProTable<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> ActionType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ant-design/pro-table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">DataType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Page</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The generic type of useState will become the type of state</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// The type of useRef will be set to the type of actionRef.current</span>\n  <span class=\"token keyword\">const</span> actionRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ActionType<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// click uses React.MouseEvent plus dom type generic</span>\n  <span class=\"token comment\">// HTMLInputElement represents the input tag Another commonly used one is HTMLDivElement</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>MouseEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// onChange uses React.ChangeEvent plus dom type generic</span>\n  <span class=\"token comment\">// Generally HTMLInputElement, HTMLSelectElement may also be used</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ChangeEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token string\">'ProForm sets generics to agree on the parameter types of interfaces such as onFinish'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      &lt;ProForm&lt;DataType> />\n      </span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        DataType sets the type of row in render,\n        Params is the submission type of the parameter\n        ValueType represents a custom valueType type, ProTable will automatically merge\n      </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      &lt;ProTable&lt;DataType, Params, ValueType> />\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"define-n-ways-to-write-a-component\" style=\"position:relative;\"><a href=\"#define-n-ways-to-write-a-component\" aria-label=\"define n ways to write a component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Define n ways to write a component</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> WrapComponent<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>ExtendedProps<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// return ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> WrapComponent<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>PropsWithChildren<span class=\"token operator\">&lt;</span>SpinProps<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// return ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"umi-common-types\" style=\"position:relative;\"><a href=\"#umi-common-types\" aria-label=\"umi common types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>umi common types</h2>\n<p>Umi has helped us to encapsulate in many places. If we know the specific type, we can reduce a lot of any.</p>\n<h3 id=\"page-related\" style=\"position:relative;\"><a href=\"#page-related\" aria-label=\"page related permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page related</h3>\n<p><code>IRouteComponentProps</code> is the props type of the component configured in <code>config.ts</code>, which brings some react-router related props</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IRouteComponentProps<span class=\"token operator\">&lt;</span>\n  Params <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">K</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">keyof</span> Params<span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Query <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">K</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">keyof</span> Query<span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element<span class=\"token punctuation\">;</span>\n  location<span class=\"token operator\">:</span> Location <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> query<span class=\"token operator\">:</span> Query <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  route<span class=\"token operator\">:</span> IRoute<span class=\"token punctuation\">;</span>\n  routes<span class=\"token operator\">:</span> IRoute<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  history<span class=\"token operator\">:</span> History<span class=\"token punctuation\">;</span>\n  match<span class=\"token operator\">:</span> match<span class=\"token operator\">&lt;</span>Params<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can use it like this in the page:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'antd'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IRouteComponentProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Page<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>IRouteComponentProps<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"add-parameters-for-window\" style=\"position:relative;\"><a href=\"#add-parameters-for-window\" aria-label=\"add parameters for window permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add parameters for Window</h2>\n<p>Front-end development is largely about dealing with Window. Sometimes we have to add parameters to Window, such as various statistical codes. Provide a way to add parameters in TypeScript. Define as follows in <code>/src/typings.d.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Window</span> <span class=\"token punctuation\">{</span>\n  ga<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n    command<span class=\"token operator\">:</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">,</span>\n    hitType<span class=\"token operator\">:</span> <span class=\"token string\">'event'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'pageview'</span><span class=\"token punctuation\">,</span>\n    fieldsObject<span class=\"token operator\">:</span> GAFieldsObject <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">reloadAuthorized</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you don't want to add it in Window, but want to use it globally, such as parameters injected via define, we inject it in <code>/src/typings.d.ts</code> via the <code>declare</code> keyword.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">REACT_APP_ENV</span><span class=\"token operator\">:</span> <span class=\"token string\">'test'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dev'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'pre'</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>These examples can all be seen in <code>/src/typings.d.ts</code>.</p>\n</blockquote>\n<h2 id=\"type-of-component\" style=\"position:relative;\"><a href=\"#type-of-component\" aria-label=\"type of component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Type of component</h2>\n<p>Antd is a very convenient set of UI libraries. In order to use it better, we need to understand some of its types.</p>\n<h3 id=\"form\" style=\"position:relative;\"><a href=\"#form\" aria-label=\"form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Form</h3>\n<p>There are many commonly used types in Form, and most of them can be derived from <code>'antd/es/form</code>. Here are some of the most commonly used ones.</p>\n<p>The form type generated by using <code>Form.useForm()</code> in antd@4 is <code>FormInstance</code>. FormItemProps is also a commonly used type. We can use this type to encapsulate <code>FormItem</code> and add our own logic.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormInstance<span class=\"token punctuation\">,</span> FormItemProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd/es/form'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>form<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Form<span class=\"token punctuation\">.</span><span class=\"token function\">useForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// save ref</span>\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>FormInstance<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> form<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Due to the variability of form, the values ​​returned by <code>form.getFieldsValue();</code> are all of the <code>Store</code> type, so we can directly <code>as</code> as we want parameters for ourselves.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span><span class=\"token function\">getFieldsValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"table\" style=\"position:relative;\"><a href=\"#table\" aria-label=\"table permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table</h3>\n<p>ProTable is recommended here, the types are relatively clear, examples of commonly used types.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProColumns<span class=\"token punctuation\">,</span> ActionType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ant-design/pro-table'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> columns<span class=\"token operator\">:</span> ProColumns<span class=\"token operator\">&lt;</span><span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span>\n    dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>\n    hideInSearch<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> actionRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ActionType<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token operator\">&lt;</span>ProTable actionRef<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>actionRef<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In addition, <code>TablePaginationConfig</code> and <code>TableRowSelection</code> are more commonly used. Special attention should be paid when using both of these generic types.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TablePaginationConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd/es/table/Table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TableRowSelection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd/es/table/interface'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pagination<span class=\"token operator\">:</span> TablePaginationConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  pageSize<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  total<span class=\"token operator\">:</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rowSelection<span class=\"token operator\">:</span> TableRowSelection <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  selectedRowKeys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">,</span> rows<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"some-small-pits\" style=\"position:relative;\"><a href=\"#some-small-pits\" aria-label=\"some small pits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some small pits</h2>\n<h3 id=\"reactreacttext\" style=\"position:relative;\"><a href=\"#reactreacttext\" aria-label=\"reactreacttext permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.ReactText[]</h3>\n<p><code>string[]|number[]</code> is not the same as <code>(string|number)[]</code>, in this case, just use <code>React.ReactText[]</code> directly.</p>\n<h3 id=\"reactforwardref\" style=\"position:relative;\"><a href=\"#reactforwardref\" aria-label=\"reactforwardref permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.forwardRef</h3>\n<p>If we use the function component, it may report an error that ref cannot be found. At this time, we need to use <code>React.forwardRef</code>, but it should be noted that the type must also be modified accordingly.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token operator\">-</span>React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>CategorySelectProps<span class=\"token operator\">></span>\n<span class=\"token operator\">+</span> React<span class=\"token punctuation\">.</span>ForwardRefRenderFunction<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token punctuation\">,</span> CategorySelectProps<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"dynamic-increase\" style=\"position:relative;\"><a href=\"#dynamic-increase\" aria-label=\"dynamic increase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic increase</h3>\n<p>Sometimes I need to dynamically update the key of an Object. For convenience, we can set the key to any, so that any key can be used, and JSON.parse is unnecessary.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Person</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">[</span>propName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"value-can-be-null-or-undefined\" style=\"position:relative;\"><a href=\"#value-can-be-null-or-undefined\" aria-label=\"value can be null or undefined permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Value can be null or undefined</h3>\n<p>It's very simple in 3.8, just <code>obj?.xxx</code>.</p>\n<h3 id=\"there-is-no-typescript-definition-in-a-library\" style=\"position:relative;\"><a href=\"#there-is-no-typescript-definition-in-a-library\" aria-label=\"there is no typescript definition in a library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>There is no typescript definition in a library</h3>\n<p>We can directly define it as any.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> xxx <span class=\"token keyword\">from</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"ts-ignore\" style=\"position:relative;\"><a href=\"#ts-ignore\" aria-label=\"ts ignore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@ts-ignore</h3>\n<p>Sometimes the type error is component, but it looks very uncomfortable. It will always compile and report errors, so you can use <code>@ts-ignore</code> to ignore it temporarily.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// @ts-ignore</span>\nxxxx<span class=\"token punctuation\">;</span></code></pre></div>\n<p>After all, TypeScript is a markup language. When you need to use any, you don't need to be hesitant to use any. When encountering dynamic code, you might as well use <code>as unknown as XXX</code>, which can save a lot of time.</p>","tableOfContents":"<ul>\n<li><a href=\"/docs/type-script/#when-is-type-recommended-and-when-is-interface-used\">When is type recommended and when is interface used?</a></li>\n<li><a href=\"/docs/type-script/#define-interface-data\">Define interface data</a></li>\n<li><a href=\"/docs/type-script/#generic\">Generic</a></li>\n<li><a href=\"/docs/type-script/#define-n-ways-to-write-a-component\">Define n ways to write a component</a></li>\n<li>\n<p><a href=\"/docs/type-script/#umi-common-types\">umi common types</a></p>\n<ul>\n<li><a href=\"/docs/type-script/#page-related\">Page related</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/type-script/#add-parameters-for-window\">Add parameters for Window</a></li>\n<li>\n<p><a href=\"/docs/type-script/#type-of-component\">Type of component</a></p>\n<ul>\n<li><a href=\"/docs/type-script/#form\">Form</a></li>\n<li><a href=\"/docs/type-script/#table\">Table</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/type-script/#some-small-pits\">Some small pits</a></p>\n<ul>\n<li><a href=\"/docs/type-script/#reactreacttext\">React.ReactText[]</a></li>\n<li><a href=\"/docs/type-script/#reactforwardref\">React.forwardRef</a></li>\n<li><a href=\"/docs/type-script/#dynamic-increase\">Dynamic increase</a></li>\n<li><a href=\"/docs/type-script/#value-can-be-null-or-undefined\">Value can be null or undefined</a></li>\n<li><a href=\"/docs/type-script/#there-is-no-typescript-definition-in-a-library\">There is no typescript definition in a library</a></li>\n<li><a href=\"/docs/type-script/#ts-ignore\">@ts-ignore</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"TypeScript","order":31,"type":"Code Style"},"fields":{"path":"/docs/typeScript.en-US.md","slug":"/docs/type-script","modifiedTime":1620370023848,"avatarList":"[]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Document overview","order":0,"type":"Introduction","time":null},"fields":{"slug":"/docs/overview","path":"/docs/overview.en-US.md"}}},{"node":{"frontmatter":{"title":"文档总览","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/overview-cn","path":"/docs/overview.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Getting Started","order":3,"type":"Introduction","time":null},"fields":{"slug":"/docs/getting-started","path":"/docs/getting-started.en-US.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":3,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Beginner's Need to know","order":4,"type":"Introduction","time":null},"fields":{"slug":"/docs/introduction","path":"/docs/introduction.en-US.md"}}},{"node":{"frontmatter":{"title":"新手需知","order":4,"type":"入门","time":null},"fields":{"slug":"/docs/introduction-cn","path":"/docs/introduction.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Router and Nav","order":10,"type":"Page Development","time":null},"fields":{"slug":"/docs/router-and-nav","path":"/docs/router-and-nav.en-US.md"}}},{"node":{"frontmatter":{"title":"启动项目","order":10,"type":"基础使用","time":null},"fields":{"slug":"/docs/development-cn","path":"/docs/development.zh-CN.md"}}},{"node":{"frontmatter":{"title":"路由和菜单","order":10,"type":"页面开发","time":null},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Start Project","order":11,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/development","path":"/docs/development.en-US.md"}}},{"node":{"frontmatter":{"title":"Layout","order":11,"type":"Page Development","time":null},"fields":{"slug":"/docs/layout","path":"/docs/layout.en-US.md"}}},{"node":{"frontmatter":{"title":"环境变量","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/environment-manage-cn","path":"/docs/environment-manage.zh-CN.md"}}},{"node":{"frontmatter":{"title":"布局","order":11,"type":"页面开发","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Chart","order":15,"type":"Page Development","time":null},"fields":{"slug":"/docs/graph","path":"/docs/graph.en-US.md"}}},{"node":{"frontmatter":{"title":"New Page","order":15,"type":"Page Development","time":null},"fields":{"slug":"/docs/new-page","path":"/docs/new-page.en-US.md"}}},{"node":{"frontmatter":{"title":"图表","order":15,"type":"页面开发","time":null},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":16,"type":"页面开发","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"folder structure","order":18,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/folder","path":"/docs/folder.en-US.md"}}},{"node":{"frontmatter":{"title":"easy Model","order":19,"type":"Data Management","time":null},"fields":{"slug":"/docs/simple-model","path":"/docs/simple-model.en-US.md"}}},{"node":{"frontmatter":{"title":"简易数据流","order":19,"type":"数据管理","time":null},"fields":{"slug":"/docs/simple-model-cn","path":"/docs/simple-model.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Using css","order":20,"type":"styles and resources","time":null},"fields":{"slug":"/docs/css","path":"/docs/css.en-US.md"}}},{"node":{"frontmatter":{"title":"使用 css","order":20,"type":"样式和资源","time":null},"fields":{"slug":"/docs/css-cn","path":"/docs/css.zh-CN.md"}}},{"node":{"frontmatter":{"title":"文件夹结构","order":21,"type":"基础使用","time":null},"fields":{"slug":"/docs/folder-cn","path":"/docs/folder.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Advanced menu","order":22,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/advanced-menu","path":"/docs/advanced-menu.en-US.md"}}},{"node":{"frontmatter":{"title":"i18n","order":22,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/i18n","path":"/docs/i18n.en-US.md"}}},{"node":{"frontmatter":{"title":"CSS Modules","order":22,"type":"styles and resources","time":null},"fields":{"slug":"/docs/css-modules","path":"/docs/css-modules.en-US.md"}}},{"node":{"frontmatter":{"title":"CSS Modules","order":22,"type":"样式和资源","time":null},"fields":{"slug":"/docs/css-modules-cn","path":"/docs/css-modules.zh-CN.md"}}},{"node":{"frontmatter":{"title":"use less","order":23,"type":"styles and resources","time":null},"fields":{"slug":"/docs/less","path":"/docs/less.en-US.md"}}},{"node":{"frontmatter":{"title":"使用 less","order":23,"type":"样式和资源","time":null},"fields":{"slug":"/docs/less-cn","path":"/docs/less.zh-CN.md"}}},{"node":{"frontmatter":{"title":"添加图片，字体和文件","order":24,"type":"样式和资源","time":null},"fields":{"slug":"/docs/adding-images-fonts-and-files-cn","path":"/docs/adding-images-fonts-and-files.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Use Pro's Assets","order":30,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/assets","path":"/docs/assets.en-US.md"}}},{"node":{"frontmatter":{"title":"Permission Management","order":30,"type":"Data Management","time":null},"fields":{"slug":"/docs/authority-management","path":"/docs/authority-management.en-US.md"}}},{"node":{"frontmatter":{"title":"OpenAPI","order":30,"type":"Network Request","time":null},"fields":{"slug":"/docs/openapi","path":"/docs/openapi.en-US.md"}}},{"node":{"frontmatter":{"title":"OpenAPI","order":30,"type":"后端集成","time":null},"fields":{"slug":"/docs/openapi-cn","path":"/docs/openapi.zh-CN.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":30,"type":"数据管理","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"标题和加载页","order":30,"type":"构建和部署","time":null},"fields":{"slug":"/docs/title-landing-cn","path":"/docs/title-landing.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Pro 资产的使用","order":30,"type":"高级使用","time":null},"fields":{"slug":"/docs/assets-cn","path":"/docs/assets.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Build","order":31,"type":"Build & Deployment","time":null},"fields":{"slug":"/docs/build","path":"/docs/build.en-US.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"Code Style","time":null},"fields":{"slug":"/docs/lint","path":"/docs/lint.en-US.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"Code Style","time":null},"fields":{"slug":"/docs/type-script","path":"/docs/typeScript.en-US.md"}}},{"node":{"frontmatter":{"title":"Request","order":31,"type":"Network Request","time":null},"fields":{"slug":"/docs/request","path":"/docs/request.en-US.md"}}},{"node":{"frontmatter":{"title":"网络请求","order":31,"type":"后端集成","time":null},"fields":{"slug":"/docs/request-cn","path":"/docs/request.zh-CN.md"}}},{"node":{"frontmatter":{"title":"构建","order":31,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/lint-cn","path":"/docs/lint.zh-CN.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/type-script-cn","path":"/docs/typeScript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":31,"type":"高级使用","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Test","order":32,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/test","path":"/docs/test.en-US.md"}}},{"node":{"frontmatter":{"title":"Deployment","order":32,"type":"Build & Deployment","time":null},"fields":{"slug":"/docs/deploy","path":"/docs/deploy.en-US.md"}}},{"node":{"frontmatter":{"title":"Title and loading page","order":32,"type":"Build & Deployment","time":null},"fields":{"slug":"/docs/title-landing","path":"/docs/title-landing.en-US.md"}}},{"node":{"frontmatter":{"title":"Global Initial State","order":32,"type":"Data Management","time":null},"fields":{"slug":"/docs/initial-state","path":"/docs/initial-state.en-US.md"}}},{"node":{"frontmatter":{"title":"Proxy","order":32,"type":"Network Request","time":null},"fields":{"slug":"/docs/porxy","path":"/docs/porxy.en-US.md"}}},{"node":{"frontmatter":{"title":"代理","order":32,"type":"后端集成","time":null},"fields":{"slug":"/docs/proxy-cn","path":"/docs/proxy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"全局初始数据","order":32,"type":"数据管理","time":null},"fields":{"slug":"/docs/initial-state-cn","path":"/docs/initial-state.zh-CN.md"}}},{"node":{"frontmatter":{"title":"部署","order":32,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"菜单的高级用法","order":32,"type":"高级使用","time":null},"fields":{"slug":"/docs/advanced-menu-cn","path":"/docs/advanced-menu.zh-CN.md"}}},{"node":{"frontmatter":{"title":"测试","order":32,"type":"高级使用","time":null},"fields":{"slug":"/docs/test-cn","path":"/docs/test.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Debug","order":34,"type":"Network Request","time":null},"fields":{"slug":"/docs/debug","path":"/docs/debug.en-US.md"}}},{"node":{"frontmatter":{"title":"调试","order":34,"type":"后端集成","time":null},"fields":{"slug":"/docs/debug-cn","path":"/docs/debug.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Add pictures, fonts and files","order":44,"type":"styles and resources","time":null},"fields":{"slug":"/docs/adding-images-fonts-and-files","path":"/docs/adding-images-fonts-and-files.en-US.md"}}},{"node":{"frontmatter":{"title":"FAQ","order":91,"type":"Other","time":null},"fields":{"slug":"/docs/faq","path":"/docs/faq.en-US.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":91,"type":"其它","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Upgrade to V5","order":92,"type":"Other","time":null},"fields":{"slug":"/docs/upgrade-v5","path":"/docs/upgrade-v5.en-US.md"}}},{"node":{"frontmatter":{"title":"升级到 V5","order":92,"type":"其它","time":null},"fields":{"slug":"/docs/upgrade-v5-cn","path":"/docs/upgrade-v5.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Design Kit","order":94,"type":"Other","time":null},"fields":{"slug":"/docs/resource","path":"/docs/resource.en-US.md"}}},{"node":{"frontmatter":{"title":"设计资源","order":94,"type":"其它","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/type-script","type":"/docs/","locale":"//"}},"staticQueryHashes":[]}