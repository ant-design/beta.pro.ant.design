{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/type-script","result":{"data":{"markdownRemark":{"html":"<p>Pro uses TypeScript as the default development language. The benefits of TypeScript need not be described in detail. Both development and maintenance costs can be greatly reduced, and it is a must for mid- and back-end development. Here are a few maintenance to talk about the best practices for TypeScript in Pro.</p>\n<h2 id=\"define-interface-data\" style=\"position:relative;\"><a href=\"#define-interface-data\" aria-label=\"define interface data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Define interface data</h2>\n<p>Any project is inseparable from the processing of data and interfaces. Splicing data and interfaces is one of the main tasks of forming business logic and front-end. Defining the TypeScript type of data returned by the interface can reduce a lot of maintenance costs and query API time.</p>\n<p>In Pro, it is recommended to define the type of interface data in <code>src/services/API.d.ts</code>. Taking user basic information as an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">namespace</span> <span class=\"token constant\">API</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Basic user information</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">CurrentUser</span> <span class=\"token punctuation\">{</span>\n    avatar<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    name<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    title<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    group<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    signature<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    tags<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      label<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    userid<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    access<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'user'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'guest'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">;</span>\n    unreadCount<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>In many projects, there is no type definition. Here we recommend <a href=\"http://json2ts.com/\">json2ts</a> and other websites to automatically convert.</p>\n</blockquote>\n<p>When using it, we can use it very easily. The files ending in <code>d.ts</code> will be imported into the world by TypeScript by default, but the<code>import</code> syntax cannot be used. If you need to quote, you need to use three slashes.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">request</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'/ api/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// props</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserProps</span> <span class=\"token punctuation\">{</span>\n  userInfo<span class=\"token operator\">:</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"add-parameters-for-window\" style=\"position:relative;\"><a href=\"#add-parameters-for-window\" aria-label=\"add parameters for window permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add parameters for Window</h2>\n<p>The front-end development is very large program is dealing with Window, sometimes we have to add parameters to Window, such as various statistical code. Provide a way to add parameters in TypeScript. Define the following in <code>/ src/typings.d.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Window</span> <span class=\"token punctuation\">{</span>\n  ga<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>command<span class=\"token operator\">:</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">,</span> hitType<span class=\"token operator\">:</span> <span class=\"token string\">'event'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'view'</span><span class=\"token punctuation\">,</span> fieldsObject<span class=\"token operator\">:</span> GAFieldsObject <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">reloadAuthorized</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you don't want to add it in Window, but want to use it globally, for example, parameters injected through define, we inject it in <code>/ src/typings.d.ts</code> through the<code>declare</code> keyword.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">REACT_APP_ENV</span><span class=\"token operator\">:</span> <span class=\"token string\">'test'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'dev'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'pre'</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>These examples can be seen in <code>/ src/typings.d.ts</code>.</p>\n</blockquote>\n<h2 id=\"types-of-components\" style=\"position:relative;\"><a href=\"#types-of-components\" aria-label=\"types of components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Types of components</h2>\n<p>Antd is a very convenient set of UI library, in order to use it better, we need to understand some of its types.</p>\n<h3 id=\"form\" style=\"position:relative;\"><a href=\"#form\" aria-label=\"form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Form</h3>\n<p>There are many common types in Form, most of which can be exported from <code>'antd/es/form</code>, here are a few of the most commonly used ones.</p>\n<p>The form type generated in antd @ 4 using <code>Form.useForm ()</code> is <code>FormInstance</code>. FormItemProps is also a commonly used type. We can use this type to encapsulate FormItem and add our own logic.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormInstance<span class=\"token punctuation\">,</span> FormItemProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd/es/form'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>form<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Form<span class=\"token punctuation\">.</span><span class=\"token function\">useForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// save ref</span>\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>FormInstance<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> form<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Due to the variability of form, the values ​​returned by <code>form.getFieldsValue ();</code> are all of type <code>Store</code>, and we can directly<code>as</code> for the parameters we want.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span><span class=\"token function\">getFieldsValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"table\" style=\"position:relative;\"><a href=\"#table\" aria-label=\"table permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table</h3>\n<p>ProTable is recommended here, the type is relatively clear, and examples of commonly used types.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ProColumns<span class=\"token punctuation\">,</span> ActionType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ ant-design/pro-table'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> columns<span class=\"token operator\">:</span> ProColumns<span class=\"token operator\">&lt;</span><span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span>\n    dataIndex<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>\n    hideInSearch<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> actionRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ActionType<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token operator\">&lt;</span>ProTable actionRef<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>actionRef<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In addition, <code>TablePaginationConfig</code> and<code>TableRowSelection</code> are more commonly used. Special care should be taken when these two are generic types.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TablePaginationConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd/es/table/Table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TableRowSelection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd/es/table/interface'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pagination<span class=\"token operator\">:</span> TablePaginationConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  pageSize<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  total<span class=\"token operator\">:</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rowSelection<span class=\"token operator\">:</span> TableRowSelection <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  selectedRowKeys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">,</span> rows<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"some-small-pits\" style=\"position:relative;\"><a href=\"#some-small-pits\" aria-label=\"some small pits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some small pits</h2>\n<h3 id=\"reactreacttext\" style=\"position:relative;\"><a href=\"#reactreacttext\" aria-label=\"reactreacttext permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.ReactText[]</h3>\n<p><code>string[] | number[]</code> is not the same as <code>(string | number)[]</code>, in this case, just use <code>React.ReactText[]</code> just fine.</p>\n<h3 id=\"reactforwardref\" style=\"position:relative;\"><a href=\"#reactforwardref\" aria-label=\"reactforwardref permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.forwardRef</h3>\n<p>If we use the function component, we may report an error that ref cannot be found. At this time, we need to use <code>React.forwardRef</code>, but it should be noted that the type also needs to be modified accordingly.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token operator\">-</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span> <span class=\"token operator\">&lt;</span>CategorySelectProps<span class=\"token operator\">></span>\n<span class=\"token operator\">+</span> React<span class=\"token punctuation\">.</span>ForwardRefRenderFunction <span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token punctuation\">,</span> CategorySelectProps<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"dynamic-increase\" style=\"position:relative;\"><a href=\"#dynamic-increase\" aria-label=\"dynamic increase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic increase</h3>\n<p>Sometimes I need to dynamically update the key of an Object. For convenience, we can set the key to any, so that any key can be used, excess JSON.parse</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">[</span>propName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"value-can-be-null-or-undefined\" style=\"position:relative;\"><a href=\"#value-can-be-null-or-undefined\" aria-label=\"value can be null or undefined permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Value can be null or undefined</h3>\n<p>In 3.8 it is already very simple, just <code>obj?.Xxx</code>.</p>\n<h3 id=\"there-is-no-typescript-definition-for-a-library\" style=\"position:relative;\"><a href=\"#there-is-no-typescript-definition-for-a-library\" aria-label=\"there is no typescript definition for a library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>There is no typescript definition for a library</h3>\n<p>We can directly define it as any.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> xxx <span class=\"token keyword\">from</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"-ts-ignore\" style=\"position:relative;\"><a href=\"#-ts-ignore\" aria-label=\" ts ignore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@ ts-ignore</h3>\n<p>Sometimes the type error is component, but it looks very uncomfortable. Will always compile and report errors, here you can use <code>@ts-ignore</code> to temporarily ignore it.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// @ts-ignore</span>\nxxxx<span class=\"token punctuation\">;</span></code></pre></div>\n<p>After all, TypeScript is a markup language. You do n’t have to be stingy with any when you need to use any. When you encounter more dynamic code, you might as well use <code>as unknown as XXX</code>.</p>","tableOfContents":"<ul>\n<li><a href=\"/docs/type-script/#define-interface-data\">Define interface data</a></li>\n<li><a href=\"/docs/type-script/#add-parameters-for-window\">Add parameters for Window</a></li>\n<li>\n<p><a href=\"/docs/type-script/#types-of-components\">Types of components</a></p>\n<ul>\n<li><a href=\"/docs/type-script/#form\">Form</a></li>\n<li><a href=\"/docs/type-script/#table\">Table</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/type-script/#some-small-pits\">Some small pits</a></p>\n<ul>\n<li><a href=\"/docs/type-script/#reactreacttext\">React.ReactText[]</a></li>\n<li><a href=\"/docs/type-script/#reactforwardref\">React.forwardRef</a></li>\n<li><a href=\"/docs/type-script/#dynamic-increase\">Dynamic increase</a></li>\n<li><a href=\"/docs/type-script/#value-can-be-null-or-undefined\">Value can be null or undefined</a></li>\n<li><a href=\"/docs/type-script/#there-is-no-typescript-definition-for-a-library\">There is no typescript definition for a library</a></li>\n<li><a href=\"/docs/type-script/#-ts-ignore\">@ ts-ignore</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"TypeScript","order":31,"type":"Code Style"},"fields":{"path":"/docs/typeScript.en-US.md","slug":"/docs/type-script","modifiedTime":1597456981574,"avatarList":"[]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Design Kit","order":94,"type":"Other","time":null},"fields":{"slug":"/docs/resource","path":"/docs/resource.en-US.md"}}},{"node":{"frontmatter":{"title":"设计资源","order":94,"type":"其它","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Upgrade to V5","order":92,"type":"Other","time":null},"fields":{"slug":"/docs/upgrade-v5","path":"/docs/upgrade-v5.en-US.md"}}},{"node":{"frontmatter":{"title":"升级到 V5","order":92,"type":"其它","time":null},"fields":{"slug":"/docs/upgrade-v5-cn","path":"/docs/upgrade-v5.zh-CN.md"}}},{"node":{"frontmatter":{"title":"FAQ","order":91,"type":"Other","time":null},"fields":{"slug":"/docs/faq","path":"/docs/faq.en-US.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":91,"type":"其它","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Deployment","order":32,"type":"Build & Deployment","time":null},"fields":{"slug":"/docs/deploy","path":"/docs/deploy.en-US.md"}}},{"node":{"frontmatter":{"title":"部署","order":32,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Build","order":31,"type":"Build & Deployment","time":null},"fields":{"slug":"/docs/build","path":"/docs/build.en-US.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"Code Style","time":null},"fields":{"slug":"/docs/lint","path":"/docs/lint.en-US.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"Code Style","time":null},"fields":{"slug":"/docs/type-script","path":"/docs/typeScript.en-US.md"}}},{"node":{"frontmatter":{"title":"构建","order":31,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/lint-cn","path":"/docs/lint.zh-CN.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/type-script-cn","path":"/docs/typeScript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"i18n","order":22,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/i18n","path":"/docs/i18n.en-US.md"}}},{"node":{"frontmatter":{"title":"Unit Test","order":22,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/unit-test","path":"/docs/unit-test.en-US.md"}}},{"node":{"frontmatter":{"title":"单元测试","order":22,"type":"高级使用","time":null},"fields":{"slug":"/docs/unit-test-cn","path":"/docs/unit-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":21,"type":"高级使用","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Permission Management","order":20,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/authority-management","path":"/docs/authority-management.en-US.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":20,"type":"基础使用","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Simple Model","order":19,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/simple-model","path":"/docs/simple-model.en-US.md"}}},{"node":{"frontmatter":{"title":"简易数据流","order":19,"type":"基础使用","time":null},"fields":{"slug":"/docs/simple-model-cn","path":"/docs/simple-model.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Global Initial State","order":18,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/initial-state","path":"/docs/initial-state.en-US.md"}}},{"node":{"frontmatter":{"title":"全局初始数据","order":18,"type":"基础使用","time":null},"fields":{"slug":"/docs/initial-state-cn","path":"/docs/initial-state.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Edit Style","order":17,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/style","path":"/docs/style.en-US.md"}}},{"node":{"frontmatter":{"title":"修改样式","order":17,"type":"基础使用","time":null},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":16,"type":"基础使用","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"New Page","order":15,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/new-page","path":"/docs/new-page.en-US.md"}}},{"node":{"frontmatter":{"title":"内置布局","order":15,"type":"基础使用","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Layout","order":14,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/layout","path":"/docs/layout.en-US.md"}}},{"node":{"frontmatter":{"title":"Request","order":14,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/request","path":"/docs/request.en-US.md"}}},{"node":{"frontmatter":{"title":"网络请求","order":14,"type":"基础使用","time":null},"fields":{"slug":"/docs/request-cn","path":"/docs/request.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Debug","order":13,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/debug","path":"/docs/debug.en-US.md"}}},{"node":{"frontmatter":{"title":"Use Pro's Assets","order":12,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/assets","path":"/docs/assets.en-US.md"}}},{"node":{"frontmatter":{"title":"调试","order":12,"type":"基础使用","time":null},"fields":{"slug":"/docs/debug-cn","path":"/docs/debug.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Development","order":11,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/development","path":"/docs/development.en-US.md"}}},{"node":{"frontmatter":{"title":"使用 Pro 的资产","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/assets-cn","path":"/docs/assets.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开发","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/development-cn","path":"/docs/development.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Getting Started","order":1,"type":"Introduction","time":null},"fields":{"slug":"/docs/getting-started","path":"/docs/getting-started.en-US.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":1,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Introduction","order":0,"type":"Introduction","time":null},"fields":{"slug":"/docs/introduction","path":"/docs/introduction.en-US.md"}}},{"node":{"frontmatter":{"title":"介绍","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/introduction-cn","path":"/docs/introduction.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/type-script","type":"/docs/","locale":"//"}},"staticQueryHashes":[]}