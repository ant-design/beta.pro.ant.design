{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/upgrade-v5-cn","result":{"data":{"markdownRemark":{"html":"<p>Pro V5 是可以渐进使用的，只要升级到 umi@3 即可使用这些特性，新的数据流虽然简单高效但是并不能满足所有的场景，我们可以混合适应，慢慢迁移。当然我们希望可以尽早迁移来减少历史债务。</p>\n<h2 id=\"initialstate\" style=\"position:relative;\"><a href=\"#initialstate\" aria-label=\"initialstate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>initialState</h2>\n<p><code>initialState</code>  在 v5 中替代了原来的自带 model，<code>global</code>,<code>login</code>,<code>setting</code> 都并入了 initialState 中。我们需要删除 <code>src/models/global.ts</code>,<code>src/models/login.ts</code>,<code>src/models/setting.ts</code> ，并且将请求用户信息和登陆拦截放到 <code>src/app.tsx</code> 中。</p>\n<p>我们可以将 <code>initialState</code> 理解为一个默认的 model，里面可以将项目中需要的不频繁修改的数据注入。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Settings <span class=\"token keyword\">as</span> ProSettings <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ant-design/pro-layout'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> queryCurrent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/services/user'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> defaultSettings <span class=\"token keyword\">from</span> <span class=\"token string\">'../config/defaultSettings'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getInitialState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n  currentUser<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token punctuation\">;</span>\n  settings<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ProSettings<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 如果是登录页面，不执行</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">!==</span> <span class=\"token string\">'/user/login'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> currentUser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">queryCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        currentUser<span class=\"token punctuation\">,</span>\n        settings<span class=\"token operator\">:</span> defaultSettings<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    settings<span class=\"token operator\">:</span> defaultSettings<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"layout\" style=\"position:relative;\"><a href=\"#layout\" aria-label=\"layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Layout</h2>\n<p>在新的架构中 Layout 被作为插件使用，作为了替代品我们在 <code>app.ts</code> 中提供了 <code>layout</code>  的配置项来支持运行时配置,我们需要将 footer 和 menu 的自定义迁移到  <code>app.ts</code> 中，在 return 中我们可以原来的任何 props 配置。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BasicLayoutProps<span class=\"token punctuation\">,</span> Settings <span class=\"token keyword\">as</span> ProSettings <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ant-design/pro-layout'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> RightContent <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/RightContent'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Footer <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/Footer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> layout <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  initialState<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  initialState<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> settings<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ProSettings <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> BasicLayoutProps <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">rightContentRender</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>RightContent <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    disableContentMargin<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">footerRender</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    menuHeaderRender<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>initialState<span class=\"token operator\">?.</span>settings<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在 V4 中我们将 layout 的配置放到了 model 中，在 V5 中我们将其放入了  <code>initialState</code> 中，还有非常重要的用户信息也在  <code>initialState</code>进行了初始化。 默认配置中的 <code>layout</code>  属性变为   <code>'side' | 'top' | 'mix'</code>，这里需要注意一下，默认是 <code>mix</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getInitialState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n  currentUser<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser<span class=\"token punctuation\">;</span>\n  settings<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ProSettings<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 如果是登录页面，不执行</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">!==</span> <span class=\"token string\">'/user/login'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> currentUser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">queryCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        currentUser<span class=\"token punctuation\">,</span>\n        settings<span class=\"token operator\">:</span> defaultSettings<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    settings<span class=\"token operator\">:</span> defaultSettings<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这里是 Footer 的配置可以修改为自己需要的。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GithubOutlined <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ant-design/icons'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DefaultFooter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@ant-design/pro-layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>DefaultFooter\n    copyright<span class=\"token operator\">=</span><span class=\"token string\">\"2019 蚂蚁金服体验技术部出品\"</span>\n    links<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        key<span class=\"token operator\">:</span> <span class=\"token string\">'Ant Design Pro'</span><span class=\"token punctuation\">,</span>\n        title<span class=\"token operator\">:</span> <span class=\"token string\">'Ant Design Pro'</span><span class=\"token punctuation\">,</span>\n        href<span class=\"token operator\">:</span> <span class=\"token string\">'https://pro.ant.design'</span><span class=\"token punctuation\">,</span>\n        blankTarget<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        key<span class=\"token operator\">:</span> <span class=\"token string\">'github'</span><span class=\"token punctuation\">,</span>\n        title<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>GithubOutlined <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        href<span class=\"token operator\">:</span> <span class=\"token string\">'https://github.com/ant-design/ant-design-pro'</span><span class=\"token punctuation\">,</span>\n        blankTarget<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        key<span class=\"token operator\">:</span> <span class=\"token string\">'Ant Design'</span><span class=\"token punctuation\">,</span>\n        title<span class=\"token operator\">:</span> <span class=\"token string\">'Ant Design'</span><span class=\"token punctuation\">,</span>\n        href<span class=\"token operator\">:</span> <span class=\"token string\">'https://ant.design'</span><span class=\"token punctuation\">,</span>\n        blankTarget<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"权限\" style=\"position:relative;\"><a href=\"#%E6%9D%83%E9%99%90\" aria-label=\"权限 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>权限</h2>\n<p>我们的权限改造也依赖了它，对于原来的权限我们可以完全将其删除, 并且在  <code>src/access.ts</code>  增加相应的权限标识，以 pro 为例，我们只使用了 <code>canAdmin</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// src/access.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>initialState<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> currentUser<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span>CurrentUser <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> currentUser <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> initialState <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    canAdmin<span class=\"token operator\">:</span> currentUser <span class=\"token operator\">&amp;&amp;</span> currentUser<span class=\"token punctuation\">.</span>access <span class=\"token operator\">===</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>迁移之后我们就可以将原来的权限组件删除。 <code>src/utils/Authorized.ts</code>,<code>src/utils/authority.ts</code>,<code>src/components/Authorized/**</code>。</p>\n<p>在 config.ts 的 router 中我们需要删除 <code>authority</code>，修改为 <code>access: 'canAdmin'</code> 同时我们可以 util 中的所有关于权限的方法。</p>\n<p>对于运行时的代码，我们提供了两个 API 来帮助我们自定义任何形态的 UI 和逻辑，这里有个一看就懂的 demo。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useAccess<span class=\"token punctuation\">,</span> Access <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PageA</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> foo <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> access <span class=\"token operator\">=</span> <span class=\"token function\">useAccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// access 的成员: canAdmin</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>access<span class=\"token punctuation\">.</span>canReadFoo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 如果可以读取 Foo，则...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Access accessible<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>access<span class=\"token punctuation\">.</span>canAdmin<span class=\"token punctuation\">}</span> fallback<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Can not read foo content<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        Foo content<span class=\"token punctuation\">.</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Access<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Access accessible<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>access<span class=\"token punctuation\">.</span><span class=\"token function\">canDeleteFoo</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> fallback<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Can not <span class=\"token keyword\">delete</span> foo<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        Delete foo<span class=\"token punctuation\">.</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Access<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"请求\" style=\"position:relative;\"><a href=\"#%E8%AF%B7%E6%B1%82\" aria-label=\"请求 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>请求</h2>\n<p>原有的项目中 request 定义在 <code>src/utils/request.ts</code>中，在 V5 中需要用 umi 中 import ，各项配置需要写在 app.ts 中进行实现。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RequestConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> request<span class=\"token operator\">:</span> RequestConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  timeout<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n  errorConfig<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  middlewares<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  requestInterceptors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  responseInterceptors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  errorHandler<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>V5 中还自带了 useRequest hooks ，很多页面并不需要数据共享，我们可以用 useRequest 来快速的网络请求，并且内置了 loading 和 run 来指示状态和重新请求数据，使用方式极为简单。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRequest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">,</span> loading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> services<span class=\"token punctuation\">.</span><span class=\"token function\">getUserList</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"其他杂项\" style=\"position:relative;\"><a href=\"#%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9\" aria-label=\"其他杂项 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他杂项</h2>\n<p>由于将所有的逻辑做了拆离，很多依赖都不在需要了，我们可以将其中一些依赖进行删除来增加依赖的安装速度。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">path-to-regexp\nreact-helmet-async\njsdom-global\nenzyme\nchalk\ncheckFiles</code></pre></div>\n<p>现在 layout 作为插件会一直包裹在最外层，如果我们想在某个路由中不使用 layout，可以在菜单中配置 layout=false 来隐藏。详细的配置可以看<a href=\"https://umijs.org/zh-CN/plugins/plugin-layout#layout\">这里</a>。</p>\n<p>对于 SettingDrawer，为了方便集成和部署，我们开发了 <code>umi-plugin-setting-drawer</code> ,只要在项目中安装这个插件即可快速使用。</p>","tableOfContents":"<ul>\n<li><a href=\"/docs/upgrade-v5-cn/#initialstate\">initialState</a></li>\n<li><a href=\"/docs/upgrade-v5-cn/#layout\">Layout</a></li>\n<li><a href=\"/docs/upgrade-v5-cn/#%E6%9D%83%E9%99%90\">权限</a></li>\n<li><a href=\"/docs/upgrade-v5-cn/#%E8%AF%B7%E6%B1%82\">请求</a></li>\n<li><a href=\"/docs/upgrade-v5-cn/#%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9\">其他杂项</a></li>\n</ul>","frontmatter":{"title":"升级到 V5","order":92,"type":"其它"},"fields":{"path":"/docs/upgrade-v5.zh-CN.md","slug":"/docs/upgrade-v5-cn","modifiedTime":1620370023850,"avatarList":"[]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"文档总览","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/overview-cn","path":"/docs/overview.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":3,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新手需知","order":4,"type":"入门","time":null},"fields":{"slug":"/docs/introduction-cn","path":"/docs/introduction.zh-CN.md"}}},{"node":{"frontmatter":{"title":"启动项目","order":10,"type":"基础使用","time":null},"fields":{"slug":"/docs/development-cn","path":"/docs/development.zh-CN.md"}}},{"node":{"frontmatter":{"title":"路由和菜单","order":10,"type":"页面开发","time":null},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":"环境变量","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/environment-manage-cn","path":"/docs/environment-manage.zh-CN.md"}}},{"node":{"frontmatter":{"title":"布局","order":11,"type":"页面开发","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"图表","order":15,"type":"页面开发","time":null},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":16,"type":"页面开发","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"简易数据流","order":19,"type":"数据管理","time":null},"fields":{"slug":"/docs/simple-model-cn","path":"/docs/simple-model.zh-CN.md"}}},{"node":{"frontmatter":{"title":"使用 css","order":20,"type":"样式和资源","time":null},"fields":{"slug":"/docs/css-cn","path":"/docs/css.zh-CN.md"}}},{"node":{"frontmatter":{"title":"文件夹结构","order":21,"type":"基础使用","time":null},"fields":{"slug":"/docs/folder-cn","path":"/docs/folder.zh-CN.md"}}},{"node":{"frontmatter":{"title":"CSS Modules","order":22,"type":"样式和资源","time":null},"fields":{"slug":"/docs/css-modules-cn","path":"/docs/css-modules.zh-CN.md"}}},{"node":{"frontmatter":{"title":"使用 less","order":23,"type":"样式和资源","time":null},"fields":{"slug":"/docs/less-cn","path":"/docs/less.zh-CN.md"}}},{"node":{"frontmatter":{"title":"添加图片，字体和文件","order":24,"type":"样式和资源","time":null},"fields":{"slug":"/docs/adding-images-fonts-and-files-cn","path":"/docs/adding-images-fonts-and-files.zh-CN.md"}}},{"node":{"frontmatter":{"title":"OpenAPI","order":30,"type":"后端集成","time":null},"fields":{"slug":"/docs/openapi-cn","path":"/docs/openapi.zh-CN.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":30,"type":"数据管理","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"标题和加载页","order":30,"type":"构建和部署","time":null},"fields":{"slug":"/docs/title-landing-cn","path":"/docs/title-landing.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Pro 资产的使用","order":30,"type":"高级使用","time":null},"fields":{"slug":"/docs/assets-cn","path":"/docs/assets.zh-CN.md"}}},{"node":{"frontmatter":{"title":"网络请求","order":31,"type":"后端集成","time":null},"fields":{"slug":"/docs/request-cn","path":"/docs/request.zh-CN.md"}}},{"node":{"frontmatter":{"title":"构建","order":31,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/lint-cn","path":"/docs/lint.zh-CN.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/type-script-cn","path":"/docs/typeScript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":31,"type":"高级使用","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"代理","order":32,"type":"后端集成","time":null},"fields":{"slug":"/docs/proxy-cn","path":"/docs/proxy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"全局初始数据","order":32,"type":"数据管理","time":null},"fields":{"slug":"/docs/initial-state-cn","path":"/docs/initial-state.zh-CN.md"}}},{"node":{"frontmatter":{"title":"部署","order":32,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"菜单的高级用法","order":32,"type":"高级使用","time":null},"fields":{"slug":"/docs/advanced-menu-cn","path":"/docs/advanced-menu.zh-CN.md"}}},{"node":{"frontmatter":{"title":"测试","order":32,"type":"高级使用","time":null},"fields":{"slug":"/docs/test-cn","path":"/docs/test.zh-CN.md"}}},{"node":{"frontmatter":{"title":"调试","order":34,"type":"后端集成","time":null},"fields":{"slug":"/docs/debug-cn","path":"/docs/debug.zh-CN.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":91,"type":"其它","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"升级到 V5","order":92,"type":"其它","time":null},"fields":{"slug":"/docs/upgrade-v5-cn","path":"/docs/upgrade-v5.zh-CN.md"}}},{"node":{"frontmatter":{"title":"设计资源","order":94,"type":"其它","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/upgrade-v5-cn","type":"/docs/","locale":"/-cn/"}},"staticQueryHashes":[]}