{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/router-and-nav-cn","result":{"data":{"markdownRemark":{"html":"<p>路由和菜单是组织起一个应用的关键骨架，pro 中的路由为了方便管理，使用了中心化的方式，在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/33f562974d1c72e077652223bd816a57933fe242/config/config.ts\"><code>config.ts</code></a> 统一配置和管理。</p>\n<h2 id=\"基本结构\" style=\"position:relative;\"><a href=\"#%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\" aria-label=\"基本结构 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基本结构</h2>\n<p>在这一部分，脚手架通过结合一些配置文件、基本算法及工具函数，搭建好了路由和菜单的基本框架，主要涉及以下几个模块/功能：</p>\n<ul>\n<li><code>路由管理</code> 通过约定的语法根据在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/33f562974d1c72e077652223bd816a57933fe242/config/config.ts\"><code>config.ts</code></a> 中配置路由。</li>\n<li><code>菜单生成</code> 根据路由配置来生成菜单。菜单项名称，嵌套路径与路由高度耦合。</li>\n<li><code>面包屑</code> 组件 <a href=\"https://github.com/ant-design/ant-design-pro-layout#pageheaderwrapper\">PageHeaderWrapper</a> 中内置的面包屑,也可通过 <a href=\"/blog/new-pro-use-cn#routecontext\">RouteContext</a> 提供的信息自定义生成。</li>\n</ul>\n<p>下面简单介绍下各个模块的基本思路，如果你对实现过程不感兴趣，只想了解应该怎么实现相关需求，可以直接查看<a href=\"/docs/router-and-nav-cn#%E9%9C%80%E6%B1%82%E5%AE%9E%E4%BE%8B\">需求实例</a>。</p>\n<h3 id=\"路由\" style=\"position:relative;\"><a href=\"#%E8%B7%AF%E7%94%B1\" aria-label=\"路由 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>路由</h3>\n<p>目前脚手架中所有的路由都通过 <a href=\"https://github.com/ant-design/ant-design-pro/blob/33f562974d1c72e077652223bd816a57933fe242/config/config.ts\"><code>config.ts</code></a> 来统一管理，在 umi 的配置中我们增加了一些参数，如 <code>name</code>，<code>icon</code>，<code>hideChildrenInMenu</code>，<code>authority</code>，来辅助生成菜单。其中：</p>\n<ul>\n<li><code>name</code> 和 <code>icon</code>分别代表生成菜单项的文本和图标。</li>\n<li><code>hideChildrenInMenu</code> 用于隐藏不需要在菜单中展示的子路由。用法可以查看 <code>分步表单</code> 的配置。</li>\n<li><code>hideInMenu</code> 可以在菜单中不展示这个路由，包括子路由。</li>\n<li>\n<p><code>authority</code> 用来配置这个路由的权限，如果配置了将会验证当前用户的权限，并决定是否展示。</p>\n<blockquote>\n<p>你可能注意到配置中的 <code>name</code> 和菜单实际展示的不同，这是因为我们使用了全球化组件的原因，具体参见 <a href=\"/docs/i18n\">i18n</a></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"菜单\" style=\"position:relative;\"><a href=\"#%E8%8F%9C%E5%8D%95\" aria-label=\"菜单 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>菜单</h3>\n<p>菜单根据 <a href=\"https://github.com/ant-design/ant-design-pro/blob/33f562974d1c72e077652223bd816a57933fe242/config/config.ts\"><code>config.ts</code></a> 生成。</p>\n<blockquote>\n<p>如果你的项目并不需要菜单，你可以在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/src/layouts/BasicLayout.tsx#L116\">src/layouts/BasicLayout.tsx</a> 中设置 <code>menuRender={false}</code>。</p>\n</blockquote>\n<h3 id=\"从服务器请求菜单\" style=\"position:relative;\"><a href=\"#%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%B7%E6%B1%82%E8%8F%9C%E5%8D%95\" aria-label=\"从服务器请求菜单 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>从服务器请求菜单</h3>\n<p>你可以在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/4420ae2c224144c4114e5384bddc3e8ab0e1dc1c/src/layouts/BasicLayout.tsx#L116\">src/layouts/BasicLayout.tsx</a> 中修改 <code>menuDataRender</code>，并在代码中发起 http 请求，只需服务器返回下面格式的 json 即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>menuData<span class=\"token punctuation\">,</span> setMenuData<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 这里是一个演示用法</span>\n  <span class=\"token comment\">// 真实项目中建议使用 dva dispatch 或者 umi-request</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/example.json'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setMenuData</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>ProLayout\n    <span class=\"token comment\">// ...</span>\n    menuDataRender<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> menuData<span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code>menuData</code> 数据格式如下，ts 定义在此：<a href=\"https://github.com/ant-design/ant-design-pro-layout/blob/56590a06434c3d0e77dbddcd2bc60827c9866706/src/typings.ts#L18\">MenuDataItem</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/dashboard\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dashboard\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dashboard\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"children\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/dashboard/analysis\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"analysis\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/dashboard/monitor\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"monitor\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/dashboard/workplace\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"workplace\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ....</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p>注意 path 必须要在 config.ts 中定义。（约定式路由不需要，只需页面真实有效即可）注意 如果没有选用 typescript，config.js 中菜单的嵌套写法，需要把 \"children\" 换成 \"routes\"</p>\n</blockquote>\n<h3 id=\"面包屑\" style=\"position:relative;\"><a href=\"#%E9%9D%A2%E5%8C%85%E5%B1%91\" aria-label=\"面包屑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>面包屑</h3>\n<p>面包屑由 <code>PageHeaderWrapper</code> 实现，<code>Layout</code> 将 根据 <code>MenuData</code> 生成的 <code>breadcrumb</code>，并通过 PageHeaderWrapper 将其展现。 PageHeaderWrapper 封装至 Ant Design 的 <a href=\"https://ant.design/components/page-header-cn\">PageHeader</a>，api 完全相同。</p>\n<h2 id=\"需求实例\" style=\"position:relative;\"><a href=\"#%E9%9C%80%E6%B1%82%E5%AE%9E%E4%BE%8B\" aria-label=\"需求实例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>需求实例</h2>\n<p>上面对这部分的实现概要进行了介绍，接下来通过实际的案例来说明具体该怎么做。</p>\n<h3 id=\"菜单跳转到外部地址\" style=\"position:relative;\"><a href=\"#%E8%8F%9C%E5%8D%95%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%A4%96%E9%83%A8%E5%9C%B0%E5%9D%80\" aria-label=\"菜单跳转到外部地址 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>菜单跳转到外部地址</h3>\n<p>你可以直接将完整 url 填入 path 中，框架会自动处理。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'https://pro.ant.design/docs/getting-started-cn'</span><span class=\"token punctuation\">,</span>\n    target<span class=\"token operator\">:</span> <span class=\"token string\">'_blank'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 点击新窗口打开</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"文档\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果你需要自定义 menuItem 的点击逻辑，你可以通过 <a href=\"https://github.com/ant-design/ant-design-pro/blob/e14b1311d5efdd032a04d86ed4ed80292b832822/src/layouts/BasicLayout.tsx#L103\">menuItemRender</a> 的来实现。</p>\n<h3 id=\"新增页面\" style=\"position:relative;\"><a href=\"#%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2\" aria-label=\"新增页面 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新增页面</h3>\n<blockquote>\n<p>通过区块新增请阅读 <a href=\"/docs/block-cn\">Block</a></p>\n</blockquote>\n<p>脚手架默认提供了两种布局模板：<code>基础布局 - BasicLayout</code> 以及 <code>账户相关布局 - UserLayout</code>：</p>\n<p> <img alt=\"基础布局\" src=\"https://gw.alipayobjects.com/zos/rmsportal/oXmyfmffJVvdbmDoGvuF.png\" /> </p>\n<p> <img alt=\"账户相关布局\" src=\"https://gw.alipayobjects.com/zos/rmsportal/mXsydBXvLqBVEZLMssEy.png\" /> </p>\n<p>如果你的页面可以利用这两种布局，那么只需要在路由配置中增加一条即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token comment\">// app</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token operator\">:</span> <span class=\"token string\">'../layouts/BasicLayout'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// dashboard</span>\n      <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> redirect<span class=\"token operator\">:</span> <span class=\"token string\">'/dashboard/analysis'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> path <span class=\"token operator\">:</span><span class=\"token string\">'/dashboard/test'</span><span class=\"token punctuation\">,</span>component<span class=\"token operator\">:</span><span class=\"token string\">\"./Dashboard/Test\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>加好后，会默认生成相关的路由及导航。</p>\n<h3 id=\"新增布局\" style=\"position:relative;\"><a href=\"#%E6%96%B0%E5%A2%9E%E5%B8%83%E5%B1%80\" aria-label=\"新增布局 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新增布局</h3>\n<p>在脚手架中我们通过嵌套路由来实现布局模板。<a href=\"https://github.com/ant-design/ant-design-pro/blob/33f562974d1c72e077652223bd816a57933fe242/config/config.ts\"><code>config.ts</code></a> 是一个数组，其中第一级数据就是我们的布局，如果你需要新增布局可以再直接增加一个新的一级数据。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token comment\">// user</span>\n   <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/user'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token operator\">:</span> <span class=\"token string\">'../layouts/UserLayout'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">// app</span>\n   <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token operator\">:</span> <span class=\"token string\">'../layouts/BasicLayout'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">// new</span>\n   <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/new'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token operator\">:</span> <span class=\"token string\">'../layouts/new_page'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"在菜单中使用自定义图标\" style=\"position:relative;\"><a href=\"#%E5%9C%A8%E8%8F%9C%E5%8D%95%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%87\" aria-label=\"在菜单中使用自定义图标 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>在菜单中使用自定义图标</h3>\n<p>由于 umi 的限制，在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/33f562974d1c72e077652223bd816a57933fe242/config/config.ts\"><code>config.ts</code></a> 是不能直接使用 React 组件的，Pro 中暂时支持使用 <a href=\"https://ant.design/components/icon-cn/\"><code>ant.design</code></a> 本身的 icon <code>type</code>，和传入一个 img 的 url。只需要直接在 icon 属性上配置即可，如果是个 url，Pro 会自动处理为一个 img 标签。</p>\n<blockquote>\n<p>如果你想使用 iconfont 的图标，你可以使用<a href=\"https://ant.design/components/icon-cn/#%E8%87%AA%E5%AE%9A%E4%B9%25\">ant.design</a>的自定义图标.</p>\n</blockquote>\n<h3 id=\"带参数的路由\" style=\"position:relative;\"><a href=\"#%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E8%B7%AF%E7%94%B1\" aria-label=\"带参数的路由 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>带参数的路由</h3>\n<p>脚手架默认支持带参数的路由，但是在菜单中显示带参数的路由并不是个好主意，我们并不会自动的帮你注入一个参数，你可能需要在代码中自行处理。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  path<span class=\"token operator\">:</span> <span class=\"token string\">'/dashboard/:page'</span><span class=\"token punctuation\">,</span>\n  hideInMenu<span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'analysis'</span><span class=\"token punctuation\">,</span>\n  component<span class=\"token operator\">:</span> <span class=\"token string\">'./Dashboard/Analysis'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>你可以通过以下代码来跳转到这个路由：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/router'</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/dashboard/anyParams'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//or</span>\n\n<span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/link'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/dashboard/anyParams\"</span><span class=\"token operator\">></span>go<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在路由组件中，可以通过<code>this.props.match.params</code> 来获得路由参数。</p>\n<p>更多详细内容请参见：<a href=\"https://umijs.org/guide/router.html#%E7%BA%A6%E5%AE%9A%E5%BC%8F%E8%B7%AF%E7%94%B1\">umi#路由</a></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/router-and-nav-cn/#%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\">基本结构</a></p>\n<ul>\n<li><a href=\"/docs/router-and-nav-cn/#%E8%B7%AF%E7%94%B1\">路由</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E8%8F%9C%E5%8D%95\">菜单</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%B7%E6%B1%82%E8%8F%9C%E5%8D%95\">从服务器请求菜单</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E9%9D%A2%E5%8C%85%E5%B1%91\">面包屑</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/router-and-nav-cn/#%E9%9C%80%E6%B1%82%E5%AE%9E%E4%BE%8B\">需求实例</a></p>\n<ul>\n<li><a href=\"/docs/router-and-nav-cn/#%E8%8F%9C%E5%8D%95%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%A4%96%E9%83%A8%E5%9C%B0%E5%9D%80\">菜单跳转到外部地址</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2\">新增页面</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E6%96%B0%E5%A2%9E%E5%B8%83%E5%B1%80\">新增布局</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E5%9C%A8%E8%8F%9C%E5%8D%95%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%87\">在菜单中使用自定义图标</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E8%B7%AF%E7%94%B1\">带参数的路由</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"路由和菜单","order":3,"type":"开发"},"fields":{"path":"/docs/router-and-nav.zh-CN.md","slug":"/docs/router-and-nav-cn","modifiedTime":1597397286248,"avatarList":"[{\"username\":\"chenshuai2144\",\"url\":\"https://avatars1.githubusercontent.com/u/8186664?s=40&v=4\"},{\"username\":\"afc163\",\"url\":\"https://avatars0.githubusercontent.com/u/507615?s=40&v=4\"},{\"username\":\"m4jing\",\"url\":\"https://avatars0.githubusercontent.com/u/2697870?s=40&v=4\"},{\"username\":\"K68\",\"url\":\"https://avatars3.githubusercontent.com/u/9476589?s=40&v=4\"},{\"username\":\"xiaohuoni\",\"url\":\"https://avatars3.githubusercontent.com/u/11746742?s=40&v=4\"},{\"username\":\"Mikasa33\",\"url\":\"https://avatars0.githubusercontent.com/u/29498153?s=40&v=4\"},{\"username\":\"YoungHu\",\"url\":\"https://avatars0.githubusercontent.com/u/7418602?s=40&v=4\"},{\"username\":\"gengxichao\",\"url\":\"https://avatars2.githubusercontent.com/u/2309152?s=40&v=4\"},{\"username\":\"ddcat1115\",\"url\":\"https://avatars2.githubusercontent.com/u/7017767?s=40&v=4\"},{\"username\":\"crazyurus\",\"url\":\"https://avatars0.githubusercontent.com/u/2209055?s=40&v=4\"},{\"username\":\"iDivines\",\"url\":\"https://avatars1.githubusercontent.com/u/16111063?s=40&v=4\"},{\"username\":\"kaoding\",\"url\":\"https://avatars3.githubusercontent.com/u/18542211?s=40&v=4\"},{\"username\":\"leshalv\",\"url\":\"https://avatars2.githubusercontent.com/u/30397655?s=40&v=4\"}]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"社区推荐","order":24,"type":"其他","time":null},"fields":{"slug":"/docs/from-community-cn","path":"/docs/from-community.zh-CN.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":24,"type":"进阶","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"设计资源","order":23,"type":"其他","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":22,"type":"入门","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"错误处理","order":17,"type":"进阶","time":null},"fields":{"slug":"/docs/error-handle-cn","path":"/docs/error-handle.zh-CN.md"}}},{"node":{"frontmatter":{"title":"UI 测试","order":15,"type":"进阶","time":null},"fields":{"slug":"/docs/ui-test-cn","path":"/docs/ui-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":"区块","order":14,"type":"开发","time":null},"fields":{"slug":"/docs/block-cn","path":"/docs/block.zh-CN.md"}}},{"node":{"frontmatter":{"title":"更换主题","order":14,"type":"进阶","time":null},"fields":{"slug":"/docs/theme-cn","path":"/docs/theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Mock 和联调","order":13,"type":"开发","time":null},"fields":{"slug":"/docs/mock-api-cn","path":"/docs/mock-api.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":13,"type":"进阶","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"业务图标","order":12,"type":"进阶","time":null},"fields":{"slug":"/docs/biz-icon-cn","path":"/docs/biz-icon.zh-CN.md"}}},{"node":{"frontmatter":{"title":"图表","order":11,"type":"进阶","time":null},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":"引入外部模块","order":8,"type":"开发","time":null},"fields":{"slug":"/docs/import-cn","path":"/docs/import.zh-CN.md"}}},{"node":{"frontmatter":{"title":"和服务端进行交互","order":7,"type":"开发","time":null},"fields":{"slug":"/docs/server-cn","path":"/docs/server.zh-CN.md"}}},{"node":{"frontmatter":{"title":"使用 TypeScript","order":7,"type":"进阶","time":null},"fields":{"slug":"/docs/uset-typescript-cn","path":"/docs/uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"修改样式","order":6,"type":"开发","time":null},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":"动态主题","order":5,"type":"开发","time":null},"fields":{"slug":"/docs/dynamic-theme-cn","path":"/docs/dynamic-theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增业务组件","order":5,"type":"开发","time":null},"fields":{"slug":"/docs/new-component-cn","path":"/docs/new-component.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":4,"type":"开发","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"可用的脚本","order":3,"type":"入门","time":null},"fields":{"slug":"/docs/available-script-cn","path":"/docs/available-script.zh-CN.md"}}},{"node":{"frontmatter":{"title":"路由和菜单","order":3,"type":"开发","time":null},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":"快速升级到 umi@3","order":2,"type":"入门","time":null},"fields":{"slug":"/docs/upgrade-umi3-cn","path":"/docs/upgrade-umi3.zh-CN.md"}}},{"node":{"frontmatter":{"title":"升级到 4.0 版本","order":2,"type":"入门","time":null},"fields":{"slug":"/docs/upgrade-v4-cn","path":"/docs/upgrade-v4.zh-CN.md"}}},{"node":{"frontmatter":{"title":"部署","order":2,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开始使用（蚂蚁金服用户）","order":1,"type":"入门","time":null},"fields":{"slug":"/docs/getting-start-inner-cn","path":"/docs/getting-start-inner.zh-CN.md"}}},{"node":{"frontmatter":{"title":"布局","order":1,"type":"开发","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"构建","order":1,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"环境变量","order":0,"type":"构建和部署","time":null},"fields":{"slug":"/docs/environment-variables-cn","path":"/docs/environment-variables.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/router-and-nav-cn","type":"/docs/","locale":"/-cn/"}},"staticQueryHashes":[]}