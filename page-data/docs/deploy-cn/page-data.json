{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/deploy-cn","result":{"data":{"markdownRemark":{"html":"<p>Pro 默认提供了 mock 数据，但是在 build 之后 mock 数据将不再起作用。如果你仍想使用这些数据来搭建演示站点，你可以通过 <a href=\"https://www.npmjs.com/package/umi-serve\">umi-serve</a> 来启动一个 express 服务。这个服务与 mock 的数据是相同的。</p>\n<h2 id=\"部署\" style=\"position:relative;\"><a href=\"#%E9%83%A8%E7%BD%B2\" aria-label=\"部署 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>部署</h2>\n<p>如果你只是简单的部署，你只需要将整个 dist 文件夹复制到你的 CDN 或静态服务器。index.html 应该是你的服务器入口。</p>\n<h2 id=\"前端路由与服务端的结合\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%94%B1%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%9A%84%E7%BB%93%E5%90%88\" aria-label=\"前端路由与服务端的结合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前端路由与服务端的结合</h2>\n<blockquote>\n<p>如果你遇到 <code>https://cdn.com/users/123</code> 刷新后 404 的问题，你需要按照这个章节进行处理。</p>\n</blockquote>\n<p>Ant Design Pro 使用的 Umi 支持两种路由方式：<code>browserHistory</code> 和 <code>hashHistory</code>。</p>\n<p>可以在 <code>config/config.ts</code> 中进行配置选择用哪个方式：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  history<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'hash'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 默认是 browser</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code>hashHistory</code> 使用如 <code>https://cdn.com/#/users/123</code> 这样的 URL，取井号后面的字符作为路径。<code>browserHistory</code> 则直接使用 <code>https://cdn.com/users/123</code> 这样的 URL。使用 <code>hashHistory</code> 时浏览器访问到的始终都是根目录下 <code>index.html</code>。使用 <code>browserHistory</code> 则需要服务器做好处理 URL 的准备，处理应用启动最初的 <code>/</code> 这样的请求应该没问题，但当用户来回跳转并在 <code>/users/123</code> 刷新时，服务器就会收到来自 <code>/users/123</code> 的请求，这时你需要配置服务器能处理这个 URL 返回正确的 <code>index.html</code>。强烈推荐使用默认的 <code>browserHistory</code>。</p>\n<h2 id=\"部署到非根目录\" style=\"position:relative;\"><a href=\"#%E9%83%A8%E7%BD%B2%E5%88%B0%E9%9D%9E%E6%A0%B9%E7%9B%AE%E5%BD%95\" aria-label=\"部署到非根目录 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>部署到非根目录</h2>\n<p>部署在非根目录时一种常见的需求，比如部署在 GitHub pages 中。接下来我们假设我们要部署项目到 <code>${host}/admin</code> 中。首先我们需要在 <code>config/config.ts</code> 中配置 <a href=\"https://umijs.org/zh/config/#base\">base</a>,<code>base</code> 是 react-router 的前缀。我们需要将 base 配置为 <code>admin</code>, 如果我们还需要将其部署到 <code>/admin</code> 目录中，我们还需要设置 <a href=\"https://umijs.org/zh/config/#publicpath\"><code>publicPath</code></a>。设置完之后是这样的：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... some config</span>\n  base<span class=\"token operator\">:</span> <span class=\"token string\">'/admin/'</span><span class=\"token punctuation\">,</span>\n  publicPath<span class=\"token operator\">:</span> <span class=\"token string\">'/admin/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>接下来我们就可以在 <code>${host}/admin</code> 中访问我们的静态文件了。值得注意的是，在 dev 模式下 url 路径同样也会被修改。</p>\n<h2 id=\"部署到不同的平台\" style=\"position:relative;\"><a href=\"#%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%E5%B9%B3%E5%8F%B0\" aria-label=\"部署到不同的平台 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>部署到不同的平台</h2>\n<h3 id=\"使用-nginx\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-nginx\" aria-label=\"使用 nginx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 nginx</h3>\n<p>nginx 作为最流行的 web 容器之一，配置和使用相当简单，只要简单的配置就能拥有高性能和高可用。推荐使用 nginx 托管。示例配置如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">server {\n    listen 80;\n    # gzip config\n    gzip on;\n    gzip_min_length 1k;\n    gzip_comp_level 9;\n    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n    gzip_vary on;\n    gzip_disable &quot;MSIE [1-6]\\.&quot;;\n\n    root /usr/share/nginx/html;\n\n    location / {\n        # 用于配合 browserHistory使用\n        try_files $uri $uri/ /index.html;\n\n        # 如果有资源，建议使用 https + http2，配合按需加载可以获得更好的体验\n        # rewrite ^/(.*)$ https://preview.pro.ant.design/$1 permanent;\n\n    }\n    location /api {\n        proxy_pass https://ant-design-pro.netlify.com;\n        proxy_set_header   X-Forwarded-Proto $scheme;\n        proxy_set_header   X-Real-IP         $remote_addr;\n    }\n}\n\nserver {\n  # 如果有资源，建议使用 https + http2，配合按需加载可以获得更好的体验\n  listen 443 ssl http2 default_server;\n\n  # \b证书的公私钥\n  ssl_certificate /path/to/public.crt;\n  ssl_certificate_key /path/to/private.key;\n\n  location / {\n        # 用于配合 browserHistory使用\n        try_files $uri $uri/ /index.html;\n\n  }\n  location /api {\n      proxy_pass https://ant-design-pro.netlify.com;\n      proxy_set_header   X-Forwarded-Proto $scheme;\n      proxy_set_header   Host              $http_host;\n      proxy_set_header   X-Real-IP         $remote_addr;\n  }\n}</code></pre></div>\n<h3 id=\"使用-spring-boot\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-spring-boot\" aria-label=\"使用 spring boot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 spring boot</h3>\n<p>Spring Boot 是使用最多的 java 框架，只需要简单的几步就可以与 Ant Design Pro 进行整合。</p>\n<p>首先运行 build</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm run build</code></pre></div>\n<p>然后将编译之后的文件复制到 spring boot 项目的 <code>/src/main/resources/static</code> 目录下。</p>\n<p>重新启动项目，访问 <code>http://localhost:8080/</code> 就可以看到效果。</p>\n<p>为了方便做整合，最好使用 hash 路由。如果你想使用 browserHistory ，可以创建一个 controller ，并添加如下代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/**\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ApiResult</span> <span class=\"token function\">api</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> apiProxy<span class=\"token punctuation\">.</span><span class=\"token function\">proxy</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">=</span><span class=\"token class-name\">HTTPMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"index\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>注意 pro 并没有提供 java 的 api 接口实现，如果只是为了预览 demo，可以使用反向代理到 <code>https://preview.pro.ant.design</code>。</p>\n</blockquote>\n<h3 id=\"使用-express\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-express\" aria-label=\"使用 express permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 express</h3>\n<p><a href=\"http://expressjs.com/\">express</a> 的例子</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.use(express.static(path.join(__dirname, &#39;build&#39;)));\n\napp.get(&#39;/*&#39;, function (req, res) {\n  res.sendFile(path.join(__dirname, &#39;build&#39;, &#39;index.html&#39;));\n});</code></pre></div>\n<h3 id=\"使用-egg\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-egg\" aria-label=\"使用 egg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 egg</h3>\n<p><a href=\"https://eggjs.org/\">egg</a> 的例子</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// controller\nexports.index = function* () {\n  yield this.render(&#39;App.jsx&#39;, {\n    context: {\n      user: this.session.user,\n    },\n  });\n};\n\n// router\napp.get(&#39;home&#39;, &#39;/*&#39;, &#39;home.index&#39;);</code></pre></div>\n<p>关于路由更多可以参看 <a href=\"https://umijs.org/zh/guide/router.html\">Umi 的路由文档</a> 。</p>","tableOfContents":"<ul>\n<li><a href=\"/docs/deploy-cn/#%E9%83%A8%E7%BD%B2\">部署</a></li>\n<li><a href=\"/docs/deploy-cn/#%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%94%B1%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%9A%84%E7%BB%93%E5%90%88\">前端路由与服务端的结合</a></li>\n<li><a href=\"/docs/deploy-cn/#%E9%83%A8%E7%BD%B2%E5%88%B0%E9%9D%9E%E6%A0%B9%E7%9B%AE%E5%BD%95\">部署到非根目录</a></li>\n<li>\n<p><a href=\"/docs/deploy-cn/#%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%8D%E5%90%8C%E7%9A%84%E5%B9%B3%E5%8F%B0\">部署到不同的平台</a></p>\n<ul>\n<li><a href=\"/docs/deploy-cn/#%E4%BD%BF%E7%94%A8-nginx\">使用 nginx</a></li>\n<li><a href=\"/docs/deploy-cn/#%E4%BD%BF%E7%94%A8-spring-boot\">使用 spring boot</a></li>\n<li><a href=\"/docs/deploy-cn/#%E4%BD%BF%E7%94%A8-express\">使用 express</a></li>\n<li><a href=\"/docs/deploy-cn/#%E4%BD%BF%E7%94%A8-egg\">使用 egg</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"部署","order":32,"type":"构建和部署"},"fields":{"path":"/docs/deploy.zh-CN.md","slug":"/docs/deploy-cn","modifiedTime":1604542255847,"avatarList":"[{\"username\":\"chenshuai2144\",\"url\":\"https://avatars1.githubusercontent.com/u/8186664?s=40&v=4\"},{\"username\":\"yesmeck\",\"url\":\"https://avatars3.githubusercontent.com/u/465125?s=40&v=4\"},{\"username\":\"i1mT\",\"url\":\"https://avatars1.githubusercontent.com/u/13428808?s=40&v=4\"},{\"username\":\"Liqiankun\",\"url\":\"https://avatars3.githubusercontent.com/u/11532418?s=40&v=4\"},{\"username\":\"juzhiyuan\",\"url\":\"https://avatars3.githubusercontent.com/u/2106987?s=40&v=4\"},{\"username\":\"meigesir\",\"url\":\"https://avatars0.githubusercontent.com/u/1229786?s=40&v=4\"},{\"username\":\"coldice945\",\"url\":\"https://avatars3.githubusercontent.com/u/18394852?s=40&v=4\"},{\"username\":\"Ccheng2729111\",\"url\":\"https://avatars1.githubusercontent.com/u/20785387?s=40&v=4\"},{\"username\":\"afc163\",\"url\":\"https://avatars0.githubusercontent.com/u/507615?s=40&v=4\"},{\"username\":\"zwOvO\",\"url\":\"https://avatars3.githubusercontent.com/u/18533252?s=40&v=4\"},{\"username\":\"xiaohuoni\",\"url\":\"https://avatars3.githubusercontent.com/u/11746742?s=40&v=4\"},{\"username\":\"Jiangwr\",\"url\":\"https://avatars1.githubusercontent.com/u/19362571?s=40&v=4\"}]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"设计资源","order":94,"type":"其它","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":"升级到 V5","order":92,"type":"其它","time":null},"fields":{"slug":"/docs/upgrade-v5-cn","path":"/docs/upgrade-v5.zh-CN.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":91,"type":"其它","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"部署","order":32,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"构建","order":31,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/lint-cn","path":"/docs/lint.zh-CN.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/type-script-cn","path":"/docs/typeScript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"菜单的高级用法","order":22,"type":"高级使用","time":null},"fields":{"slug":"/docs/advanced-menu-cn","path":"/docs/advanced-menu.zh-CN.md"}}},{"node":{"frontmatter":{"title":"测试","order":22,"type":"高级使用","time":null},"fields":{"slug":"/docs/test-cn","path":"/docs/test.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":21,"type":"高级使用","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":20,"type":"基础使用","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"简易数据流","order":19,"type":"基础使用","time":null},"fields":{"slug":"/docs/simple-model-cn","path":"/docs/simple-model.zh-CN.md"}}},{"node":{"frontmatter":{"title":"全局初始数据","order":18,"type":"基础使用","time":null},"fields":{"slug":"/docs/initial-state-cn","path":"/docs/initial-state.zh-CN.md"}}},{"node":{"frontmatter":{"title":"修改样式","order":17,"type":"基础使用","time":null},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":16,"type":"基础使用","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"内置布局","order":15,"type":"基础使用","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"网络请求","order":14,"type":"基础使用","time":null},"fields":{"slug":"/docs/request-cn","path":"/docs/request.zh-CN.md"}}},{"node":{"frontmatter":{"title":"调试","order":12,"type":"基础使用","time":null},"fields":{"slug":"/docs/debug-cn","path":"/docs/debug.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开发","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/development-cn","path":"/docs/development.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Pro 资产的使用","order":11,"type":"高级使用","time":null},"fields":{"slug":"/docs/assets-cn","path":"/docs/assets.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":1,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"介绍","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/introduction-cn","path":"/docs/introduction.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/deploy-cn","type":"/docs/","locale":"/-cn/"}},"staticQueryHashes":[]}