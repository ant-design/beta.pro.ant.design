{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/server-cn","result":{"data":{"markdownRemark":{"html":"<p>Ant Design Pro 是一套基于 React 技术栈的单页面应用，我们提供的是前端代码和本地模拟数据的开发模式，通过 API 的形式和任何技术栈的服务端应用一起工作。下面将简单介绍和服务端交互的基本写法。</p>\n<h2 id=\"前端请求流程\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E7%AB%AF%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B\" aria-label=\"前端请求流程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前端请求流程</h2>\n<p>在 Ant Design Pro 中，一个完整的前端 UI 交互到服务端处理流程是这样的：</p>\n<ol>\n<li>UI 组件交互操作；</li>\n<li>调用 model 的 effect；</li>\n<li>调用统一管理的 service 请求函数；</li>\n<li>使用封装的 request.ts 发送请求；</li>\n<li>获取服务端返回；</li>\n<li>然后调用 reducer 改变 state；</li>\n<li>更新 model。</li>\n</ol>\n<p>从上面的流程可以看出，为了方便管理维护，统一的请求处理都放在 <code>services</code> 文件夹中，并且一般按照 model 维度进行拆分文件，如：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">services/\n  user.ts\n  api.ts\n  ...</code></pre></div>\n<p>其中，<code>utils/request.ts</code> 是基于 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\">fetch</a> 的封装，便于统一处理 POST，GET 等请求参数，请求头，以及错误提示信息等。具体可以参看 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/src/utils/request.ts\">request.ts</a>。</p>\n<p>例如在 services 中的一个请求用户信息的例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// services/user.ts</span>\n<span class=\"token keyword\">import</span> request <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils/request'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">queryCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/currentUser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// models/user.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> queryCurrent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../services/user'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\neffects<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">*</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> payload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> call<span class=\"token punctuation\">,</span> put <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>queryCurrent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"处理异步请求\" style=\"position:relative;\"><a href=\"#%E5%A4%84%E7%90%86%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82\" aria-label=\"处理异步请求 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>处理异步请求</h3>\n<p>在处理复杂的异步请求的时候，很容易让逻辑混乱，陷入嵌套陷阱，所以 Ant Design Pro 的底层基础框架 <a href=\"https://github.com/dvajs/dva\">dva</a> 使用 <code>effect</code> 的方式来管理同步化异步请求：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">effects<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">*</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> payload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> call<span class=\"token punctuation\">,</span> put <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'changeLoading'</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 异步请求 1</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>queryFakeList<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'save'</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token operator\">:</span> response<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 异步请求 2</span>\n    <span class=\"token keyword\">const</span> response2 <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>queryFakeList2<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'save2'</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token operator\">:</span> response2<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'changeLoading'</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>通过 <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Statements/function*\">generator</a> 和 <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Operators/yield\">yield</a> 使得异步调用的逻辑处理跟同步一样，更多可参看 <a href=\"https://github.com/dvajs/dva/blob/master/docs/GettingStarted.md#async-logic\">dva async logic</a>。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/server-cn/#%E5%89%8D%E7%AB%AF%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B\">前端请求流程</a></p>\n<ul>\n<li><a href=\"/docs/server-cn/#%E5%A4%84%E7%90%86%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82\">处理异步请求</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"和服务端进行交互","order":7,"type":"开发"},"fields":{"path":"/docs/server.zh-CN.md","slug":"/docs/server-cn","modifiedTime":1597397286248,"avatarList":"[{\"username\":\"chenshuai2144\",\"url\":\"https://avatars1.githubusercontent.com/u/8186664?s=40&v=4\"},{\"username\":\"yesmeck\",\"url\":\"https://avatars3.githubusercontent.com/u/465125?s=40&v=4\"},{\"username\":\"valleykid\",\"url\":\"https://avatars0.githubusercontent.com/u/1892857?s=40&v=4\"},{\"username\":\"johnsken-jerry\",\"url\":\"https://avatars3.githubusercontent.com/u/18255445?s=40&v=4\"},{\"username\":\"k983551019\",\"url\":\"https://avatars0.githubusercontent.com/u/48147837?s=40&v=4\"}]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"社区推荐","order":24,"type":"其他","time":null},"fields":{"slug":"/docs/from-community-cn","path":"/docs/from-community.zh-CN.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":24,"type":"进阶","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"设计资源","order":23,"type":"其他","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":22,"type":"入门","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"错误处理","order":17,"type":"进阶","time":null},"fields":{"slug":"/docs/error-handle-cn","path":"/docs/error-handle.zh-CN.md"}}},{"node":{"frontmatter":{"title":"UI 测试","order":15,"type":"进阶","time":null},"fields":{"slug":"/docs/ui-test-cn","path":"/docs/ui-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":"区块","order":14,"type":"开发","time":null},"fields":{"slug":"/docs/block-cn","path":"/docs/block.zh-CN.md"}}},{"node":{"frontmatter":{"title":"更换主题","order":14,"type":"进阶","time":null},"fields":{"slug":"/docs/theme-cn","path":"/docs/theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Mock 和联调","order":13,"type":"开发","time":null},"fields":{"slug":"/docs/mock-api-cn","path":"/docs/mock-api.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":13,"type":"进阶","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"业务图标","order":12,"type":"进阶","time":null},"fields":{"slug":"/docs/biz-icon-cn","path":"/docs/biz-icon.zh-CN.md"}}},{"node":{"frontmatter":{"title":"图表","order":11,"type":"进阶","time":null},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":"引入外部模块","order":8,"type":"开发","time":null},"fields":{"slug":"/docs/import-cn","path":"/docs/import.zh-CN.md"}}},{"node":{"frontmatter":{"title":"和服务端进行交互","order":7,"type":"开发","time":null},"fields":{"slug":"/docs/server-cn","path":"/docs/server.zh-CN.md"}}},{"node":{"frontmatter":{"title":"使用 TypeScript","order":7,"type":"进阶","time":null},"fields":{"slug":"/docs/uset-typescript-cn","path":"/docs/uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"修改样式","order":6,"type":"开发","time":null},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":"动态主题","order":5,"type":"开发","time":null},"fields":{"slug":"/docs/dynamic-theme-cn","path":"/docs/dynamic-theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增业务组件","order":5,"type":"开发","time":null},"fields":{"slug":"/docs/new-component-cn","path":"/docs/new-component.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":4,"type":"开发","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"可用的脚本","order":3,"type":"入门","time":null},"fields":{"slug":"/docs/available-script-cn","path":"/docs/available-script.zh-CN.md"}}},{"node":{"frontmatter":{"title":"路由和菜单","order":3,"type":"开发","time":null},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":"快速升级到 umi@3","order":2,"type":"入门","time":null},"fields":{"slug":"/docs/upgrade-umi3-cn","path":"/docs/upgrade-umi3.zh-CN.md"}}},{"node":{"frontmatter":{"title":"升级到 4.0 版本","order":2,"type":"入门","time":null},"fields":{"slug":"/docs/upgrade-v4-cn","path":"/docs/upgrade-v4.zh-CN.md"}}},{"node":{"frontmatter":{"title":"部署","order":2,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开始使用（蚂蚁金服用户）","order":1,"type":"入门","time":null},"fields":{"slug":"/docs/getting-start-inner-cn","path":"/docs/getting-start-inner.zh-CN.md"}}},{"node":{"frontmatter":{"title":"布局","order":1,"type":"开发","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"构建","order":1,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"环境变量","order":0,"type":"构建和部署","time":null},"fields":{"slug":"/docs/environment-variables-cn","path":"/docs/environment-variables.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/server-cn","type":"/docs/","locale":"/-cn/"}},"staticQueryHashes":[]}