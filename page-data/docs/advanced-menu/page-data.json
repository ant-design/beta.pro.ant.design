{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/advanced-menu","result":{"data":{"markdownRemark":{"html":"<p>Pro Intermediate will re-read the config / config.tsx Intermediate Route and configure it as the ProLayout menu data to generate the menu, and cooperate with [plugin-access`] (<a href=\"https://umijs.org/plugins/plugin-access\">https://umijs.org/plugins/plugin-access</a>). It is convenient to manage the authority of this menu. This mode can meet most of the needs, but the complexity of the business is always there, and sometimes it requires some advanced usage.</p>\n<h2 id=\"request-the-menu-from-the-server\" style=\"position:relative;\"><a href=\"#request-the-menu-from-the-server\" aria-label=\"request the menu from the server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Request the menu from the server</h2>\n<p>In some cases, hard-coded menu data may not meet our needs. Pro also provides corresponding solutions for remote menu data requests. Here we need to use two APIs to complete the configuration. <code>menuDataRender</code> can customize the data format, <code>menu.loading</code> can make the menu display in a loading state.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> layout <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  initialState<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  initialState<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    settings<span class=\"token operator\">?</span><span class=\"token operator\">:</span> LayoutSettings<span class=\"token punctuation\">;</span>\n    menuData<span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BasicLayoutProps</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">;\n    currentUser?: API.CurrentUser;\n  };\n}): BasicLayoutProps => </span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">menuDataRender</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">menuData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> initialState<span class=\"token punctuation\">.</span>menuData <span class=\"token operator\">||</span> menuData<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>initialState<span class=\"token operator\">?.</span>settings<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token plain-text\">;</span></code></pre></div>\n<p>In this way, we can use <code>initialState</code>to complete the update of the menu, we need to write the following code in <code>src/app.tsx</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getInitialState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n  settings<span class=\"token operator\">?</span><span class=\"token operator\">:</span> LayoutSettings<span class=\"token punctuation\">;</span>\n  menuData<span class=\"token operator\">:</span> MenuDataItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If it is a login page, do not execute</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">!==</span> <span class=\"token string\">'/user/login'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> currentUser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">queryMenuData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      menuData<span class=\"token punctuation\">,</span>\n      settings<span class=\"token operator\">:</span> defaultSettings<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    menuData<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    settings<span class=\"token operator\">:</span> defaultSettings<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If we need to reset the menu on the page, we can update it through <code>useModel</code>. The code looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> initialState<span class=\"token punctuation\">,</span> setInitialState <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useModel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@@initialState'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchMenuData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setInitialState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>initialState<span class=\"token punctuation\">,</span>\n    settings<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        loading<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> menuData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getMenuData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setInitialState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>initialState<span class=\"token punctuation\">,</span>\n    menuData<span class=\"token punctuation\">,</span>\n    settings<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        loading<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Since hooks need to be placed at the top of the component, this code should be placed at the top of a component.</p>\n<h2 id=\"custom-highlight\" style=\"position:relative;\"><a href=\"#custom-highlight\" aria-label=\"custom highlight permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom highlight</h2>\n<p>Most of the time, the highlighting of the menu can be satisfied by the parent-child relationship, and we also recommend this usage. Add a page with additions, deletions and changes, which can be set as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  path<span class=\"token operator\">:</span> <span class=\"token string\">'/product'</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Product Management'</span><span class=\"token punctuation\">,</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/product'</span><span class=\"token punctuation\">,</span> redirect<span class=\"token operator\">:</span> <span class=\"token string\">'product/list'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/list'</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'Product List'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/new'</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'New product'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/:id'</span><span class=\"token punctuation\">,</span>\n      hideInMenu<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'Product Details'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/update/:id'</span><span class=\"token punctuation\">,</span>\n      hideInMenu<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'Modify product'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This kind of routing is very standard and can be perfectly consumed by ProLayout, and the highlight can be displayed correctly, but not all menus can be so standardized. ProLayout also provides a way to redirect the highlight of the menu. If we want <code>/list/:id</code>, highlighting <code>/product</code> can be configured like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/product'</span><span class=\"token punctuation\">,</span>\n    hideInMenu<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Product Management'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/list/:id'</span><span class=\"token punctuation\">,</span>\n    hideInMenu<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'List details'</span><span class=\"token punctuation\">,</span>\n    parentKeys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/product'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In this way, you can also highlight <code>/product</code> in the path of <code>/list/:id</code>. The <code>key</code> in <code>parentKeys</code> is generally a path. If it is not convenient to set the flower as a path, you can add the key in the menu configuration Attribute, Layout will use the configured <code>Key</code> attribute first.</p>\n<h2 id=\"change-the-layout-according-to-the-path\" style=\"position:relative;\"><a href=\"#change-the-layout-according-to-the-path\" aria-label=\"change the layout according to the path permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Change the layout according to the path</h2>\n<p>In some complex paths, we may need to display different interfaces according to different url's.</p>\n<p>For example, we don't need the left menu when creating new ones. If we use traditional methods to implement it, we need to perform different configurations based on <code>pathname</code>. The implementation cost is relatively high. In order to reduce the implementation cost, we have added some conventions in the <code>routers</code> configuration.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/product'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Do not show the menu</span>\n    menuRender<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Product Management'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">'/list/:id'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Use the top menu when editing</span>\n    layout<span class=\"token operator\">:</span> <span class=\"token string\">'top'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'List details'</span><span class=\"token punctuation\">,</span>\n    parentKeys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/product'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In this way, the menu is not displayed when in <code>/product</code>, and the top menu is displayed when in <code>/list/:id</code>. The following api can be configured in the menu.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Setting</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * Do not show the top bar when @name is false\n   */</span>\n  headerRender<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * Do not show footer when @name is false\n   */</span>\n  footerRender<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * Do not show the menu when @name is false\n   */</span>\n  menuRender<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * When @name is false, the menu top bar is not displayed\n   */</span>\n  menuHeaderRender<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @name fixed top bar\n   **/</span>\n  fixedHeader<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @name fixed menu\n   */</span>\n  fixSiderbar<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @name theme for nav menu\n   * @name the theme of the navigation menu\n   */</span>\n  navTheme<span class=\"token operator\">:</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'realDark'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @name nav menu position: `side` or `top`\n   * @name Navigation menu location\n   * @description side is the normal mode, the top menu is displayed at the top, and mix is ​​available\n   */</span>\n  layout<span class=\"token operator\">:</span> <span class=\"token string\">'side'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'mix'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @name Top navigation theme, mix mode takes effect\n   */</span>\n  headerTheme<span class=\"token operator\">:</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/docs/advanced-menu/#request-the-menu-from-the-server\">Request the menu from the server</a></li>\n<li><a href=\"/docs/advanced-menu/#custom-highlight\">Custom highlight</a></li>\n<li><a href=\"/docs/advanced-menu/#change-the-layout-according-to-the-path\">Change the layout according to the path</a></li>\n</ul>","frontmatter":{"title":"Advanced menu","order":22,"type":"Advanced Usage"},"fields":{"path":"/docs/advanced-menu.en-US.md","slug":"/docs/advanced-menu","modifiedTime":1609233524531,"avatarList":"[]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Design Kit","order":94,"type":"Other","time":null},"fields":{"slug":"/docs/resource","path":"/docs/resource.en-US.md"}}},{"node":{"frontmatter":{"title":"设计资源","order":94,"type":"其它","time":null},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Upgrade to V5","order":92,"type":"Other","time":null},"fields":{"slug":"/docs/upgrade-v5","path":"/docs/upgrade-v5.en-US.md"}}},{"node":{"frontmatter":{"title":"升级到 V5","order":92,"type":"其它","time":null},"fields":{"slug":"/docs/upgrade-v5-cn","path":"/docs/upgrade-v5.zh-CN.md"}}},{"node":{"frontmatter":{"title":"FAQ","order":91,"type":"Other","time":null},"fields":{"slug":"/docs/faq","path":"/docs/faq.en-US.md"}}},{"node":{"frontmatter":{"title":"常见问题","order":91,"type":"其它","time":null},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Deployment","order":32,"type":"Build & Deployment","time":null},"fields":{"slug":"/docs/deploy","path":"/docs/deploy.en-US.md"}}},{"node":{"frontmatter":{"title":"部署","order":32,"type":"构建和部署","time":null},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Build","order":31,"type":"Build & Deployment","time":null},"fields":{"slug":"/docs/build","path":"/docs/build.en-US.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"Code Style","time":null},"fields":{"slug":"/docs/lint","path":"/docs/lint.en-US.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"Code Style","time":null},"fields":{"slug":"/docs/type-script","path":"/docs/typeScript.en-US.md"}}},{"node":{"frontmatter":{"title":"构建","order":31,"type":"构建和部署","time":null},"fields":{"slug":"/docs/build-cn","path":"/docs/build.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Lint","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/lint-cn","path":"/docs/lint.zh-CN.md"}}},{"node":{"frontmatter":{"title":"TypeScript","order":31,"type":"编码规范","time":null},"fields":{"slug":"/docs/type-script-cn","path":"/docs/typeScript.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Advanced menu","order":22,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/advanced-menu","path":"/docs/advanced-menu.en-US.md"}}},{"node":{"frontmatter":{"title":"i18n","order":22,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/i18n","path":"/docs/i18n.en-US.md"}}},{"node":{"frontmatter":{"title":"Test","order":22,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/test","path":"/docs/test.en-US.md"}}},{"node":{"frontmatter":{"title":"菜单的高级用法","order":22,"type":"高级使用","time":null},"fields":{"slug":"/docs/advanced-menu-cn","path":"/docs/advanced-menu.zh-CN.md"}}},{"node":{"frontmatter":{"title":"测试","order":22,"type":"高级使用","time":null},"fields":{"slug":"/docs/test-cn","path":"/docs/test.zh-CN.md"}}},{"node":{"frontmatter":{"title":"国际化","order":21,"type":"高级使用","time":null},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Permission Management","order":20,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/authority-management","path":"/docs/authority-management.en-US.md"}}},{"node":{"frontmatter":{"title":"权限管理","order":20,"type":"基础使用","time":null},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Simple Model","order":19,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/simple-model","path":"/docs/simple-model.en-US.md"}}},{"node":{"frontmatter":{"title":"简易数据流","order":19,"type":"基础使用","time":null},"fields":{"slug":"/docs/simple-model-cn","path":"/docs/simple-model.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Global Initial State","order":18,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/initial-state","path":"/docs/initial-state.en-US.md"}}},{"node":{"frontmatter":{"title":"全局初始数据","order":18,"type":"基础使用","time":null},"fields":{"slug":"/docs/initial-state-cn","path":"/docs/initial-state.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Edit Style","order":17,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/style","path":"/docs/style.en-US.md"}}},{"node":{"frontmatter":{"title":"修改样式","order":17,"type":"基础使用","time":null},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":"新增页面","order":16,"type":"基础使用","time":null},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":"New Page","order":15,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/new-page","path":"/docs/new-page.en-US.md"}}},{"node":{"frontmatter":{"title":"内置布局","order":15,"type":"基础使用","time":null},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Layout","order":14,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/layout","path":"/docs/layout.en-US.md"}}},{"node":{"frontmatter":{"title":"Request","order":14,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/request","path":"/docs/request.en-US.md"}}},{"node":{"frontmatter":{"title":"网络请求","order":14,"type":"基础使用","time":null},"fields":{"slug":"/docs/request-cn","path":"/docs/request.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Debug","order":13,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/debug","path":"/docs/debug.en-US.md"}}},{"node":{"frontmatter":{"title":"Use Pro's Assets","order":12,"type":"Advanced Usage","time":null},"fields":{"slug":"/docs/assets","path":"/docs/assets.en-US.md"}}},{"node":{"frontmatter":{"title":"调试","order":12,"type":"基础使用","time":null},"fields":{"slug":"/docs/debug-cn","path":"/docs/debug.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Development","order":11,"type":"Basic Usage","time":null},"fields":{"slug":"/docs/development","path":"/docs/development.en-US.md"}}},{"node":{"frontmatter":{"title":"环境","order":11,"type":"基础使用","time":null},"fields":{"slug":"/docs/environment-manage-cn","path":"/docs/environment-manage.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Pro 资产的使用","order":11,"type":"高级使用","time":null},"fields":{"slug":"/docs/assets-cn","path":"/docs/assets.zh-CN.md"}}},{"node":{"frontmatter":{"title":"开发","order":10,"type":"基础使用","time":null},"fields":{"slug":"/docs/development-cn","path":"/docs/development.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Getting Started","order":1,"type":"Introduction","time":null},"fields":{"slug":"/docs/getting-started","path":"/docs/getting-started.en-US.md"}}},{"node":{"frontmatter":{"title":"开始使用","order":1,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Introduction","order":0,"type":"Introduction","time":null},"fields":{"slug":"/docs/introduction","path":"/docs/introduction.en-US.md"}}},{"node":{"frontmatter":{"title":"介绍","order":0,"type":"入门","time":null},"fields":{"slug":"/docs/introduction-cn","path":"/docs/introduction.zh-CN.md"}}}]}},"pageContext":{"slug":"/docs/advanced-menu","type":"/docs/","locale":"//"}},"staticQueryHashes":[]}