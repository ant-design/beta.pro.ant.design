{"componentChunkName":"component---src-templates-docs-tsx","path":"/blog/proxy-cn","result":{"data":{"markdownRemark":{"html":"<p>在前后端分离的今天，跨域也成了每个前端工程师都需要了解的基本知识，在各种面试题中的日经话题。这个文章就是想总结一下关于同源策略的前世今生，以及怎么解决它。</p>\n<h3 id=\"同源策略\" style=\"position:relative;\"><a href=\"#%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5\" aria-label=\"同源策略 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>同源策略</h3>\n<p>在 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy\">MDN</a>中我们可以看到关于同源策略是一个安全机制。详细的说明如下：</p>\n<blockquote>\n<p>同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。</p>\n</blockquote>\n<p>这个机制本身出发点是很好的，但是同源的限制非常严格，url，端口任一不同都会造成跨域错误。</p>\n<p>而且在控制台中你不会发现任何问题。随着前后端分离越来越普遍，这件事就越来越常见。那么它应该如何解决呢?</p>\n<p><img src=\"https://gw.alipayobjects.com/zos/antfincdn/NIALgXw4QG/1574263212481-55d42245-f348-4f55-8508-4475f7e1f05d.png\" alt=\"图像 1.png\"></p>\n<p>同源策略全称叫《浏览器的同源策略》，它是浏览器内建的一种安全机制。那么我们不要使用浏览器请求就能完美解决问题了。对于前端来说最方便的自然就是 node.js 了。</p>\n<h3 id=\"在开发中使用\" style=\"position:relative;\"><a href=\"#%E5%9C%A8%E5%BC%80%E5%8F%91%E4%B8%AD%E4%BD%BF%E7%94%A8\" aria-label=\"在开发中使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>在开发中使用</h3>\n<p>现在市面上所有的脚手架都提供了 <a href=\"https://webpack.js.org/configuration/dev-server/#devserverproxy\">proxy</a> 的能力，底层基于 <a href=\"https://github.com/chimurai/http-proxy-middleware\">http-proxy-middleware</a>, 这个包可以把所有符合正则匹配的请求转发到某个地址，下面是个简单的 demo：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> proxy <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http-proxy-middleware'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target<span class=\"token operator\">:</span> <span class=\"token string\">'http://www.example.org'</span><span class=\"token punctuation\">,</span> changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// http://localhost:3000/api/foo/bar -> http://www.example.org/api/foo/bar</span></code></pre></div>\n<p>这个配置可以将所有 <code>/api</code>  开头的请求转到到 <code>http://www.example.org/</code> ,并且附带所有的参数，包括头信息和 cookie。有一点需要注意的是，在浏览器控制台里看到的仍然是   <code>http://localhost:3000/api/xxx</code> ,转化的步骤是在 node.js 中完成。</p>\n<p>在 Pro 中是用 proxy 更加简单在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/4c6a11eedad8baee97022ee452cedc76f097421a/config/config.ts#L185\">config.ts</a>  中配置即可，配置出来可能是这样的：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'/server/api/'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      target<span class=\"token operator\">:</span> <span class=\"token string\">'https://preview.pro.ant.design/'</span><span class=\"token punctuation\">,</span>\n      changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'^/server'</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>详细的配置建议直接查看 <a href=\"https://webpack.js.org/configuration/dev-server/#devserverproxy\">webpack-dev</a>  的配置。</p>\n<h3 id=\"cors\" style=\"position:relative;\"><a href=\"#cors\" aria-label=\"cors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CORS</h3>\n<p>如果觉得以上改动需要配置比较麻烦，系统又比较简单，无需引入新的复杂度。我们可以使用 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS\"><code>CORS</code></a> 的方式来允许跨域调用，在 express 中可以这么设置：</p>\n<h4 id=\"express-中的配置\" style=\"position:relative;\"><a href=\"#express-%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE\" aria-label=\"express 中的配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>express 中的配置</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'你的项目地址，用*将会带来安全问题'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Headers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Methods'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json;charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"nginx-中的配置\" style=\"position:relative;\"><a href=\"#nginx-%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE\" aria-label=\"nginx 中的配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nginx 中的配置</h4>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">^</span><span class=\"token operator\">~</span> <span class=\"token operator\">/</span>api <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">proxy_set_header</span> Origin <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">add_header</span> Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span><span class=\"token keyword\">Allow</span><span class=\"token operator\">-</span>Credentials <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">add_header</span> Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span><span class=\"token keyword\">Allow</span><span class=\"token operator\">-</span>Headers <span class=\"token variable\">$http_access_control_request_headers</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">add_header</span> Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span><span class=\"token keyword\">Allow</span><span class=\"token operator\">-</span>Methods POST<span class=\"token punctuation\">,</span>GET<span class=\"token punctuation\">,</span>OPTIONS<span class=\"token punctuation\">,</span>DELETE<span class=\"token punctuation\">,</span>PUT<span class=\"token punctuation\">,</span>HEAD<span class=\"token punctuation\">,</span>PATCH<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">add_header</span> Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span><span class=\"token keyword\">Allow</span><span class=\"token operator\">-</span>Origin <span class=\"token variable\">$http_origin</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">add_header</span> Access<span class=\"token operator\">-</span>Control<span class=\"token operator\">-</span>Expose<span class=\"token operator\">-</span>Headers <span class=\"token variable\">$http_access_control_request_headers</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$request_method</span> <span class=\"token operator\">=</span> <span class=\"token string\">'OPTIONS'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">204</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$request_method</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'OPTIONS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">proxy_pass</span> <span class=\"token string\">\"你的项目地址\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>需要注意的是，目前 nginx 1.7.5 之前的版本，add_header 只对 2xx，3xx 的请求生效，5xx 的请求无法增加 header，仍会被浏览器跨域策略拦截，在 5xx 请求的 body 中包含的错误信息，前端无法获取到。</p>\n</blockquote>\n<h4 id=\"java-手动配置\" style=\"position:relative;\"><a href=\"#java-%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE\" aria-label=\"java 手动配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>java 手动配置</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpErrorResponseUtil</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setResponeCorsHeader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Credentials\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Methods\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"POST,GET,OPTIONS,DELETE,PUT,HEAD,PATCH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Origin\"</span><span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Origin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Headers\"</span><span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Request-Headers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>在别的语言中方法也大同小异，最重要的是 <code>Access-Control-Allow-Origin</code>  <code>Access-Control-Allow-Headers</code> <code>Access-Control-Allow-Methods</code>  头的相应设置。</p>\n<p>在这里强烈建议每个人通读一下 MDN 的  <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS\">HTTP 访问控制</a> ，这篇图文并茂的文章可以解决跨域百分之八十的疑惑。</p>\n<h3 id=\"高级用法\" style=\"position:relative;\"><a href=\"#%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95\" aria-label=\"高级用法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>高级用法</h3>\n<p>在开发中我们可能需要区分多种情况，比如开发环境，测试环境，语法环境，在 Pro 中我们可以通过的环境变量来实现这个需求。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> serveUrlMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  dev<span class=\"token operator\">:</span> <span class=\"token string\">'https://dev.pro.ant.design/'</span><span class=\"token punctuation\">,</span>\n  pre<span class=\"token operator\">:</span> <span class=\"token string\">'https://pre.pro.ant.design/'</span><span class=\"token punctuation\">,</span>\n  test<span class=\"token operator\">:</span> <span class=\"token string\">'https://test.pro.ant.design/'</span><span class=\"token punctuation\">,</span>\n  idc<span class=\"token operator\">:</span> <span class=\"token string\">'https://idc.pro.ant.design/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">SERVE_ENV</span> <span class=\"token operator\">=</span> <span class=\"token string\">'idc'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ....</span>\n  proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'/server/api/'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      target<span class=\"token operator\">:</span> serveUrlMap<span class=\"token punctuation\">[</span><span class=\"token constant\">SERVE_ENV</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'^/server'</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>我们只要在 package.json 中配置好各种快捷命令，就可以做到快速切换。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start:dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env SERVE_ENV=dev umi dev\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start:pre\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env SERVE_ENV=pre umi dev\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start:test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env SERVE_ENV=test umi dev\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>这里值得注意的是 config.ts 的环境为 node.js 的环境，里面是无法使用 dom 和浏览器的相关行为的。</p>\n</blockquote>","tableOfContents":"<ul>\n<li><a href=\"/blog/proxy-cn/#%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5\">同源策略</a></li>\n<li><a href=\"/blog/proxy-cn/#%E5%9C%A8%E5%BC%80%E5%8F%91%E4%B8%AD%E4%BD%BF%E7%94%A8\">在开发中使用</a></li>\n<li>\n<p><a href=\"/blog/proxy-cn/#cors\">CORS</a></p>\n<ul>\n<li><a href=\"/blog/proxy-cn/#express-%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE\">express 中的配置</a></li>\n<li><a href=\"/blog/proxy-cn/#nginx-%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE\">nginx 中的配置</a></li>\n<li><a href=\"/blog/proxy-cn/#java-%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE\">java 手动配置</a></li>\n</ul>\n</li>\n<li><a href=\"/blog/proxy-cn/#%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95\">高级用法</a></li>\n</ul>","frontmatter":{"title":"同源策略 跨域与代理","order":7,"type":"Blog"},"fields":{"path":"/blog/proxy.zh-CN.md","slug":"/blog/proxy-cn","modifiedTime":1583932101836,"avatarList":"[{\"username\":\"chenshuai2144\",\"url\":\"https://avatars1.githubusercontent.com/u/8186664?s=40&v=4\"}]"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"黑色主题和动态切换","order":8,"type":"Blog","time":"2019-12-25T00:00:00.000Z"},"fields":{"slug":"/blog/dynamic-theme-cn","path":"/blog/dynamic-theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Layout 的全新样式","order":8,"type":"Blog","time":"2020-04-21T00:00:00.000Z"},"fields":{"slug":"/blog/layout-new-style-cn","path":"/blog/layout-new-style.zh-CN.md"}}},{"node":{"frontmatter":{"title":"同源策略 跨域与代理","order":7,"type":"Blog","time":"2019-11-24T00:00:00.000Z"},"fields":{"slug":"/blog/proxy-cn","path":"/blog/proxy.zh-CN.md"}}},{"node":{"frontmatter":{"title":"前端最佳实践即将发布","order":7,"type":"Blog","time":"2020-02-29T00:00:00.000Z"},"fields":{"slug":"/blog/best-front0end-cn","path":"/blog/best-front0end.zh-CN.md"}}},{"node":{"frontmatter":{"title":"ProTable 快速搭建 CRUD 的利器","order":7,"type":"Blog","time":"2020-03-01T00:00:00.000Z"},"fields":{"slug":"/blog/protable-cn","path":"/blog/protable.zh-CN.md"}}},{"node":{"frontmatter":{"title":"我们是如何部署开源项目的?","order":6,"type":"Blog","time":"2019-11-02T00:00:00.000Z"},"fields":{"slug":"/blog/deploy-pro-cn","path":"/blog/deploy-pro.zh-CN.md"}}},{"node":{"frontmatter":{"title":"迁移 antd@4 指南","order":6,"type":"Blog","time":"2020-01-16T00:00:00.000Z"},"fields":{"slug":"/blog/antd-4.0-cn","path":"/blog/antd-4.0.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Block 新升级","order":5,"type":"Blog","time":"2019-06-28T00:00:00.000Z"},"fields":{"slug":"/blog/better-block-cn","path":"/blog/better-block.zh-CN.md"}}},{"node":{"frontmatter":{"title":"在线更换主题","order":1,"type":"Blog","time":"2019-05-07T00:00:00.000Z"},"fields":{"slug":"/blog/change-theme-cn","path":"/blog/change-theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":"Pro 的 Layout 组件","order":1,"type":"Blog","time":"2019-05-08T00:00:00.000Z"},"fields":{"slug":"/blog/new-pro-use-cn","path":"/blog/new-pro-use.zh-CN.md"}}},{"node":{"frontmatter":{"title":"一起来用 eslint 吧","order":1,"type":"Blog","time":"2019-06-21T00:00:00.000Z"},"fields":{"slug":"/blog/use-eslint-typescript-cn","path":"/blog/use-eslint-typescript.zh-CN.md"}}}]}},"pageContext":{"slug":"/blog/proxy-cn","type":"/blog/","locale":"/-cn/"}},"staticQueryHashes":[]}