{"version":3,"sources":["webpack:///./src/components/Content/EditButton.tsx","webpack:///./src/components/Content/AvatarList.tsx","webpack:///./src/components/Content/Article.tsx","webpack:///./src/components/Content/MainContent.tsx","webpack:///./src/templates/docs.tsx"],"names":["EditButton","_ref","title","filename","_ref$sourcePath","sourcePath","external_React_default","a","createElement","tooltip_default","className","target","href","icon_default","type","AvatarList","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","stop","render","_this$props$avatarLis","this","props","avatarList","map","item","text","avatar_default","src","alt","size","React","Component","Article","delegation","delegate","node","e","window","ga","delegateTarget","componentWillUnmount","clearTimeout","pingTimer","destroy","_this","content","meta","subtitle","path","modifiedTime","locale","context","intl","_react_document_title_2_0_3_react_document_title_default","Fragment","ref","Content_EditButton","index_es","id","toc","length","affix_default","offsetTop","dangerouslySetInnerHTML","__html","replace","Content_AvatarList","moment","format","PureComponent","contextTypes","PropTypes","object","isRequired","SubMenu","getModuleDataWithProps","moduleData","menuList","excludedSuffix","isZhCN","location","pathname","filter","includes","isNotTopLevel","level","MainContent","_React$PureComponent","call","handleMenuOpenChange","openKeys","setState","convertFilename","generateMenuItem","_ref2","_ref2$before","before","_ref2$after","after","key","disabled","child","link","rel","gatsby_browser_entry","to","menu_default","Item","important","badge_default","dot","generateSubMenuItems","obj","footerNavIcons","topLevel","bind","assertThisInitialized_default","itemGroups","Object","keys","groupItems","sort","b","order","charCodeAt","concat","getMenuItems","menuItems","_ref5","getPreAndNext","localizedPageData","list","children","reduce","pre","index","findIndex","state","getSideBarOpenKeys","componentDidUpdate","componentWillReceiveProps","nextProps","hash","element","document","getElementById","decodeURIComponent","setTimeout","scrollIntoView","timer","find","_ref6","slug","_this$props","isMobile","activeMenuItem","endsWith","substring","_this$getPreAndNext","mainContainerClass","classNames","menuChild","inlineIndent","mode","selectedKeys","onOpenChange","row_default","es","iconChild","wrapperClassName","col_default","xxl","xl","lg","md","sm","xs","Article_Article","assign","span","offset","Template","data","rest","objectWithoutPropertiesLoose_default","markdownRemark","allMarkdownRemark","frontmatter","fields","html","tableOfContents","edges","newFrontmatter","transformerFrontmatter","layout","MainContent_MainContent","pageQuery"],"mappings":"miBAqBeA,EAdV,SAAAC,GAIC,IAHJC,EAGID,EAHJC,MACAC,EAEIF,EAFJE,SAEIC,EAAAH,EADJI,kBACI,IAAAD,EADS,gEACTA,EACJ,OACEE,EAAAC,EAAAC,cAAAC,EAAAF,EAAA,CAASL,MAAOA,GACdI,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAcC,OAAO,SAASC,KAAI,GAAKP,EAAaF,GAC/DG,EAAAC,EAAAC,cAAAK,EAAAN,EAAA,CAAMO,KAAK,sGCiBJC,oGArBPC,gDAAN,SAAAC,IAAA,OAAAC,EAAAX,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAG,SAAAN,6DACAO,OAAA,WAAS,IAAAC,EACqBC,KAAKC,MAAzBC,kBADD,IAAAH,EACc,GADdA,EAEP,OAAKG,EAIHtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACZkB,EAAWC,IAAI,SAAAC,GACd,OACExB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAWC,OAAO,SAASC,KAAI,oBAAsBkB,EAAKlB,MACrEN,EAAAC,EAAAC,cAAAC,EAAAF,EAAA,CAASL,MAAO4B,EAAKC,MACnBzB,EAAAC,EAAAC,cAAAwB,EAAAzB,EAAA,CAAQ0B,IAAKH,EAAKG,IAAKC,IAAKJ,EAAKC,KAAMI,KAAK,eAR/C,SAZYC,IAAMC,WCgBVC,oGAKnBtB,kBAAA,WAEEU,KAAKa,WAAaC,IAChBd,KAAKe,KACL,iBACA,QACA,SAACC,GACMC,OAAeC,IACjBD,OAAeC,GAAG,OAAQ,QAAS,WAAY,WAAYF,EAAEG,eAAejC,QAGjF,MAKJkC,qBAAA,WACEC,aAAarB,KAAKsB,WACdtB,KAAKa,YACPb,KAAKa,WAAWU,aAMpBzB,OAAA,WAAS,IAAA0B,EAAAxB,KAEDyB,EADQzB,KAAKC,MACGwB,QACdC,EAASD,EAATC,KACAlD,EAAoDkD,EAApDlD,MAAOmD,EAA6CD,EAA7CC,SAAUC,EAAmCF,EAAnCE,KAAMC,EAA6BH,EAA7BG,aAAc3B,EAAewB,EAAfxB,WAEnC4B,EACN9B,KAAK+B,QADPC,KAAQF,OAMV,OACElD,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CAAeL,OAAUA,EAAMsD,IAAWtD,GAAtB,iBAClBI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACEtD,EAAAC,EAAAC,cAAA,WACEE,UAAU,WACVmD,IAAK,SAAApB,GACHS,EAAKT,KAAOA,IAGdnC,EAAAC,EAAAC,cAAA,UACGN,EAAMsD,IAAWtD,EAChBmD,GAAuB,UAAXG,EACZlD,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAY2C,GADK,KAGnC/C,EAAAC,EAAAC,cAACsD,EAAD,CAAY5D,MAAOI,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAkBC,GAAG,0BAA4B7D,SAAUmD,MAG9EH,EAAQc,KAAOd,EAAQc,IAAIC,QAAU,IAAkB,IAAbd,EAAKa,IAAgB,KAC/D3D,EAAAC,EAAAC,cAAA2D,EAAA5D,EAAA,CAAOG,UAAU,YAAY0D,UAAW,IACtC9D,EAAAC,EAAAC,cAAA,OACE6D,wBAAyB,CACvBC,OAAQnB,EAAQc,IAAIM,QAAQ,QAAS,oBAAoBA,QAAQ,OAAQ,SAKjFjE,EAAAC,EAAAC,cAAA,WACEE,UAAU,yBACV2D,wBAAyB,CAAEC,OAAQnB,EAAQA,YAG/C7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAACgE,EAAD,CAAY5C,WAAYA,IACxBtB,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAkBC,GAAG,6BACpBS,IAAOlB,GAAcmB,OAAO,8BA5EJtC,IAAMuC,eAAtBrC,EACZsC,aAAe,CACpBlB,KAAMmB,IAAUC,OAAOC,yBCTnBC,cA2BR,SAASC,EAAuBtD,GAC9B,IAAMuD,EAAavD,EAAMwD,SACnBC,EAAiBC,YAAO1D,EAAM2D,SAASC,UAAY,QAAU,QACnE,OAAOL,EAAWM,OAAO,SAAAvF,GAAkB,IAAfE,EAAeF,EAAfE,SAC1B,QAAKA,KAGAA,EAASsF,SAAS,WAAatF,EAASsF,SAAS,UAG/CtF,EAASsF,SAASL,MAI7B,SAASM,EAAcC,GACrB,MAAiB,aAAVA,MAGYC,cAKnB,SAAAA,EAAYjE,GAAyB,IAAAuB,EAAA,OACnCA,EAAA2C,EAAAC,KAAApE,KAAMC,IAAND,MAqCFqE,qBAAuB,SAACC,GACtB9C,EAAK+C,SAAS,CACZD,cAxCiC9C,EAsDrCgD,gBAAkB,SAAC/F,GAAqB,IAExBoF,EACVrC,EAAKvB,MADP2D,SAAYC,SAEd,OAAIF,YAAOE,KAAcpF,EAASsF,SAAS,OAC/BtF,EAAV,MAEKA,GA7D4B+C,EAgErCiD,iBAAmB,SAAAC,EAAkCtE,GAAuB,IAAAuE,EAAAD,EAAtDE,cAAsD,IAAAD,EAA7C,KAA6CA,EAAAE,EAAAH,EAAvCI,aAAuC,IAAAD,EAA/B,KAA+BA,EAC1E,GAAKzE,EAAK5B,MAAV,CAD0E,IAKhEsD,EACNN,EAAKO,QADPC,KAAQF,OAMJzB,EAAO,CACXzB,EAAAC,EAAAC,cAAA,QAAMiG,IAAI,WAAW3E,EAAK5B,MAAMsD,IAAW1B,EAAK5B,OAChDI,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAU+F,IAAI,WAChB,UAAXjD,GAAsB1B,EAAKuB,WAI1BqD,EAAW5E,EAAK4E,SAEhBC,EAAS7E,EAAK8E,KAOlBtG,EAAAC,EAAAC,cAAA,KACEI,KAAMkB,EAAK8E,KACXjG,OAAO,SACPkG,IAAI,sBACJnG,UAAU,0BAET4F,EACAvE,EAPH,IAOSzB,EAAAC,EAAAC,cAAAK,EAAAN,EAAA,CAAMO,KAAK,WACjB0F,GAdHlG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,GAAI7D,EAAKgD,gBAAgBpE,EAAK3B,WACjCmG,EACAvE,EACAyE,GAcL,OACElG,EAAAC,EAAAC,cAAAwG,EAAAzG,EAAM0G,KAAN,CAAWR,IAAKvD,EAAKgD,gBAAgBpE,EAAK3B,UAAWuG,SAAUA,GAC5D5E,EAAKoF,UAAY5G,EAAAC,EAAAC,cAAA2G,EAAA5G,EAAA,CAAO6G,IAAKtF,EAAKoF,WAAYP,GAAiBA,KAxGjCzD,EA6GrCmE,qBAAuB,SAACC,EAAiBC,QAAwB,IAAxBA,MAAiB,IAAO,IAErD/D,EACNN,EAAKO,QADPC,KAAQF,OAMV,IAAK8D,EAAK,MAAO,GACjB,IAAME,GAAaF,EAAIE,UAA+B,IAAI3F,IACxDqB,EAAKiD,iBAAiBsB,KAAtBC,IAAAxE,GAAiCqE,IAE7BI,EAAaC,OAAOC,KAAKP,GAC5B9B,OAAOE,GACP7D,IAAI,SAAAf,GACH,IAAMgH,EAAcR,EAAIxG,GACrBiH,KAAK,SAACxH,EAAGyH,GACR,MAAI,UAAWzH,GAAK,UAAWyH,EACtBzH,EAAE0H,MAAQD,EAAEC,MAEd1H,EAAEL,MAAMsD,GAAQ0E,WAAW,GAAKF,EAAE9H,MAAMsD,GAAQ0E,WAAW,KAEnErG,IAAIqB,EAAKiD,iBAAiBsB,KAAtBC,IAAAxE,GAAiCqE,IACxC,OACEjH,EAAAC,EAAAC,cAACwE,EAAD,CAAS9E,MAAOY,EAAM2F,IAAK3F,GACxBgH,KAIT,SAAAK,OAAWX,EAAaG,IA1IWzE,EA6IrCkF,aAAe,SAACb,QAAwB,IAAxBA,MAAiB,IAC/B,IAAMrC,EAAaD,EAAuB/B,EAAKvB,OAErC6B,EACNN,EAAKO,QADPC,KAAQF,OAEJ6E,EAAuBD,YAAalD,EAAY1B,IAAW,GAC7DgE,EACFtE,EAAKmE,qBAAqBgB,EAAS,SAA2Bd,IAAmB,GAGnF,MADe,GAAAY,OAAIX,GAAUhC,OAAO,SAAA8C,GAAA,OAAAA,EAAG7B,OAtJJvD,EA0JrCqF,cAAgB,SAACF,GAAmB,IAGtBlI,EAER+C,EAAKvB,MAHP6G,kBACEpF,KAAQjD,SAINsI,EACJJ,EAAUnE,SAAWmE,EAAU,GAAG1G,MAAM+G,SAASxE,OAC7CmE,EACAT,OAAOC,KAAKQ,GAAWM,OAAO,SAACC,EAAKnC,GAClC,OAAOmC,EAAIT,OAAOE,EAAU5B,GAAK9E,MAAM+G,WACtC,IACHG,EAAQJ,EAAKK,UAAU,SAAChH,GAC5B,OAAOA,EAAK2E,MAAQtG,GAAY2B,EAAK2E,MAAWtG,EAAhB,QAGlC,OAAe,IAAX0I,EACK,GAEF,CACLxH,KAAMoH,EAAKI,EAAQ,GACnBvH,KAAMmH,EAAKI,EAAQ,KA9KrB3F,EAAK6F,MAAQ,CACX/C,SAAU9C,EAAK8F,mBAAmBrH,IAAU,IAHXuB,sCAOrClC,kBAAA,WACEU,KAAKuH,wBAGPC,0BAAA,SAA0BC,GACxB,IAAMnD,EAAWtE,KAAKsH,mBAAmBG,GACrCnD,GACFtE,KAAKuE,SAAS,CACZD,gBAKNiD,mBAAA,WACE,GAAKtG,OAAO2C,SAAS8D,KAArB,CAGA,IAAMC,EAAUC,SAASC,eACvBC,mBAAmB7G,OAAO2C,SAAS8D,KAAK7E,QAAQ,IAAK,MAEvDkF,WAAW,WACLJ,GACFA,EAAQK,gBAAe,IAExB,SAGL5G,qBAAA,WACEC,aAAarB,KAAKiI,UASpBX,mBAAA,SAAmBG,GAA6B,IACtC5D,EAAa4D,EAAU7D,SAAvBC,SAEFzD,EADamD,EAAuBkE,GAClBS,KAAK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAAcvE,EAASE,SAASqE,KAC7D,OAAIhI,EACK,CAACA,EAAKhB,MAER,MAiITU,OAAA,WAAS,IAnNgBG,EACjB4D,EAkNCwE,EACiCrI,KAAKC,MAArC6G,EADDuB,EACCvB,kBAAmBwB,EADpBD,EACoBC,SAErBC,GAtNiBtI,EAsNkBD,KAAKC,OArNxC4D,EAAa5D,EAAM2D,SAAnBC,UACK2E,SAAS,KACb3E,EAAS4E,UAAU,EAAG5E,EAASrB,OAAS,GAE1CqB,GAkNC8C,EAAY3G,KAAK0G,eAJhBgC,EAKgB1I,KAAK6G,cAAcF,GAAlChH,EALD+I,EAKC/I,KAAMC,EALP8I,EAKO9I,KACR+I,EAAqBC,IAAW,iBAAkB,IAChDtE,EAAatE,KAAKqH,MAAlB/C,SACFuE,EACJjK,EAAAC,EAAAC,cAAAwG,EAAAzG,EAAA,CACEiK,aAAc,GACd9J,UAAU,kBACV+J,KAAK,SACLzE,SAAUA,EACV0E,aAAc,CAACT,GACfU,aAAcjJ,KAAKqE,sBAElBsC,GAGL,OACE/H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAAoK,EAAArK,EAAA,KACGyJ,EACC1J,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACEC,UAAW,CAACxK,EAAAC,EAAAC,cAAAK,EAAAN,EAAA,CAAMO,KAAK,gBAAkBR,EAAAC,EAAAC,cAAAK,EAAAN,EAAA,CAAMO,KAAK,eACpD2F,IAAI,cACJsE,iBAAiB,kBAEhBR,GAGHjK,EAAAC,EAAAC,cAAAwK,EAAAzK,EAAA,CAAK0K,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI5K,UAAU,aAC1D6J,GAGLjK,EAAAC,EAAAC,cAAAwK,EAAAzK,EAAA,CAAK0K,IAAK,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAChDhL,EAAAC,EAAAC,cAAA,OAAKE,UAAW2J,GACd/J,EAAAC,EAAAC,cAAC+K,EAAD3D,OAAA4D,OAAA,GAAa9J,KAAKC,MAAlB,CAAyBwB,QAASqF,QAKxClI,EAAAC,EAAAC,cAAAoK,EAAArK,EAAA,KACED,EAAAC,EAAAC,cAAAwK,EAAAzK,EAAA,CAAK4K,GAAI,CAAEM,KAAM,GAAIC,OAAQ,GAAKN,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpDhL,EAAAC,EAAAC,cAAA,WAASE,UAAU,iBAChBW,EACCf,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aACXJ,EAAAC,EAAAC,cAAAK,EAAAN,EAAA,CAAMG,UAAU,yBAAyBI,KAAK,SAC7CO,EAAKM,MAAM+G,UAEZ,KACHpH,EACChB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aACVY,EAAKK,MAAM+G,SACZpI,EAAAC,EAAAC,cAAAK,EAAAN,EAAA,CAAMG,UAAU,wBAAwBI,KAAK,WAE7C,aAlPuBsB,IAAMuC,eCDhC,SAASgH,EAAT1L,GASZ,IARD2L,EAQC3L,EARD2L,KACGC,EAOFC,IAAA7L,EAAA,UACO8L,EAAsCH,EAAtCG,eAAgBC,EAAsBJ,EAAtBI,kBAChBC,EAA+CF,EAA/CE,YAAaC,EAAkCH,EAAlCG,OAAQC,EAA0BJ,EAA1BI,KAAMC,EAAoBL,EAApBK,gBAE7BjH,EADY6G,EAAVK,MACexK,IAAI,SAAAuE,GAAc,IAAX3D,EAAW2D,EAAX3D,KACtB6J,EAAiBC,YAAuB9J,EAAKwJ,aACnD,OAAArE,OAAA4D,OAAA,CACE1B,KAAMrH,EAAKyJ,OAAOpC,KAClB1G,KAAIwE,OAAA4D,OAAA,GACCc,EADD,CAEFxC,KAAMrH,EAAKyJ,OAAOpC,KAClB3J,SAAUsC,EAAKyJ,OAAOpC,QAErBwC,EAPL,CAQEnM,SAAUsC,EAAKyJ,OAAO5I,SAG1B,OACEhD,EAAAC,EAAAC,cAACgM,EAAA,EAAkBX,EACjBvL,EAAAC,EAAAC,cAACiM,EAAD7E,OAAA4D,OAAA,GACMK,EADN,CAEErD,kBAAmB,CACjBpF,KAAIwE,OAAA4D,OAAA,GACCe,YAAuBN,GACvBC,EAFD,CAGF/L,SAAU+L,EAAOpC,KACjBxG,KAAM4I,EAAO5I,OAEfW,IAAKmI,EACLjJ,QAASgJ,GAEXhH,SAAUA,MDvCGS,EACZhB,aAAe,CACpBlB,KAAMmB,IAAUC,OAAOC,2FC2CpB,IAAM2H,GAAS","file":"component---src-templates-docs-tsx-9b33e4e1b62d28f1ccbc.js","sourcesContent":["import React from 'react';\nimport { Tooltip, Icon } from 'antd';\n\nconst EditButton: React.SFC<{\n  title: React.ReactNode;\n  filename?: string;\n  sourcePath?: string;\n}> = ({\n  title,\n  filename,\n  sourcePath = 'https://github.com/ant-design/ant-design-pro-site/edit/master',\n}) => {\n  return (\n    <Tooltip title={title}>\n      <a className=\"edit-button\" target=\"_blank\" href={`${sourcePath}${filename}`}>\n        <Icon type=\"edit\" />\n      </a>\n    </Tooltip>\n  );\n};\n\nexport default EditButton;\n","import React from 'react';\nimport { Avatar, Tooltip } from 'antd';\n\nclass AvatarList extends React.Component<{\n  avatarList: Array<{\n    href: string;\n    text: string;\n    src: string;\n  }>;\n}> {\n  main: HTMLDivElement | null;\n  async componentDidMount() {}\n  render() {\n    const { avatarList = [] } = this.props;\n    if (!avatarList) {\n      return null;\n    }\n    return (\n      <div className=\"doc-avatar-list\">\n        {avatarList.map(item => {\n          return (\n            <a className=\"href-box\" target=\"_blank\" href={`http://github.com${item.href}`}>\n              <Tooltip title={item.text}>\n                <Avatar src={item.src} alt={item.text} size=\"small\" />\n              </Tooltip>\n            </a>\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default AvatarList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport DocumentTitle from 'react-document-title';\nimport { Affix } from 'antd';\nimport delegate from 'delegate';\nimport EditButton from './EditButton';\nimport { IFrontmatterData } from '../../templates/docs';\nimport moment from 'moment';\nimport AvatarList from './AvatarList';\n\ninterface ArticleProps {\n  content: {\n    meta: IFrontmatterData;\n    toc: string | false;\n    content: string;\n  };\n}\n\nexport default class Article extends React.PureComponent<ArticleProps> {\n  static contextTypes = {\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    // Add ga event click\n    this.delegation = delegate(\n      this.node,\n      '.resource-card',\n      'click',\n      (e: { delegateTarget: { href: any } }) => {\n        if ((window as any).ga) {\n          (window as any).ga('send', 'event', 'Download', 'resource', e.delegateTarget.href);\n        }\n      },\n      false\n    );\n  }\n  delegation: any;\n  pingTimer: number;\n  componentWillUnmount() {\n    clearTimeout(this.pingTimer);\n    if (this.delegation) {\n      this.delegation.destroy();\n    }\n  }\n\n  node: HTMLElement | null | undefined;\n\n  render() {\n    const props = this.props;\n    const content = props.content;\n    const { meta } = content;\n    const { title, subtitle, path, modifiedTime, avatarList } = meta;\n    const {\n      intl: { locale },\n    } = this.context as {\n      intl: {\n        locale: 'zh-CN' | 'en-US';\n      };\n    };\n    return (\n      <DocumentTitle title={`${title[locale] || title} - Ant Design`}>\n        <>\n          <article\n            className=\"markdown\"\n            ref={node => {\n              this.node = node;\n            }}\n          >\n            <h1>\n              {title[locale] || title}\n              {!subtitle || locale === 'en-US' ? null : (\n                <span className=\"subtitle\">{subtitle}</span>\n              )}\n              <EditButton title={<FormattedMessage id=\"app.content.edit-page\" />} filename={path} />\n            </h1>\n\n            {!content.toc || content.toc.length <= 1 || meta.toc === false ? null : (\n              <Affix className=\"toc-affix\" offsetTop={16}>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: content.toc.replace(/<ul>/g, '<ul class=\"toc\">').replace(/\\/#/g, '#'),\n                  }}\n                />\n              </Affix>\n            )}\n            <section\n              className=\"markdown api-container\"\n              dangerouslySetInnerHTML={{ __html: content.content }}\n            />\n          </article>\n          <div className=\"modifiedTime\">\n            <AvatarList avatarList={avatarList} />\n            <FormattedMessage id=\"app.content.modifiedTime\" />\n            {moment(modifiedTime).format('YYYY-MM-DD HH:mm:SS')}\n          </div>\n        </>\n      </DocumentTitle>\n    );\n  }\n}\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { Badge, Row, Col, Menu, Icon } from 'antd';\nimport classNames from 'classnames';\nimport MobileMenu from 'rc-drawer-menu';\nimport Article from './Article';\nimport { isZhCN, getMenuItems, MenuDataItem, IMenuData } from '../utils';\nimport { IFrontmatterData } from '../../templates/docs';\n\nconst { SubMenu } = Menu;\n\nexport interface MainContentProps {\n  isMobile: boolean;\n  location: {\n    pathname: string;\n  };\n  menuList: MenuDataItem[];\n  localizedPageData: {\n    meta: IFrontmatterData;\n    toc: string | false;\n    content: string;\n  };\n}\n\ninterface MainContentState {\n  openKeys: string[];\n}\n\nfunction getActiveMenuItem(props: MainContentProps) {\n  const { pathname } = props.location;\n  if (pathname.endsWith('/')) {\n    return pathname.substring(0, pathname.length - 1);\n  }\n  return pathname;\n}\n\nfunction getModuleDataWithProps(props: MainContentProps) {\n  const moduleData = props.menuList;\n  const excludedSuffix = isZhCN(props.location.pathname) ? 'zh-CN' : 'en-US';\n  return moduleData.filter(({ filename }) => {\n    if (!filename) {\n      return false;\n    }\n    if (!filename.includes('zh-CN') && !filename.includes('en-US')) {\n      return true;\n    }\n    return filename.includes(excludedSuffix);\n  });\n}\n\nfunction isNotTopLevel(level: string) {\n  return level !== 'topLevel';\n}\n\nexport default class MainContent extends React.PureComponent<MainContentProps, MainContentState> {\n  static contextTypes = {\n    intl: PropTypes.object.isRequired,\n  };\n\n  constructor(props: MainContentProps) {\n    super(props);\n    this.state = {\n      openKeys: this.getSideBarOpenKeys(props) || [],\n    };\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentWillReceiveProps(nextProps: MainContentProps) {\n    const openKeys = this.getSideBarOpenKeys(nextProps);\n    if (openKeys) {\n      this.setState({\n        openKeys,\n      });\n    }\n  }\n  timer: number;\n  componentDidUpdate() {\n    if (!window.location.hash) {\n      return;\n    }\n    const element = document.getElementById(\n      decodeURIComponent(window.location.hash.replace('#', ''))\n    );\n    setTimeout(() => {\n      if (element) {\n        element.scrollIntoView(true);\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  handleMenuOpenChange = (openKeys: string[]) => {\n    this.setState({\n      openKeys,\n    });\n  };\n  currentModule: string;\n  getSideBarOpenKeys(nextProps: MainContentProps) {\n    const { pathname } = nextProps.location;\n    const moduleData = getModuleDataWithProps(nextProps);\n    const item = moduleData.find(({ slug }) => pathname.includes(slug));\n    if (item) {\n      return [item.type];\n    }\n    return [];\n  }\n\n  convertFilename = (filename: string) => {\n    const {\n      location: { pathname },\n    } = this.props;\n    if (isZhCN(pathname) && !filename.includes('-cn')) {\n      return `${filename}-cn`;\n    }\n    return filename;\n  };\n\n  generateMenuItem = ({ before = null, after = null }, item: MenuDataItem) => {\n    if (!item.title) {\n      return;\n    }\n    const {\n      intl: { locale },\n    } = this.context as {\n      intl: {\n        locale: 'zh-CN' | 'en-US';\n      };\n    };\n    const text = [\n      <span key=\"english\">{item.title[locale] || item.title}</span>,\n      <span className=\"chinese\" key=\"chinese\">\n        {locale === 'zh-CN' && item.subtitle}\n      </span>,\n    ];\n\n    const disabled = item.disabled;\n\n    const child = !item.link ? (\n      <Link to={this.convertFilename(item.filename)}>\n        {before}\n        {text}\n        {after}\n      </Link>\n    ) : (\n      <a\n        href={item.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"menu-item-link-outside\"\n      >\n        {before}\n        {text} <Icon type=\"export\" />\n        {after}\n      </a>\n    );\n    return (\n      <Menu.Item key={this.convertFilename(item.filename)} disabled={disabled}>\n        {item.important ? <Badge dot={item.important}>{child}</Badge> : child}\n      </Menu.Item>\n    );\n  };\n\n  generateSubMenuItems = (obj?: IMenuData, footerNavIcons = {}) => {\n    const {\n      intl: { locale },\n    } = this.context as {\n      intl: {\n        locale: 'zh-CN' | 'en-US';\n      };\n    };\n    if (!obj) return [];\n    const topLevel = ((obj.topLevel as MenuDataItem[]) || []).map(\n      this.generateMenuItem.bind(this, footerNavIcons)\n    );\n    const itemGroups = Object.keys(obj)\n      .filter(isNotTopLevel)\n      .map(type => {\n        const groupItems = (obj[type] as MenuDataItem[])\n          .sort((a, b) => {\n            if ('order' in a && 'order' in b) {\n              return a.order - b.order;\n            }\n            return a.title[locale].charCodeAt(0) - b.title[locale].charCodeAt(0);\n          })\n          .map(this.generateMenuItem.bind(this, footerNavIcons));\n        return (\n          <SubMenu title={type} key={type}>\n            {groupItems}\n          </SubMenu>\n        );\n      });\n    return [...topLevel, ...itemGroups];\n  };\n\n  getMenuItems = (footerNavIcons = {}) => {\n    const moduleData = getModuleDataWithProps(this.props);\n    const {\n      intl: { locale },\n    } = this.context;\n    const menuItems: IMenuData = getMenuItems(moduleData, locale) || {};\n    let topLevel =\n      this.generateSubMenuItems(menuItems['topLevel'] as IMenuData, footerNavIcons) || [];\n\n    const result = [...topLevel].filter(({ key }) => key);\n    return result;\n  };\n\n  getPreAndNext = (menuItems: any) => {\n    const {\n      localizedPageData: {\n        meta: { filename },\n      },\n    } = this.props;\n\n    const list =\n      menuItems.length && !menuItems[0].props.children.length\n        ? menuItems\n        : Object.keys(menuItems).reduce((pre, key) => {\n            return pre.concat(menuItems[key].props.children);\n          }, []);\n    const index = list.findIndex((item: { key: string }) => {\n      return item.key === filename || item.key === `${filename}-cn`;\n    });\n\n    if (index === -1) {\n      return {};\n    }\n    return {\n      prev: list[index - 1],\n      next: list[index + 1],\n    };\n  };\n\n  render() {\n    const { localizedPageData, isMobile } = this.props;\n\n    const activeMenuItem = getActiveMenuItem(this.props);\n    const menuItems = this.getMenuItems();\n    const { prev, next } = this.getPreAndNext(menuItems);\n    const mainContainerClass = classNames('main-container', {});\n    const { openKeys } = this.state;\n    const menuChild = (\n      <Menu\n        inlineIndent={16}\n        className=\"aside-container\"\n        mode=\"inline\"\n        openKeys={openKeys}\n        selectedKeys={[activeMenuItem]}\n        onOpenChange={this.handleMenuOpenChange}\n      >\n        {menuItems}\n      </Menu>\n    );\n    return (\n      <div className=\"main-wrapper\">\n        <Row>\n          {isMobile ? (\n            <MobileMenu\n              iconChild={[<Icon type=\"menu-unfold\" />, <Icon type=\"menu-fold\" />]}\n              key=\"mobile-menu\"\n              wrapperClassName=\"drawer-wrapper\"\n            >\n              {menuChild}\n            </MobileMenu>\n          ) : (\n            <Col xxl={4} xl={5} lg={6} md={24} sm={24} xs={24} className=\"main-menu\">\n              {menuChild}\n            </Col>\n          )}\n          <Col xxl={20} xl={19} lg={18} md={24} sm={24} xs={24}>\n            <div className={mainContainerClass}>\n              <Article {...this.props} content={localizedPageData} />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={{ span: 20, offset: 4 }} md={24} sm={24} xs={24}>\n            <section className=\"prev-next-nav\">\n              {prev ? (\n                <a className=\"prev-page\">\n                  <Icon className=\"footer-nav-icon-before\" type=\"left\" />\n                  {prev.props.children}\n                </a>\n              ) : null}\n              {next ? (\n                <a className=\"next-page\">\n                  {next.props.children}\n                  <Icon className=\"footer-nav-icon-after\" type=\"right\" />\n                </a>\n              ) : null}\n            </section>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport WrapperLayout from '../components/layout';\nimport MainContent from '../components/Content/MainContent';\nimport { transformerFrontmatter } from '../components/utils';\n\ninterface IMarkDownFields {\n  path: string;\n  slug: string;\n  modifiedTime: number;\n  avatarList: Array<{\n    href: string;\n    text: string;\n    src: string;\n  }>;\n}\nexport interface IFrontmatterData extends IMarkDownFields {\n  title: {\n    'zh-CN': string;\n    'en-US': string;\n  };\n  toc: string | boolean;\n  order: number;\n  type: string;\n  filename: string;\n  subtitle: string;\n  path: string;\n  disabled: boolean;\n  important: boolean;\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport interface IGraphqlFrontmatterData extends Omit<IFrontmatterData, 'title'> {\n  title: {\n    zh_CN: string;\n    en_US: string;\n  };\n}\n\nexport interface IMarkdownRemarkData {\n  html: string;\n  tableOfContents: string;\n  frontmatter: IGraphqlFrontmatterData;\n  fields: IMarkDownFields;\n}\n\nexport interface IAllMarkdownRemarkData {\n  edges: Array<{\n    node: {\n      frontmatter: IGraphqlFrontmatterData;\n      fields: IMarkDownFields;\n    };\n  }>;\n}\n\nexport default function Template({\n  data,\n  ...rest\n}: {\n  data: { markdownRemark: IMarkdownRemarkData; allMarkdownRemark: IAllMarkdownRemarkData };\n  isMobile: boolean;\n  location: {\n    pathname: string;\n  };\n}) {\n  const { markdownRemark, allMarkdownRemark } = data;\n  const { frontmatter, fields, html, tableOfContents } = markdownRemark;\n  const { edges } = allMarkdownRemark;\n  const menuList = edges.map(({ node }) => {\n    const newFrontmatter = transformerFrontmatter(node.frontmatter);\n    return {\n      slug: node.fields.slug,\n      meta: {\n        ...newFrontmatter,\n        slug: node.fields.slug,\n        filename: node.fields.slug,\n      },\n      ...newFrontmatter,\n      filename: node.fields.path,\n    };\n  });\n  return (\n    <WrapperLayout {...rest}>\n      <MainContent\n        {...rest}\n        localizedPageData={{\n          meta: {\n            ...transformerFrontmatter(frontmatter),\n            ...fields,\n            filename: fields.slug,\n            path: fields.path,\n          },\n          toc: tableOfContents,\n          content: html,\n        }}\n        menuList={menuList}\n      />\n    </WrapperLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query TemplateDocsMarkdown($slug: String!, $type: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      tableOfContents(maxDepth: 3)\n      frontmatter {\n        title {\n          zh_CN\n          en_US\n        }\n        order\n        type\n      }\n      fields {\n        path\n        slug\n        modifiedTime\n        avatarList {\n          href\n          text\n          src\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: $type } }\n      sort: { fields: [fields___slug], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title {\n              zh_CN\n              en_US\n            }\n            order\n            type\n          }\n          fields {\n            slug\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}