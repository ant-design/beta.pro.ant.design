{"data":{"markdownRemark":{"html":"<p>Mock 数据是前端开发过程中必不可少的一环，是分离前后端开发的关键链路。通过预先跟服务器端约定好的接口，模拟请求数据甚至逻辑，能够让前端开发独立自主，不会被服务端的开发所阻塞。</p>\n<p>在 Ant Design Pro 中，因为我们的底层框架是 umi，而它自带了代理请求功能，通过代理请求就能够轻松处理数据模拟的功能。</p>\n<h2 id=\"使用-umi-的-mock-功能\">使用 umi 的 mock 功能<a href=\"#%E4%BD%BF%E7%94%A8-umi-%E7%9A%84-mock-%E5%8A%9F%E8%83%BD\" aria-hidden class=\"anchor\">#</a></h2>\n<p>umi 里约定 mock 文件夹下的文件即 mock 文件，文件导出接口定义，支持基于 <code>require</code> 动态分析的实时刷新，支持 ES6 语法，以及友好的出错提示，详情参看 <a href=\"https://umijs.org/guide/mock-data.html\">umijs.org</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 支持值为 Object 和 Array</span>\n  <span class=\"token string\">'GET /api/users'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> users<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// GET POST 可省略</span>\n  <span class=\"token string\">'/api/users/1'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// 支持自定义函数，API 参考 express@4</span>\n  <span class=\"token string\">'POST /api/users/create'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'OK'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>当客户端（浏览器）发送请求，如：<code>GET /api/users</code>，那么本地启动的 <code>umi dev</code> 会跟此配置文件匹配请求路径以及方法，如果匹配到了，就会将请求通过配置处理，就可以像样例一样，你可以直接返回数据，也可以通过函数处理以及重定向到另一个服务器。</p>\n<p>比如定义如下映射规则：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;GET /api/currentUser&#39;: {\n  name: &#39;momo.zxy&#39;,\n  avatar: imgMap.user,\n  userid: &#39;00000001&#39;,\n  notifyCount: 12,\n},</code></pre></div>\n<p>访问的本地 <code>/api/currentUser</code> 接口：</p>\n<p>请求头</p>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/ZdlcFoYonSGDupWnktZn.png\" width=\"400\" /> </p>\n<p>返回的数据</p>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/OLHIXePGHkkFoaZVQAts.png\" width=\"600\" /> </p>\n<h3 id=\"引入-mockjs\">引入 Mock.js<a href=\"#%E5%BC%95%E5%85%A5-mockjs\" aria-hidden class=\"anchor\">#</a></h3>\n<p><a href=\"http://mockjs.com/\">Mock.js</a> 是常用的辅助生成模拟数据的第三方库，当然你可以用你喜欢的任意库来结合 umi 构建数据模拟功能。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> mockjs <span class=\"token keyword\">from</span> <span class=\"token string\">'mockjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 使用 mockjs 等三方库</span>\n  <span class=\"token string\">'GET /api/tags'</span><span class=\"token punctuation\">:</span> mockjs<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'list|100'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'@city'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value|1-100'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'type|0-2'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"添加跨域请求头\">添加跨域请求头<a href=\"#%E6%B7%BB%E5%8A%A0%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E5%A4%B4\" aria-hidden class=\"anchor\">#</a></h3>\n<p>设置 <code>response</code> 的请求头即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;POST /api/users/create&#39;: (req, res) =&gt; {\n  ...\n  res.setHeader(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;);\n  ...\n},</code></pre></div>\n<h2 id=\"合理的拆分你的-mock-文件\">合理的拆分你的 mock 文件<a href=\"#%E5%90%88%E7%90%86%E7%9A%84%E6%8B%86%E5%88%86%E4%BD%A0%E7%9A%84-mock-%E6%96%87%E4%BB%B6\" aria-hidden class=\"anchor\">#</a></h2>\n<p>对于整个系统来说，请求接口是复杂并且繁多的，为了处理大量模拟请求的场景，我们通常把每一个数据模型抽象成一个文件，统一放在 <code>mock</code> 的文件夹中，然后他们会自动被引入。</p>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/wbeiDacBkchXrTafasBy.png\" width=\"200\" /> </p>\n<h2 id=\"如何模拟延迟\">如何模拟延迟<a href=\"#%E5%A6%82%E4%BD%95%E6%A8%A1%E6%8B%9F%E5%BB%B6%E8%BF%9F\" aria-hidden class=\"anchor\">#</a></h2>\n<p>为了更加真实地模拟网络数据请求，往往需要模拟网络延迟时间。</p>\n<h3 id=\"手动添加-settimeout-模拟延迟\">手动添加 setTimeout 模拟延迟<a href=\"#%E6%89%8B%E5%8A%A8%E6%B7%BB%E5%8A%A0-settimeout-%E6%A8%A1%E6%8B%9F%E5%BB%B6%E8%BF%9F\" aria-hidden class=\"anchor\">#</a></h3>\n<p>你可以重写请求的代理方法，在其中添加模拟延迟的处理，如：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'POST /api/forms'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h3 id=\"使用插件模拟延迟\">使用插件模拟延迟<a href=\"#%E4%BD%BF%E7%94%A8%E6%8F%92%E4%BB%B6%E6%A8%A1%E6%8B%9F%E5%BB%B6%E8%BF%9F\" aria-hidden class=\"anchor\">#</a></h3>\n<p>上面的方法虽然简便，但是当你需要添加所有的请求延迟的时候，可能就麻烦了，不过可以通过第三方插件来简化这个问题，如：<a href=\"https://github.com/nikogu/roadhog-api-doc/blob/master/lib/utils.js#L5\">roadhog-api-doc#delay</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> delay <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'roadhog-api-doc'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'GET /api/project/notice'</span><span class=\"token punctuation\">:</span> getNotice<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'GET /api/activities'</span><span class=\"token punctuation\">:</span> getActivities<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'GET /api/rule'</span><span class=\"token punctuation\">:</span> getRule<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'GET /api/tags'</span><span class=\"token punctuation\">:</span> mockjs<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'list|100'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'@city'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value|1-100'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'type|0-2'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'GET /api/fake_list'</span><span class=\"token punctuation\">:</span> getFakeList<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'GET /api/fake_chart_data'</span><span class=\"token punctuation\">:</span> getFakeChartData<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'GET /api/profile/basic'</span><span class=\"token punctuation\">:</span> getProfileBasicData<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'GET /api/profile/advanced'</span><span class=\"token punctuation\">:</span> getProfileAdvancedData<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'POST /api/register'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> status<span class=\"token punctuation\">:</span> <span class=\"token string\">'ok'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'GET /api/notices'</span><span class=\"token punctuation\">:</span> getNotices<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 调用 delay 函数，统一处理</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"联调\">联调<a href=\"#%E8%81%94%E8%B0%83\" aria-hidden class=\"anchor\">#</a></h3>\n<p>当本地开发完毕之后，如果服务器的接口满足之前的约定，那么只需要关闭 mock 数据或者代理到服务端的真实接口地址即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run start:no-mock</code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/mock-api-cn/#%E4%BD%BF%E7%94%A8-umi-%E7%9A%84-mock-%E5%8A%9F%E8%83%BD\">使用 umi 的 mock 功能</a></p>\n<ul>\n<li><a href=\"/docs/mock-api-cn/#%E5%BC%95%E5%85%A5-mockjs\">引入 Mock.js</a></li>\n<li><a href=\"/docs/mock-api-cn/#%E6%B7%BB%E5%8A%A0%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E5%A4%B4\">添加跨域请求头</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/mock-api-cn/#%E5%90%88%E7%90%86%E7%9A%84%E6%8B%86%E5%88%86%E4%BD%A0%E7%9A%84-mock-%E6%96%87%E4%BB%B6\">合理的拆分你的 mock 文件</a></li>\n<li>\n<p><a href=\"/docs/mock-api-cn/#%E5%A6%82%E4%BD%95%E6%A8%A1%E6%8B%9F%E5%BB%B6%E8%BF%9F\">如何模拟延迟</a></p>\n<ul>\n<li><a href=\"/docs/mock-api-cn/#%E6%89%8B%E5%8A%A8%E6%B7%BB%E5%8A%A0-settimeout-%E6%A8%A1%E6%8B%9F%E5%BB%B6%E8%BF%9F\">手动添加 setTimeout 模拟延迟</a></li>\n<li><a href=\"/docs/mock-api-cn/#%E4%BD%BF%E7%94%A8%E6%8F%92%E4%BB%B6%E6%A8%A1%E6%8B%9F%E5%BB%B6%E8%BF%9F\">使用插件模拟延迟</a></li>\n<li><a href=\"/docs/mock-api-cn/#%E8%81%94%E8%B0%83\">联调</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":{"zh_CN":"Mock 和联调","en_US":"Mock 和联调"},"order":13,"type":"进阶"},"fields":{"path":"/docs/mock-api.zh-CN.md","slug":"/docs/mock-api-cn","modifiedTime":1556010662121,"avatarList":[{"href":"/chenshuai2144","text":"\n        chenshuai2144\n","src":"https://avatars1.githubusercontent.com/u/8186664?s=40&amp;v=4"},{"href":"/m4jing","text":"\n        m4jing\n","src":"https://avatars0.githubusercontent.com/u/2697870?s=40&amp;v=4"},{"href":"/Mikasa33","text":"\n        Mikasa33\n","src":"https://avatars0.githubusercontent.com/u/29498153?s=40&amp;v=4"},{"href":"/afc163","text":"\n        afc163\n","src":"https://avatars0.githubusercontent.com/u/507615?s=40&amp;v=4"}]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"使用 TypeScript","en_US":"使用 TypeScript"},"order":7,"type":"进阶"},"fields":{"slug":"/docs/uset-typescript-cn","path":"/docs/uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use TypeScript","en_US":"Use TypeScript"},"order":7,"type":"Advanced"},"fields":{"slug":"/docs/uset-typescript","path":"/docs/uset-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"独立使用 Pro 组件","en_US":"独立使用 Pro 组件"},"order":16,"type":"进阶"},"fields":{"slug":"/docs/use-components-alone-cn","path":"/docs/use-components-alone.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use Pro Components Alone","en_US":"Use Pro Components Alone"},"order":16,"type":"Advanced"},"fields":{"slug":"/docs/use-components-alone","path":"/docs/use-components-alone.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"升级到 2.0 版本","en_US":"升级到 2.0 版本"},"order":2,"type":"入门"},"fields":{"slug":"/docs/upgrade-v2-cn","path":"/docs/upgrade-v2.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Upgrade to V2","en_US":"Upgrade to V2"},"order":2,"type":"Introduction"},"fields":{"slug":"/docs/upgrade-v2","path":"/docs/upgrade-v2.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI 测试","en_US":"UI 测试"},"order":15,"type":"进阶"},"fields":{"slug":"/docs/ui-test-cn","path":"/docs/ui-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI Test","en_US":"UI Test"},"order":15,"type":"Advanced"},"fields":{"slug":"/docs/ui-test","path":"/docs/ui-test.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更换主题","en_US":"更换主题"},"order":14,"type":"进阶"},"fields":{"slug":"/docs/theme-cn","path":"/docs/theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Theme","en_US":"Theme"},"order":14,"type":"Advanced"},"fields":{"slug":"/docs/theme","path":"/docs/theme.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"样式","en_US":"样式"},"order":6,"type":"入门"},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Style","en_US":"Style"},"order":6,"type":"Introduction"},"fields":{"slug":"/docs/style","path":"/docs/style.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"和服务端进行交互","en_US":"和服务端进行交互"},"order":7,"type":"入门"},"fields":{"slug":"/docs/server-cn","path":"/docs/server.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Communicate with Server","en_US":"Communicate with Server"},"order":7,"type":"Introduction"},"fields":{"slug":"/docs/server","path":"/docs/server.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"路由和菜单","en_US":"路由和菜单"},"order":3,"type":"入门"},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Router and Nav","en_US":"Router and Nav"},"order":3,"type":"Introduction"},"fields":{"slug":"/docs/router-and-nav","path":"/docs/router-and-nav.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"设计资源","en_US":"设计资源"},"order":23,"type":"其他"},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Design Kit","en_US":"Design Kit"},"order":23,"type":"Other"},"fields":{"slug":"/docs/resource","path":"/docs/resource.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增页面","en_US":"新增页面"},"order":4,"type":"开发"},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Page","en_US":"New Page"},"order":4,"type":"Development"},"fields":{"slug":"/docs/new-page","path":"/docs/new-page.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增业务组件","en_US":"新增业务组件"},"order":5,"type":"开发"},"fields":{"slug":"/docs/new-component-cn","path":"/docs/new-component.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Component","en_US":"New Component"},"order":5,"type":"Development"},"fields":{"slug":"/docs/new-component","path":"/docs/new-component.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock 和联调","en_US":"Mock 和联调"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/mock-api-cn","path":"/docs/mock-api.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock Data","en_US":"Mock Data"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/mock-api","path":"/docs/mock-api.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"布局","en_US":"布局"},"order":3,"type":"入门"},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout","en_US":"Layout"},"order":3,"type":"Introduction"},"fields":{"slug":"/docs/layout","path":"/docs/layout.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"引入外部模块","en_US":"引入外部模块"},"order":8,"type":"开发"},"fields":{"slug":"/docs/import-cn","path":"/docs/import.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Import Module","en_US":"Import Module"},"order":8,"type":"Introduction"},"fields":{"slug":"/docs/import","path":"/docs/import.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"国际化","en_US":"国际化"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"i18n","en_US":"i18n"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/i18n","path":"/docs/i18n.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"图表","en_US":"图表"},"order":11,"type":"进阶"},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Charts","en_US":"Charts"},"order":11,"type":"Advanced"},"fields":{"slug":"/docs/graph","path":"/docs/graph.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用","en_US":"开始使用"},"order":0,"type":"入门"},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started","en_US":"Getting Started"},"order":0,"type":"Introduction"},"fields":{"slug":"/docs/getting-started","path":"/docs/getting-started.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用（蚂蚁金服用户）","en_US":"开始使用（蚂蚁金服用户）"},"order":1,"type":"入门"},"fields":{"slug":"/docs/getting-start-inner-cn","path":"/docs/getting-start-inner.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started (Ant Financial User)","en_US":"Getting Started (Ant Financial User)"},"order":1,"type":"Introduction"},"fields":{"slug":"/docs/getting-start-inner","path":"/docs/getting-start-inner.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"社区推荐","en_US":"社区推荐"},"order":24,"type":"其他"},"fields":{"slug":"/docs/from-community-cn","path":"/docs/from-community.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"From Community","en_US":"From Community"},"order":24,"type":"Other"},"fields":{"slug":"/docs/from-community","path":"/docs/from-community.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"常见问题","en_US":"常见问题"},"order":22,"type":"其他"},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"FAQ","en_US":"FAQ"},"order":22,"type":"Other"},"fields":{"slug":"/docs/faq","path":"/docs/faq.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"错误处理","en_US":"错误处理"},"order":17,"type":"进阶"},"fields":{"slug":"/docs/error-handle-cn","path":"/docs/error-handle.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Error Handle","en_US":"Error Handle"},"order":17,"type":"Advanced"},"fields":{"slug":"/docs/error-handle","path":"/docs/error-handle.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"构建和发布","en_US":"构建和发布"},"order":8,"type":"入门"},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Build & Deploy","en_US":"Build & Deploy"},"order":8,"type":"Introduction"},"fields":{"slug":"/docs/deploy","path":"/docs/deploy.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更新日志","en_US":"更新日志"},"order":21,"type":"其他"},"fields":{"slug":"/docs/changelog-cn","path":"/docs/changelog.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Changelog","en_US":"Changelog"},"order":21,"type":"Other"},"fields":{"slug":"/docs/changelog","path":"/docs/changelog.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"业务图标","en_US":"业务图标"},"order":12,"type":"进阶"},"fields":{"slug":"/docs/biz-icon-cn","path":"/docs/biz-icon.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"BIZ Icon","en_US":"BIZ Icon"},"order":12,"type":"Advanced"},"fields":{"slug":"/docs/biz-icon","path":"/docs/biz-icon.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"权限管理","en_US":"权限管理"},"order":24,"type":"进阶"},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Authority Management","en_US":"Authority Management"},"order":24,"type":"Advanced"},"fields":{"slug":"/docs/authority-management","path":"/docs/authority-management.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/mock-api-cn","type":"/docs/"}}