{"data":{"markdownRemark":{"html":"<p>这篇文档主要针对如何在项目中使用和规划样式文件进行介绍，如果想获取基础的 CSS 知识或查阅属性，可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference\">MDN 文档</a>。</p>\n<h2 id=\"less\">less<a href=\"#less\" aria-hidden class=\"anchor\">#</a></h2>\n<p>Ant Design Pro 默认使用 less 作为样式语言，建议在使用前或者遇到疑问时学习一下 <a href=\"http://lesscss.org/\">less</a> 的相关特性。</p>\n<h2 id=\"css-modules\">CSS Modules<a href=\"#css-modules\" aria-hidden class=\"anchor\">#</a></h2>\n<p>在样式开发过程中，有两个问题比较突出：</p>\n<ul>\n<li>全局污染 —— CSS 文件中的选择器是全局生效的，不同文件中的同名选择器，根据 build 后生成文件中的先后顺序，后面的样式会将前面的覆盖；</li>\n<li>选择器复杂 —— 为了避免上面的问题，我们在编写样式的时候不得不小心翼翼，类名里会带上限制范围的标识，变得越来越长，多人开发时还很容易导致命名风格混乱，一个元素上使用的选择器个数也可能越来越多。</li>\n</ul>\n<p>为了解决上述问题，我们的脚手架默认使用 CSS Modules 模块化方案，先来看下在这种模式下怎么写样式。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">// example.js import styles from './example.less'; export default ({ title }) =>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{styles.title}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{title}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">// example.less\n.title</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token atrule\"><span class=\"token rule\">@heading-color</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 600<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>用 less 写样式好像没什么改变，只是类名比较简单（实际项目中也是这样），js 文件的改变就是在设置 className 时，用一个对象属性取代了原来的字符串，属性名跟 less 文件中对应的类名相同，对象从 less 文件中引入。</p>\n<p>在上面的样式文件中，<code>.title</code> 只会在本文件生效，你可以在其他任意文件中使用同名选择器，也不会对这里造成影响。不过有的时候，我们就是想要一个全局生效的样式呢？可以使用 <code>:global</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">// example.less\n.title</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token atrule\"><span class=\"token rule\">@heading-color</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 600<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 定义全局样式 */</span>\n<span class=\"token selector\">:global(.text)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 定义多个全局样式 */</span>\n<span class=\"token selector\">:global</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.footer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.sider</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ebebeb<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS Modules 的基本原理很简单，就是对每个类名（非 :global 声明的）按照一定规则进行转换，保证它的唯一性。如果在浏览器里查看这个示例的 dom 结构，你会发现实际渲染出来是这样的：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>title___3TqAx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>类名被自动添加了一个 hash 值，这保证了它的唯一性。</p>\n<p>除了上面的基础知识，还有一些关键点需要注意：</p>\n<ul>\n<li>CSS Modules 只会对 <code>className</code> 以及 <code>id</code> 进行转换，其他的比如属性选择器，标签选择器都不进行处理，推荐尽量使用 className。</li>\n<li>由于不用担心类名重复，你的 className 可以在基本语意化的前提下尽量简单一点儿。</li>\n</ul>\n<p>上面只对 CSS Modules 进行了最基础的介绍，有兴趣可以参考其他文档：</p>\n<ul>\n<li><a href=\"https://github.com/css-modules/css-modules\">github/css-modules</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/06/css_modules.html\">CSS Modules 用法教程</a></li>\n<li><a href=\"https://github.com/camsong/blog/issues/5\">CSS Modules 详解及 React 中实践</a></li>\n</ul>\n<h2 id=\"样式文件类别\">样式文件类别<a href=\"#%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%88%AB\" aria-hidden class=\"anchor\">#</a></h2>\n<p>在一个项目中，样式文件根据功能不同，可以划分为不同的类别。</p>\n<h3 id=\"srcindexless\">src/index.less<a href=\"#srcindexless\" aria-hidden class=\"anchor\">#</a></h3>\n<p>全局样式文件，在这里你可以进行一些通用设置，比如脚手架中自带的：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">html,\nbody,\n:global(#root)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-rendering</span><span class=\"token punctuation\">:</span> optimizeLegibility<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-font-smoothing</span><span class=\"token punctuation\">:</span> antialiased<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-moz-osx-font-smoothing</span><span class=\"token punctuation\">:</span> grayscale<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">// temporary font size patch\n:global(.ant-tag)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 12px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>因为 antd 中会自带一些全局设置，如字号，颜色，行高等，所以在这里，你只需要关注自己的个性化需求即可，不用进行大量的 reset。</p>\n</blockquote>\n<h3 id=\"srcutilsutilsless\">src/utils/utils.less<a href=\"#srcutilsutilsless\" aria-hidden class=\"anchor\">#</a></h3>\n<p>这里可以放置一些工具函数供调用，比如清除浮动 <code>.clearfix</code>。</p>\n<h3 id=\"模块样式\">模块样式<a href=\"#%E6%A8%A1%E5%9D%97%E6%A0%B7%E5%BC%8F\" aria-hidden class=\"anchor\">#</a></h3>\n<p>针对某个模块/页面生效的文件。</p>\n<h4 id=\"通用模块级\">通用模块级<a href=\"#%E9%80%9A%E7%94%A8%E6%A8%A1%E5%9D%97%E7%BA%A7\" aria-hidden class=\"anchor\">#</a></h4>\n<p>例如 <code>src/layouts/BasicLayout.less</code>，里面包含一些基本布局的样式，被 <code>src/layouts/BasicLayout.js</code> 引用，项目中使用这种布局的页面就不需要再关心整体布局的设置。如果你的项目中需要使用其他布局，也建议将布局相关的 js 和 less 放在这里 <code>src/layouts</code>。</p>\n<h4 id=\"页面级\">页面级<a href=\"#%E9%A1%B5%E9%9D%A2%E7%BA%A7\" aria-hidden class=\"anchor\">#</a></h4>\n<p>具体页面相关的样式，例如 <code>src/routes/Dashborad/Monitor.less</code>，里面的内容仅和本页面的内容相关。一般情况下，如果不是页面内容特别复杂，有了前面全局样式、通用模块样式的配合，这里要写的应该不多。</p>\n<h4 id=\"组件级\">组件级<a href=\"#%E7%BB%84%E4%BB%B6%E7%BA%A7\" aria-hidden class=\"anchor\">#</a></h4>\n<p>这个也很简单，就是组件相关的样式了，有一些在页面中重复使用的片段或相对独立的功能，你可以提炼成组件，相关的样式也应该提炼出来放在组件中，而不是混淆在页面里。</p>\n<blockquote>\n<p>以上样式类别都是针对独立的样式文件，有时样式配置特别简单，也没有重复使用，你也可以用内联样式 <code>style={{ ... }}</code> 来设置。</p>\n</blockquote>\n<h2 id=\"覆盖组件样式\">覆盖组件样式<a href=\"#%E8%A6%86%E7%9B%96%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F\" aria-hidden class=\"anchor\">#</a></h2>\n<p>由于业务的个性化需求，我们经常会遇到需要覆盖组件样式的情况，这里举个简单的例子。</p>\n<p>antd Select 在多选状态下，默认会展示所有选中项，这里我们给它加一个限制高度，超过此高度就出滚动条。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// TestPage.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Select <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'antd'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./TestPage.less'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Option <span class=\"token operator\">=</span> Select<span class=\"token punctuation\">.</span>Option<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> children <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">36</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Option key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Option<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Select\n    mode<span class=\"token operator\">=</span><span class=\"token string\">\"multiple\"</span>\n    style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">300</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Please select\"</span>\n    className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>customSelect<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Select<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  mountNode\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">// TestPage.less\n.customSelect</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">:global</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">.ant-select-selection</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">max-height</span><span class=\"token punctuation\">:</span> 51px<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>方法很简单，有两点需要注意：</p>\n<ul>\n<li>引入的 antd 组件类名没有被 CSS Modules 转化，所以被覆盖的类名 <code>.ant-select-selection</code> 必须放到 <code>:global</code> 中。</li>\n<li>因为上一条的关系，覆盖是全局性的。为了防止对其他 Select 组件造成影响，所以需要包裹额外的 className 限制样式的生效范围。</li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/docs/style-cn/#less\">less</a></li>\n<li><a href=\"/docs/style-cn/#css-modules\">CSS Modules</a></li>\n<li>\n<p><a href=\"/docs/style-cn/#%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B1%BB%E5%88%AB\">样式文件类别</a></p>\n<ul>\n<li><a href=\"/docs/style-cn/#srcindexless\">src/index.less</a></li>\n<li><a href=\"/docs/style-cn/#srcutilsutilsless\">src/utils/utils.less</a></li>\n<li><a href=\"/docs/style-cn/#%E6%A8%A1%E5%9D%97%E6%A0%B7%E5%BC%8F\">模块样式</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/style-cn/#%E8%A6%86%E7%9B%96%E7%BB%84%E4%BB%B6%E6%A0%B7%E5%BC%8F\">覆盖组件样式</a></li>\n</ul>","frontmatter":{"title":{"zh_CN":"修改样式","en_US":"修改样式"},"order":6,"type":"开发"},"fields":{"path":"/docs/style.zh-CN.md","slug":"/docs/style-cn","modifiedTime":1557915689085,"avatarList":[{"href":"/chenshuai2144","text":"\n        chenshuai2144\n","src":"https://avatars1.githubusercontent.com/u/8186664?s=40&amp;v=4"},{"href":"/yutingzhao1991","text":"\n        yutingzhao1991\n","src":"https://avatars0.githubusercontent.com/u/1061968?s=40&amp;v=4"}]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"使用 TypeScript","en_US":"使用 TypeScript"},"order":7,"type":"进阶"},"fields":{"slug":"/docs/uset-typescript-cn","path":"/docs/uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use TypeScript","en_US":"Use TypeScript"},"order":7,"type":"Advanced"},"fields":{"slug":"/docs/uset-typescript","path":"/docs/uset-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"独立使用 Pro 组件","en_US":"独立使用 Pro 组件"},"order":16,"type":"进阶"},"fields":{"slug":"/docs/use-components-alone-cn","path":"/docs/use-components-alone.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use Pro Components Alone","en_US":"Use Pro Components Alone"},"order":16,"type":"Advanced"},"fields":{"slug":"/docs/use-components-alone","path":"/docs/use-components-alone.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"升级到 2.0 版本","en_US":"升级到 2.0 版本"},"order":2,"type":"入门"},"fields":{"slug":"/docs/upgrade-v2-cn","path":"/docs/upgrade-v2.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Upgrade to V2","en_US":"Upgrade to V2"},"order":2,"type":"Introduction"},"fields":{"slug":"/docs/upgrade-v2","path":"/docs/upgrade-v2.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI 测试","en_US":"UI 测试"},"order":15,"type":"进阶"},"fields":{"slug":"/docs/ui-test-cn","path":"/docs/ui-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI Test","en_US":"UI Test"},"order":15,"type":"Advanced"},"fields":{"slug":"/docs/ui-test","path":"/docs/ui-test.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更换主题","en_US":"更换主题"},"order":14,"type":"进阶"},"fields":{"slug":"/docs/theme-cn","path":"/docs/theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Theme","en_US":"Theme"},"order":14,"type":"Advanced"},"fields":{"slug":"/docs/theme","path":"/docs/theme.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"修改样式","en_US":"修改样式"},"order":6,"type":"开发"},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Edit Style","en_US":"Edit Style"},"order":6,"type":"Development"},"fields":{"slug":"/docs/style","path":"/docs/style.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"和服务端进行交互","en_US":"和服务端进行交互"},"order":7,"type":"开发"},"fields":{"slug":"/docs/server-cn","path":"/docs/server.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Communicate with Server","en_US":"Communicate with Server"},"order":7,"type":"Development"},"fields":{"slug":"/docs/server","path":"/docs/server.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"路由和菜单","en_US":"路由和菜单"},"order":3,"type":"入门"},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Router and Nav","en_US":"Router and Nav"},"order":3,"type":"Introduction"},"fields":{"slug":"/docs/router-and-nav","path":"/docs/router-and-nav.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"设计资源","en_US":"设计资源"},"order":23,"type":"其他"},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Design Kit","en_US":"Design Kit"},"order":23,"type":"Other"},"fields":{"slug":"/docs/resource","path":"/docs/resource.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增页面","en_US":"新增页面"},"order":4,"type":"开发"},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Page","en_US":"New Page"},"order":4,"type":"Development"},"fields":{"slug":"/docs/new-page","path":"/docs/new-page.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增业务组件","en_US":"新增业务组件"},"order":5,"type":"开发"},"fields":{"slug":"/docs/new-component-cn","path":"/docs/new-component.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Component","en_US":"New Component"},"order":5,"type":"Development"},"fields":{"slug":"/docs/new-component","path":"/docs/new-component.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock 和联调","en_US":"Mock 和联调"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/mock-api-cn","path":"/docs/mock-api.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock Data","en_US":"Mock Data"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/mock-api","path":"/docs/mock-api.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"布局","en_US":"布局"},"order":3,"type":"入门"},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout","en_US":"Layout"},"order":3,"type":"Introduction"},"fields":{"slug":"/docs/layout","path":"/docs/layout.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"引入外部模块","en_US":"引入外部模块"},"order":8,"type":"开发"},"fields":{"slug":"/docs/import-cn","path":"/docs/import.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Import Module","en_US":"Import Module"},"order":8,"type":"Development"},"fields":{"slug":"/docs/import","path":"/docs/import.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"国际化","en_US":"国际化"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"i18n","en_US":"i18n"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/i18n","path":"/docs/i18n.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"图表","en_US":"图表"},"order":11,"type":"进阶"},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Charts","en_US":"Charts"},"order":11,"type":"Advanced"},"fields":{"slug":"/docs/graph","path":"/docs/graph.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用","en_US":"开始使用"},"order":0,"type":"入门"},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started","en_US":"Getting Started"},"order":0,"type":"Introduction"},"fields":{"slug":"/docs/getting-started","path":"/docs/getting-started.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用（蚂蚁金服用户）","en_US":"开始使用（蚂蚁金服用户）"},"order":1,"type":"入门"},"fields":{"slug":"/docs/getting-start-inner-cn","path":"/docs/getting-start-inner.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started (Ant Financial User)","en_US":"Getting Started (Ant Financial User)"},"order":1,"type":"Introduction"},"fields":{"slug":"/docs/getting-start-inner","path":"/docs/getting-start-inner.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"社区推荐","en_US":"社区推荐"},"order":24,"type":"其他"},"fields":{"slug":"/docs/from-community-cn","path":"/docs/from-community.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"From Community","en_US":"From Community"},"order":24,"type":"Other"},"fields":{"slug":"/docs/from-community","path":"/docs/from-community.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"常见问题","en_US":"常见问题"},"order":22,"type":"其他"},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"FAQ","en_US":"FAQ"},"order":22,"type":"Other"},"fields":{"slug":"/docs/faq","path":"/docs/faq.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"错误处理","en_US":"错误处理"},"order":17,"type":"进阶"},"fields":{"slug":"/docs/error-handle-cn","path":"/docs/error-handle.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Error Handle","en_US":"Error Handle"},"order":17,"type":"Advanced"},"fields":{"slug":"/docs/error-handle","path":"/docs/error-handle.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"构建和发布","en_US":"构建和发布"},"order":8,"type":"部署"},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Build & Deploy","en_US":"Build & Deploy"},"order":8,"type":"Deployment"},"fields":{"slug":"/docs/deploy","path":"/docs/deploy.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更新日志","en_US":"更新日志"},"order":21,"type":"其他"},"fields":{"slug":"/docs/changelog-cn","path":"/docs/changelog.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Changelog","en_US":"Changelog"},"order":21,"type":"Other"},"fields":{"slug":"/docs/changelog","path":"/docs/changelog.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"业务图标","en_US":"业务图标"},"order":12,"type":"进阶"},"fields":{"slug":"/docs/biz-icon-cn","path":"/docs/biz-icon.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"BIZ Icon","en_US":"BIZ Icon"},"order":12,"type":"Advanced"},"fields":{"slug":"/docs/biz-icon","path":"/docs/biz-icon.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"权限管理","en_US":"权限管理"},"order":24,"type":"进阶"},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Authority Management","en_US":"Authority Management"},"order":24,"type":"Advanced"},"fields":{"slug":"/docs/authority-management","path":"/docs/authority-management.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/style-cn","type":"/docs/"}}