{"data":{"markdownRemark":{"html":"<p>UI testing is an important part of the project development process. Effective test cases can sort out business needs and ensure the quality and progress of development, it enables developers to refactor the code and add new features safely.</p>\n<p>Ant Design Pro comes packaged with a handy set of React unit tests and E2E test framework, you can run the following command in the root repository to run test cases by running the following command at the project root.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run test:all  <span class=\"token comment\"># Execute all the tests</span></code></pre></div>\n<p> <img style=\"box-shadow:none;margin:0;\" src=\"https://gw.alipayobjects.com/zos/rmsportal/EFKJzIswQgWNJzDQNpKr.png\" width=\"700\" /> </p>\n<p>Now we'll give a brief introduction about how to write a test case.</p>\n<h2 id=\"unit-tests\">Unit Tests<a href=\"#unit-tests\" aria-hidden class=\"anchor\">#</a></h2>\n<p>Unit tests are used to test the appearance of React UI components. By referencing <a href=\"https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#running-tests\">create-react-app</a>, we take <a href=\"http://facebook.github.io/jest/\">jest</a> as the test framework.</p>\n<p>Jest is a node-side test framework that uses jsdom to simulate the DOM environment and is suitable for quick testing of the logical behavior of React components. If you care about the performance in a real browser, please refer to the E2E test section.</p>\n<h3 id=\"write-a-case\">Write a case<a href=\"#write-a-case\" aria-hidden class=\"anchor\">#</a></h3>\n<p>For example, we could create a file <code>src/routes/Result/Success.test.js</code> to test the UI appearance of <code>Result/Success.js</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> shallow <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'enzyme'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Success <span class=\"token keyword\">from</span> <span class=\"token string\">'./Success'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Introduce the corresponding React component</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders with Result'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> wrapper <span class=\"token operator\">=</span> <span class=\"token function\">shallow</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Success</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Rendering</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Has Result component</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prop</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// The type of the Result component is success</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Here <a href=\"http://airbnb.io/enzyme/docs/api/index.html\">enzyme</a> is used as a test library, which provides a number of useful APIs to help us test React components. As for the assertion library, we choose <a href=\"https://facebook.github.io/jest/docs/en/expect.html#content\">jasmine2 expect grammar</a>.</p>\n<h3 id=\"local-execution\">Local execution<a href=\"#local-execution\" aria-hidden class=\"anchor\">#</a></h3>\n<p>Files with suffix <code>* .test.js</code> in <code>src</code> will be found out and executed by using the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">test</span> .test.js</code></pre></div>\n<h4 id=\"execute-a-single-or-a-set-of-cases\">Execute a single or a set of cases<a href=\"#execute-a-single-or-a-set-of-cases\" aria-hidden class=\"anchor\">#</a></h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">test</span> src/routes/Result/Success.test.js  <span class=\"token comment\"># test Success.test.js</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">test</span> src/routes                         <span class=\"token comment\"># test all test case file in routes</span></code></pre></div>\n<h3 id=\"test-dva-wrapped-components\">Test dva wrapped components<a href=\"#test-dva-wrapped-components\" aria-hidden class=\"anchor\">#</a></h3>\n<p>We can use the following way to test the components wrapped by dva <code>connect</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> shallow <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'enzyme'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Dashboard <span class=\"token keyword\">from</span> <span class=\"token string\">'./Dashboard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders Dashboard'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Use the wrapped components</span>\n  <span class=\"token keyword\">const</span> wrapper <span class=\"token operator\">=</span> <span class=\"token function\">shallow</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dashboard.WrappedComponent</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> list<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Table'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">props</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"e2e-test\">e2e test<a href=\"#e2e-test\" aria-hidden class=\"anchor\">#</a></h2>\n<p>End-to-end testing, also known as smoke testing, is used to test the process and appearance of front-end applications in a real-world browser environment, equivalent to operating application instead of manually.</p>\n<p>We import <a href=\"https://github.com/googlechrome/puppeteer\">puppeteer</a> as the tool of e2e testing, puppeteer is a headless Chrome tool which created by Google, it uses chrome/chromium as the browser environment by default to run your application, and provides a very semantic API for describing business logic.</p>\n<h3 id=\"write-a-e2e-test-case\">Write a e2e test case<a href=\"#write-a-e2e-test-case\" aria-hidden class=\"anchor\">#</a></h3>\n<p>Assuming there is a demand, the user enters the wrong user name and password in the login page, and after clicking on submission, an error message box will appear.</p>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/oZeYewGOUJkmqXAPoOFC.gif\" width=\"400\" /> </p>\n<p>We write a test case to ensure this process. Create a <code>Login.e2e.js</code> file in the <code>src/e2e/</code>directory and describe the test cases as described above for your business needs.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> puppeteer <span class=\"token keyword\">from</span> <span class=\"token string\">'puppeteer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should login with failure'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#userName'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mockuser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#password'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wrong_password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button[type=\"submit\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForSelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.ant-alert-error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// should display error</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Refer to <a href=\"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md\">puppeteer/docs/api.md</a> for more APIs.</p>\n<h3 id=\"run-test-cases\">Run test cases<a href=\"#run-test-cases\" aria-hidden class=\"anchor\">#</a></h3>\n<p>Run the following command to execute all <code>*.e2e.js</code> test cases under src.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">test</span> .e2e.js</code></pre></div>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/LGCXopksUYMUhjRgdYSz.png\" width=\"700\" /> </p>\n<blockquote>\n<p>Note: You should run <code>npm start</code> before testing e2e cases locally, or it will throw <code>Failed: navigation error</code>.</p>\n</blockquote>\n<h2 id=\"watch-mode\">watch mode<a href=\"#watch-mode\" aria-hidden class=\"anchor\">#</a></h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm test -- --watch</code></pre></div>\n<p>By adding <code>--watch</code> configuration you can enter the watch mode, <code>in which</code> when you modify and save the file, jest will automatically execute the corresponding test cases. Jest's command line tools also provide a variety of convenient shortcuts to execute the use cases you need.</p>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/MnmxiavystfcBDskyKRg.png\" width=\"700\" /> </p>\n<h2 id=\"test-coverage\">Test coverage<a href=\"#test-coverage\" aria-hidden class=\"anchor\">#</a></h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm test -- --coverage</code></pre></div>\n<p>Add a <code>--coverage</code> configuration to display the project's test coverage.</p>\n<p> <img src=\"https://camo.githubusercontent.com/bd0bbda8e44ea747e4c199d0e212d40563ad2fcb/687474703a2f2f692e696d6775722e636f6d2f356246686e54532e706e67\" width=\"700\" /> </p>\n<h2 id=\"focus-or-ignore-test-cases\">Focus or ignore test cases<a href=\"#focus-or-ignore-test-cases\" aria-hidden class=\"anchor\">#</a></h2>\n<p>Use <code>xit()</code> instead of <code>it()</code> to temporarily ignore the test case, <code>fit()</code> to focus on the current test case and ignore all other test cases. These two methods can help you to focus on the current need of test cases in the development process.</p>\n<h2 id=\"access-integration-testing-services\">Access integration testing services<a href=\"#access-integration-testing-services\" aria-hidden class=\"anchor\">#</a></h2>\n<p>If you need access to integration testing environment such as travis, CircleCI, Gitlab CI, you can refer to <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/.travis.yml\">.travis.yml</a> provided by this repository.</p>\n<p>Note that the e2e test requires integrated environment support <a href=\"https://electronjs.org/\">electron</a>, and if not, you can run unit tests separately using <code>npm test .test.js</code>.</p>\n<h2 id=\"reference-links\">Reference links<a href=\"#reference-links\" aria-hidden class=\"anchor\">#</a></h2>\n<p>For more testing tips and functions, please refer to the following link.</p>\n<ul>\n<li><a href=\"https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#running-tests\">create-react-app tests</a></li>\n<li><a href=\"https://facebook.github.io/jest/\">jest</a></li>\n<li><a href=\"http://airbnb.io/enzyme/\">enzyme</a></li>\n<li><a href=\"https://github.com/googlechrome/puppeteer\">puppeteer</a></li>\n<li><a href=\"https://facebook.github.io/jest/docs/en/puppeteer.html\">Using with puppeteer</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/ui-test/#unit-tests\">Unit Tests</a></p>\n<ul>\n<li><a href=\"/docs/ui-test/#write-a-case\">Write a case</a></li>\n<li><a href=\"/docs/ui-test/#local-execution\">Local execution</a></li>\n<li><a href=\"/docs/ui-test/#test-dva-wrapped-components\">Test dva wrapped components</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/ui-test/#e2e-test\">e2e test</a></p>\n<ul>\n<li><a href=\"/docs/ui-test/#write-a-e2e-test-case\">Write a e2e test case</a></li>\n<li><a href=\"/docs/ui-test/#run-test-cases\">Run test cases</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/ui-test/#watch-mode\">watch mode</a></li>\n<li><a href=\"/docs/ui-test/#test-coverage\">Test coverage</a></li>\n<li><a href=\"/docs/ui-test/#focus-or-ignore-test-cases\">Focus or ignore test cases</a></li>\n<li><a href=\"/docs/ui-test/#access-integration-testing-services\">Access integration testing services</a></li>\n<li><a href=\"/docs/ui-test/#reference-links\">Reference links</a></li>\n</ul>","frontmatter":{"title":{"zh_CN":"UI Test","en_US":"UI Test"},"order":15,"type":"Advanced"},"fields":{"path":"/docs/ui-test.en-US.md","slug":"/docs/ui-test"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"使用 TypeScript","en_US":"使用 TypeScript"},"order":7,"type":"进阶"},"fields":{"slug":"/docs/uset-typescript-cn","path":"/docs/uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use TypeScript","en_US":"Use TypeScript"},"order":7,"type":"Advanced"},"fields":{"slug":"/docs/uset-typescript","path":"/docs/uset-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"独立使用 Pro 组件","en_US":"独立使用 Pro 组件"},"order":16,"type":"进阶"},"fields":{"slug":"/docs/use-components-alone-cn","path":"/docs/use-components-alone.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use Pro Components Alone","en_US":"Use Pro Components Alone"},"order":16,"type":"Advanced"},"fields":{"slug":"/docs/use-components-alone","path":"/docs/use-components-alone.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"升级到 2.0 版本","en_US":"升级到 2.0 版本"},"order":2,"type":"入门"},"fields":{"slug":"/docs/upgrade-v2-cn","path":"/docs/upgrade-v2.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Upgrade to V2","en_US":"Upgrade to V2"},"order":2,"type":"Introduction"},"fields":{"slug":"/docs/upgrade-v2","path":"/docs/upgrade-v2.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI 测试","en_US":"UI 测试"},"order":15,"type":"进阶"},"fields":{"slug":"/docs/ui-test-cn","path":"/docs/ui-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI Test","en_US":"UI Test"},"order":15,"type":"Advanced"},"fields":{"slug":"/docs/ui-test","path":"/docs/ui-test.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更换主题","en_US":"更换主题"},"order":14,"type":"进阶"},"fields":{"slug":"/docs/theme-cn","path":"/docs/theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Theme","en_US":"Theme"},"order":14,"type":"Advanced"},"fields":{"slug":"/docs/theme","path":"/docs/theme.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"样式","en_US":"样式"},"order":6,"type":"入门"},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Style","en_US":"Style"},"order":6,"type":"Introduction"},"fields":{"slug":"/docs/style","path":"/docs/style.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"和服务端进行交互","en_US":"和服务端进行交互"},"order":7,"type":"入门"},"fields":{"slug":"/docs/server-cn","path":"/docs/server.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Communicate with Server","en_US":"Communicate with Server"},"order":7,"type":"Introduction"},"fields":{"slug":"/docs/server","path":"/docs/server.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"路由和菜单","en_US":"路由和菜单"},"order":3,"type":"入门"},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Router and Nav","en_US":"Router and Nav"},"order":3,"type":"Introduction"},"fields":{"slug":"/docs/router-and-nav","path":"/docs/router-and-nav.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"设计资源","en_US":"设计资源"},"order":23,"type":"其他"},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Design Kit","en_US":"Design Kit"},"order":23,"type":"Other"},"fields":{"slug":"/docs/resource","path":"/docs/resource.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增页面","en_US":"新增页面"},"order":4,"type":"入门"},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Page","en_US":"New Page"},"order":4,"type":"Introduction"},"fields":{"slug":"/docs/new-page","path":"/docs/new-page.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增业务组件","en_US":"新增业务组件"},"order":5,"type":"入门"},"fields":{"slug":"/docs/new-component-cn","path":"/docs/new-component.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Component","en_US":"New Component"},"order":5,"type":"Introduction"},"fields":{"slug":"/docs/new-component","path":"/docs/new-component.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock 和联调","en_US":"Mock 和联调"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/mock-api-cn","path":"/docs/mock-api.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock Data","en_US":"Mock Data"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/mock-api","path":"/docs/mock-api.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"布局","en_US":"布局"},"order":3,"type":"入门"},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout","en_US":"Layout"},"order":3,"type":"Introduction"},"fields":{"slug":"/docs/layout","path":"/docs/layout.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"引入外部模块","en_US":"引入外部模块"},"order":8,"type":"入门"},"fields":{"slug":"/docs/import-cn","path":"/docs/import.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Import Module","en_US":"Import Module"},"order":8,"type":"Introduction"},"fields":{"slug":"/docs/import","path":"/docs/import.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"国际化","en_US":"国际化"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"i18n","en_US":"i18n"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/i18n","path":"/docs/i18n.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"图表","en_US":"图表"},"order":11,"type":"进阶"},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Charts","en_US":"Charts"},"order":11,"type":"Advanced"},"fields":{"slug":"/docs/graph","path":"/docs/graph.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用","en_US":"开始使用"},"order":0,"type":"入门"},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started","en_US":"Getting Started"},"order":0,"type":"Introduction"},"fields":{"slug":"/docs/getting-started","path":"/docs/getting-started.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用（蚂蚁金服用户）","en_US":"开始使用（蚂蚁金服用户）"},"order":1,"type":"入门"},"fields":{"slug":"/docs/getting-start-inner-cn","path":"/docs/getting-start-inner.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started (Ant Financial User)","en_US":"Getting Started (Ant Financial User)"},"order":1,"type":"Introduction"},"fields":{"slug":"/docs/getting-start-inner","path":"/docs/getting-start-inner.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"社区推荐","en_US":"社区推荐"},"order":24,"type":"其他"},"fields":{"slug":"/docs/from-community-cn","path":"/docs/from-community.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"From Community","en_US":"From Community"},"order":24,"type":"Other"},"fields":{"slug":"/docs/from-community","path":"/docs/from-community.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"常见问题","en_US":"常见问题"},"order":22,"type":"其他"},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"FAQ","en_US":"FAQ"},"order":22,"type":"Other"},"fields":{"slug":"/docs/faq","path":"/docs/faq.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"错误处理","en_US":"错误处理"},"order":17,"type":"进阶"},"fields":{"slug":"/docs/error-handle-cn","path":"/docs/error-handle.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Error Handle","en_US":"Error Handle"},"order":17,"type":"Advanced"},"fields":{"slug":"/docs/error-handle","path":"/docs/error-handle.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"构建和发布","en_US":"构建和发布"},"order":8,"type":"入门"},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Build & Deploy","en_US":"Build & Deploy"},"order":8,"type":"Introduction"},"fields":{"slug":"/docs/deploy","path":"/docs/deploy.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更新日志","en_US":"更新日志"},"order":21,"type":"其他"},"fields":{"slug":"/docs/changelog-cn","path":"/docs/changelog.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Changelog","en_US":"Changelog"},"order":21,"type":"Other"},"fields":{"slug":"/docs/changelog","path":"/docs/changelog.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"","en_US":""},"order":null,"type":null},"fields":{"slug":"/docs/change-theme.zh-cn","path":"/docs/change-theme.zh-cn.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"业务图标","en_US":"业务图标"},"order":12,"type":"进阶"},"fields":{"slug":"/docs/biz-icon-cn","path":"/docs/biz-icon.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"BIZ Icon","en_US":"BIZ Icon"},"order":12,"type":"Advanced"},"fields":{"slug":"/docs/biz-icon","path":"/docs/biz-icon.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"权限管理","en_US":"权限管理"},"order":24,"type":"进阶"},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Authority Management","en_US":"Authority Management"},"order":24,"type":"Advanced"},"fields":{"slug":"/docs/authority-management","path":"/docs/authority-management.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/ui-test","demo":"/ui-test/demo/"}}