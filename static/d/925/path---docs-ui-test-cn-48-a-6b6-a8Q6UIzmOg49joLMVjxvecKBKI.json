{"data":{"markdownRemark":{"html":"<p>UI 测试是项目研发流程中的重要一环，有效的测试用例可以梳理业务需求，保证研发的质量和进度，让工程师可以放心的重构代码和新增功能。</p>\n<p>Ant Design Pro 封装了一套简洁易用的 React 单元测试和 E2E 测试方案，在项目根目录运行以下命令就能运行测试用例。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run test:all  <span class=\"token comment\"># 执行所有测试</span></code></pre></div>\n<p> <img style=\"box-shadow:none;margin:0;\" src=\"https://gw.alipayobjects.com/zos/rmsportal/EFKJzIswQgWNJzDQNpKr.png\" width=\"700\" /> </p>\n<p>下面简单介绍如何在项目中书写你的业务测试用例。</p>\n<h2 id=\"单元测试\">单元测试<a href=\"#%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95\" aria-hidden class=\"anchor\">#</a></h2>\n<p>单元测试用于测试 React UI 组件的表现。我们参考了 <a href=\"https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#running-tests\">create-react-app</a>，使用 <a href=\"http://facebook.github.io/jest/\">jest</a> 作为测试框架。</p>\n<p>jest 是一个 node 端运行的测试框架，使用了 jsdom 来模拟 DOM 环境，适合用于快速测试 React 组件的逻辑表现，需要真实浏览器可以参考 E2E 测试部分。</p>\n<h3 id=\"写一个用例\">写一个用例<a href=\"#%E5%86%99%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BE%8B\" aria-hidden class=\"anchor\">#</a></h3>\n<p>比如，我们可以建一个文件 <code>src/routes/Result/Success.test.js</code> 来测试成功页面组件的 UI 表现。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> shallow <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'enzyme'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Success <span class=\"token keyword\">from</span> <span class=\"token string\">'./Success'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 引入对应的 React 组件</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders with Result'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> wrapper <span class=\"token operator\">=</span> <span class=\"token function\">shallow</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Success</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 进行渲染</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 有 Result 组件</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prop</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Result 组件的类型是成功</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这里使用了 <a href=\"http://airbnb.io/enzyme/docs/api/index.html\">enzyme</a> 作为测试库，它提供了大量实用的 API 来帮助我们测试 React 组件。断言部分沿用了 jest 默认的 <a href=\"https://facebook.github.io/jest/docs/en/expect.html#content\">jasmine2 expect 语法</a>。</p>\n<h3 id=\"本地执行\">本地执行<a href=\"#%E6%9C%AC%E5%9C%B0%E6%89%A7%E8%A1%8C\" aria-hidden class=\"anchor\">#</a></h3>\n<p>使用以下的命令将统一搜索和执行 <code>src</code> 下 <code>*.test.js</code> 格式的用例文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">test</span> .test.js</code></pre></div>\n<h4 id=\"执行单个或一组用例\">执行单个或一组用例<a href=\"#%E6%89%A7%E8%A1%8C%E5%8D%95%E4%B8%AA%E6%88%96%E4%B8%80%E7%BB%84%E7%94%A8%E4%BE%8B\" aria-hidden class=\"anchor\">#</a></h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">test</span> src/routes/Result/Success.test.js  <span class=\"token comment\"># 测试 Success.test.js</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">test</span> src/routes                         <span class=\"token comment\"># 测试 routes 下的所有用例文件</span></code></pre></div>\n<h3 id=\"测试-dva-包装组件\">测试 dva 包装组件<a href=\"#%E6%B5%8B%E8%AF%95-dva-%E5%8C%85%E8%A3%85%E7%BB%84%E4%BB%B6\" aria-hidden class=\"anchor\">#</a></h3>\n<p>被 dva <code>connect</code> 的 React 组件可以使用下面方式进行测试。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> shallow <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'enzyme'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Dashboard <span class=\"token keyword\">from</span> <span class=\"token string\">'./Dashboard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders Dashboard'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 使用包装后的组件</span>\n  <span class=\"token keyword\">const</span> wrapper <span class=\"token operator\">=</span> <span class=\"token function\">shallow</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dashboard.WrappedComponent</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> list<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Table'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">props</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"e2e-测试\">e2e 测试<a href=\"#e2e-%E6%B5%8B%E8%AF%95\" aria-hidden class=\"anchor\">#</a></h2>\n<p>端到端测试也叫冒烟测试，用于测试真实浏览器环境下前端应用的流程和表现，相当于代替人工去操作应用。</p>\n<p>我们引入了 <a href=\"https://github.com/googlechrome/puppeteer\">puppeteer</a> 作为 E2E 测试的工具，puppeteer 是 Google Chrome 团队官方的无界面（Headless）Chrome 工具。它默认使用 chrome / chromium 作为浏览器环境运行你的应用，并且提供了非常语义化的 API 来描述业务逻辑。</p>\n<h3 id=\"写一个-e2e-用例\">写一个 e2e 用例<a href=\"#%E5%86%99%E4%B8%80%E4%B8%AA-e2e-%E7%94%A8%E4%BE%8B\" aria-hidden class=\"anchor\">#</a></h3>\n<p>假设有一个需求，用户在登录页面输入错误的用户名和密码，点击登录后，出现错误提示框。</p>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/oZeYewGOUJkmqXAPoOFC.gif\" width=\"400\" /> </p>\n<p>我们写一个用例来保障这个流程。在 <code>src/e2e/</code> 目录下建一个 <code>Login.e2e.js</code> 文件，按上述业务需求描述测试用例。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> puppeteer <span class=\"token keyword\">from</span> <span class=\"token string\">'puppeteer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should login with failure'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#userName'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mockuser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#password'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wrong_password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button[type=\"submit\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForSelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.ant-alert-error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// should display error</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>更多 puppeteer 的方法可以参考 <a href=\"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md\">puppeteer/docs/api.md</a>。</p>\n<h3 id=\"运行用例\">运行用例<a href=\"#%E8%BF%90%E8%A1%8C%E7%94%A8%E4%BE%8B\" aria-hidden class=\"anchor\">#</a></h3>\n<p>运行下列命令将执行 src 下所有的 <code>*.e2e.js</code> 用例文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">test</span> .e2e.js</code></pre></div>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/LGCXopksUYMUhjRgdYSz.png\" width=\"700\" /> </p>\n<blockquote>\n<p>注意，本地测试 e2e 用例需要启动 <code>npm start</code>，否则会报 <code>Failed: navigation error</code> 的错误。</p>\n</blockquote>\n<h2 id=\"watch-模式\">watch 模式<a href=\"#watch-%E6%A8%A1%E5%BC%8F\" aria-hidden class=\"anchor\">#</a></h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm test -- --watch</code></pre></div>\n<p>添加 <code>--watch</code> 配置可以进入 watch 模式，当你修改和保存文件时，Jest 会自动执行相应用例。Jest 的命令行工具也提供了各种方便的快捷键来执行你需要的用例。</p>\n<p> <img src=\"https://gw.alipayobjects.com/zos/rmsportal/MnmxiavystfcBDskyKRg.png\" width=\"700\" /> </p>\n<h2 id=\"测试覆盖率\">测试覆盖率<a href=\"#%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87\" aria-hidden class=\"anchor\">#</a></h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm test -- --coverage</code></pre></div>\n<p>添加 <code>--coverage</code> 配置可以显示项目的测试覆盖率。</p>\n<p> <img src=\"https://camo.githubusercontent.com/bd0bbda8e44ea747e4c199d0e212d40563ad2fcb/687474703a2f2f692e696d6775722e636f6d2f356246686e54532e706e67\" width=\"700\" /> </p>\n<h2 id=\"聚焦和忽略用例\">聚焦和忽略用例<a href=\"#%E8%81%9A%E7%84%A6%E5%92%8C%E5%BF%BD%E7%95%A5%E7%94%A8%E4%BE%8B\" aria-hidden class=\"anchor\">#</a></h2>\n<p>使用 <code>xit()</code> 取代 <code>it()</code> 可以暂时忽略用例，<code>fit()</code> 可以聚焦当前用例并忽略其他所有用例。这两个方法可以帮助你在开发过程中只关注当前需要的用例。</p>\n<h2 id=\"接入集成测试服务\">接入集成测试服务<a href=\"#%E6%8E%A5%E5%85%A5%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95%E6%9C%8D%E5%8A%A1\" aria-hidden class=\"anchor\">#</a></h2>\n<p>如果需要接入 travis、CircleCI、Gitlab CI 等集成测试环境，可以参考本仓库提供的 <code>.travis.yml</code>。</p>\n<p>注意 e2e 测试需要集成环境支持 electron，如果不支持，你可以使用 <code>npm test .test.js</code> 单独运行单元测试。</p>\n<h2 id=\"参考链接\">参考链接<a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\" aria-hidden class=\"anchor\">#</a></h2>\n<p>更多测试技巧和功能请参考以下链接。</p>\n<ul>\n<li><a href=\"https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#running-tests\">create-react-app tests</a></li>\n<li><a href=\"https://facebook.github.io/jest/\">jest</a></li>\n<li><a href=\"http://airbnb.io/enzyme/\">enzyme</a></li>\n<li><a href=\"https://github.com/googlechrome/puppeteer\">puppeteer</a></li>\n<li><a href=\"https://facebook.github.io/jest/docs/en/puppeteer.html\">Using with puppeteer</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/ui-test-cn/#%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95\">单元测试</a></p>\n<ul>\n<li><a href=\"/docs/ui-test-cn/#%E5%86%99%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BE%8B\">写一个用例</a></li>\n<li><a href=\"/docs/ui-test-cn/#%E6%9C%AC%E5%9C%B0%E6%89%A7%E8%A1%8C\">本地执行</a></li>\n<li><a href=\"/docs/ui-test-cn/#%E6%B5%8B%E8%AF%95-dva-%E5%8C%85%E8%A3%85%E7%BB%84%E4%BB%B6\">测试 dva 包装组件</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/ui-test-cn/#e2e-%E6%B5%8B%E8%AF%95\">e2e 测试</a></p>\n<ul>\n<li><a href=\"/docs/ui-test-cn/#%E5%86%99%E4%B8%80%E4%B8%AA-e2e-%E7%94%A8%E4%BE%8B\">写一个 e2e 用例</a></li>\n<li><a href=\"/docs/ui-test-cn/#%E8%BF%90%E8%A1%8C%E7%94%A8%E4%BE%8B\">运行用例</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/ui-test-cn/#watch-%E6%A8%A1%E5%BC%8F\">watch 模式</a></li>\n<li><a href=\"/docs/ui-test-cn/#%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87\">测试覆盖率</a></li>\n<li><a href=\"/docs/ui-test-cn/#%E8%81%9A%E7%84%A6%E5%92%8C%E5%BF%BD%E7%95%A5%E7%94%A8%E4%BE%8B\">聚焦和忽略用例</a></li>\n<li><a href=\"/docs/ui-test-cn/#%E6%8E%A5%E5%85%A5%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95%E6%9C%8D%E5%8A%A1\">接入集成测试服务</a></li>\n<li><a href=\"/docs/ui-test-cn/#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\">参考链接</a></li>\n</ul>","frontmatter":{"title":{"zh_CN":"UI 测试","en_US":"UI 测试"},"order":15,"type":"进阶"},"fields":{"path":"/docs/ui-test.zh-CN.md","slug":"/docs/ui-test-cn","modifiedTime":1556010662122,"avatarList":[{"href":"/yutingzhao1991","text":"\n        yutingzhao1991\n","src":"https://avatars0.githubusercontent.com/u/1061968?s=40&amp;v=4"},{"href":"/sorrycc","text":"\n        sorrycc\n","src":"https://avatars3.githubusercontent.com/u/35128?s=40&amp;v=4"},{"href":"/chenshuai2144","text":"\n        chenshuai2144\n","src":"https://avatars1.githubusercontent.com/u/8186664?s=40&amp;v=4"}]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"使用 TypeScript","en_US":"使用 TypeScript"},"order":7,"type":"进阶"},"fields":{"slug":"/docs/uset-typescript-cn","path":"/docs/uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use TypeScript","en_US":"Use TypeScript"},"order":7,"type":"Advanced"},"fields":{"slug":"/docs/uset-typescript","path":"/docs/uset-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"独立使用 Pro 组件","en_US":"独立使用 Pro 组件"},"order":16,"type":"进阶"},"fields":{"slug":"/docs/use-components-alone-cn","path":"/docs/use-components-alone.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use Pro Components Alone","en_US":"Use Pro Components Alone"},"order":16,"type":"Advanced"},"fields":{"slug":"/docs/use-components-alone","path":"/docs/use-components-alone.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"升级到 2.0 版本","en_US":"升级到 2.0 版本"},"order":2,"type":"入门"},"fields":{"slug":"/docs/upgrade-v2-cn","path":"/docs/upgrade-v2.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Upgrade to V2","en_US":"Upgrade to V2"},"order":2,"type":"Introduction"},"fields":{"slug":"/docs/upgrade-v2","path":"/docs/upgrade-v2.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI 测试","en_US":"UI 测试"},"order":15,"type":"进阶"},"fields":{"slug":"/docs/ui-test-cn","path":"/docs/ui-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI Test","en_US":"UI Test"},"order":15,"type":"Advanced"},"fields":{"slug":"/docs/ui-test","path":"/docs/ui-test.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更换主题","en_US":"更换主题"},"order":14,"type":"进阶"},"fields":{"slug":"/docs/theme-cn","path":"/docs/theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Theme","en_US":"Theme"},"order":14,"type":"Advanced"},"fields":{"slug":"/docs/theme","path":"/docs/theme.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"样式","en_US":"样式"},"order":6,"type":"入门"},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Style","en_US":"Style"},"order":6,"type":"Introduction"},"fields":{"slug":"/docs/style","path":"/docs/style.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"和服务端进行交互","en_US":"和服务端进行交互"},"order":7,"type":"开发"},"fields":{"slug":"/docs/server-cn","path":"/docs/server.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Communicate with Server","en_US":"Communicate with Server"},"order":7,"type":"Introduction"},"fields":{"slug":"/docs/server","path":"/docs/server.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"路由和菜单","en_US":"路由和菜单"},"order":3,"type":"入门"},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Router and Nav","en_US":"Router and Nav"},"order":3,"type":"Introduction"},"fields":{"slug":"/docs/router-and-nav","path":"/docs/router-and-nav.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"设计资源","en_US":"设计资源"},"order":23,"type":"其他"},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Design Kit","en_US":"Design Kit"},"order":23,"type":"Other"},"fields":{"slug":"/docs/resource","path":"/docs/resource.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增页面","en_US":"新增页面"},"order":4,"type":"开发"},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Page","en_US":"New Page"},"order":4,"type":"Development"},"fields":{"slug":"/docs/new-page","path":"/docs/new-page.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增业务组件","en_US":"新增业务组件"},"order":5,"type":"开发"},"fields":{"slug":"/docs/new-component-cn","path":"/docs/new-component.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Component","en_US":"New Component"},"order":5,"type":"Development"},"fields":{"slug":"/docs/new-component","path":"/docs/new-component.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock 和联调","en_US":"Mock 和联调"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/mock-api-cn","path":"/docs/mock-api.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock Data","en_US":"Mock Data"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/mock-api","path":"/docs/mock-api.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"布局","en_US":"布局"},"order":3,"type":"入门"},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout","en_US":"Layout"},"order":3,"type":"Introduction"},"fields":{"slug":"/docs/layout","path":"/docs/layout.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"引入外部模块","en_US":"引入外部模块"},"order":8,"type":"开发"},"fields":{"slug":"/docs/import-cn","path":"/docs/import.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Import Module","en_US":"Import Module"},"order":8,"type":"Development"},"fields":{"slug":"/docs/import","path":"/docs/import.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"国际化","en_US":"国际化"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"i18n","en_US":"i18n"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/i18n","path":"/docs/i18n.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"图表","en_US":"图表"},"order":11,"type":"进阶"},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Charts","en_US":"Charts"},"order":11,"type":"Advanced"},"fields":{"slug":"/docs/graph","path":"/docs/graph.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用","en_US":"开始使用"},"order":0,"type":"入门"},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started","en_US":"Getting Started"},"order":0,"type":"Introduction"},"fields":{"slug":"/docs/getting-started","path":"/docs/getting-started.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用（蚂蚁金服用户）","en_US":"开始使用（蚂蚁金服用户）"},"order":1,"type":"入门"},"fields":{"slug":"/docs/getting-start-inner-cn","path":"/docs/getting-start-inner.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started (Ant Financial User)","en_US":"Getting Started (Ant Financial User)"},"order":1,"type":"Introduction"},"fields":{"slug":"/docs/getting-start-inner","path":"/docs/getting-start-inner.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"社区推荐","en_US":"社区推荐"},"order":24,"type":"其他"},"fields":{"slug":"/docs/from-community-cn","path":"/docs/from-community.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"From Community","en_US":"From Community"},"order":24,"type":"Other"},"fields":{"slug":"/docs/from-community","path":"/docs/from-community.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"常见问题","en_US":"常见问题"},"order":22,"type":"其他"},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"FAQ","en_US":"FAQ"},"order":22,"type":"Other"},"fields":{"slug":"/docs/faq","path":"/docs/faq.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"错误处理","en_US":"错误处理"},"order":17,"type":"进阶"},"fields":{"slug":"/docs/error-handle-cn","path":"/docs/error-handle.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Error Handle","en_US":"Error Handle"},"order":17,"type":"Advanced"},"fields":{"slug":"/docs/error-handle","path":"/docs/error-handle.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"构建和发布","en_US":"构建和发布"},"order":8,"type":"入门"},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Build & Deploy","en_US":"Build & Deploy"},"order":8,"type":"Introduction"},"fields":{"slug":"/docs/deploy","path":"/docs/deploy.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更新日志","en_US":"更新日志"},"order":21,"type":"其他"},"fields":{"slug":"/docs/changelog-cn","path":"/docs/changelog.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Changelog","en_US":"Changelog"},"order":21,"type":"Other"},"fields":{"slug":"/docs/changelog","path":"/docs/changelog.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"业务图标","en_US":"业务图标"},"order":12,"type":"进阶"},"fields":{"slug":"/docs/biz-icon-cn","path":"/docs/biz-icon.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"BIZ Icon","en_US":"BIZ Icon"},"order":12,"type":"Advanced"},"fields":{"slug":"/docs/biz-icon","path":"/docs/biz-icon.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"权限管理","en_US":"权限管理"},"order":24,"type":"进阶"},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Authority Management","en_US":"Authority Management"},"order":24,"type":"Advanced"},"fields":{"slug":"/docs/authority-management","path":"/docs/authority-management.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/ui-test-cn","type":"/docs/"}}