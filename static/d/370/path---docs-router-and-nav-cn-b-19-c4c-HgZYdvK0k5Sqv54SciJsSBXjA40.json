{"data":{"markdownRemark":{"html":"<p>路由和菜单是组织起一个应用的关键骨架，pro 中的路由为了方便管理，使用了中心化的方式，在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/config/router.config.js\"><code>router.config.js</code></a> 统一配置和管理。</p>\n<h2 id=\"基本结构\">基本结构<a href=\"#%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\" aria-hidden class=\"anchor\">#</a></h2>\n<p>在这一部分，脚手架通过结合一些配置文件、基本算法及工具函数，搭建好了路由和菜单的基本框架，主要涉及以下几个模块/功能：</p>\n<ul>\n<li><code>路由管理</code> 通过约定的语法根据在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/config/router.config.js\"><code>router.config.js</code></a> 中配置路由。</li>\n<li><code>菜单生成</code> 根据路由配置来生成菜单。菜单项名称，嵌套路径与路由高度耦合。</li>\n<li><code>面包屑</code> 组件 <a href=\"http://pro.ant.design/components/PageHeader\">PageHeader</a> 中内置的面包屑也可由脚手架提供的配置信息自动生成。</li>\n</ul>\n<p>下面简单介绍下各个模块的基本思路，如果你对实现过程不感兴趣，只想了解应该怎么实现相关需求，可以直接查看<a href=\"/docs/router-and-nav#%E9%9C%80%E6%B1%82%E5%AE%9E%E4%BE%8B\">需求实例</a>。</p>\n<h3 id=\"路由\">路由<a href=\"#%E8%B7%AF%E7%94%B1\" aria-hidden class=\"anchor\">#</a></h3>\n<p>目前脚手架中所有的路由都通过 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/config/router.config.js\"><code>router.config.js</code></a> 来统一管理，在 umi 的配置中我们增加了一些参数，如 <code>name</code>，<code>icon</code>，<code>hideChildrenInMenu</code>，<code>authority</code>，来辅助生成菜单。其中：</p>\n<ul>\n<li><code>name</code> 和 <code>icon</code>分别代表生成菜单项的文本和图标。</li>\n<li><code>hideChildrenInMenu</code> 用于隐藏不需要在菜单中展示的子路由。用法可以查看 <code>分步表单</code> 的配置。</li>\n<li><code>hideInMenu</code> 可以在菜单中不展示这个路由，包括子路由。效果可以查看 <code>exception/trigger</code>页面。</li>\n<li>\n<p><code>authority</code> 用来配置这个路由的权限，如果配置了将会验证当前用户的权限，并决定是否展示。</p>\n<blockquote>\n<p>你可能注意到配置中的 <code>name</code> 和菜单实际展示的不同，这是因为我们使用了全球化组件的原因，具体参见 <a href=\"/docs/i18n\">i18n</a></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"菜单\">菜单<a href=\"#%E8%8F%9C%E5%8D%95\" aria-hidden class=\"anchor\">#</a></h3>\n<p>菜单根据 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/config/router.config.js\"><code>router.config.js</code></a> 生成，具体逻辑在 <code>src/models/menu.js</code> 中的 <code>formatter</code> 方法实现。</p>\n<blockquote>\n<p>如果你的项目并不需要菜单，你可以直接在 <code>BasicLayout</code> 中删除 <code>SiderMenu</code> 组件的挂载。并在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/src/layouts/BasicLayout.js#L227\"><code>src/layouts/BasicLayout</code></a> 中设置 <code>const MenuData = []</code>。</p>\n</blockquote>\n<h3 id=\"从服务器请求菜单\">从服务器请求菜单<a href=\"#%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%B7%E6%B1%82%E8%8F%9C%E5%8D%95\" aria-hidden class=\"anchor\">#</a></h3>\n<p>只需在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/src/models/menu.js#L111\">models/menu</a> 中发起 http 请求，menuData 是一个 json 数组。只需服务器返回类似格式的 json 即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'dashboard'</span><span class=\"token punctuation\">,</span>\n    icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'dashboard'</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard/analysis'</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'analysis'</span><span class=\"token punctuation\">,</span>\n        exact<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard/monitor'</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'monitor'</span><span class=\"token punctuation\">,</span>\n        exact<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard/workplace'</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'workplace'</span><span class=\"token punctuation\">,</span>\n        exact<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p>注意 path 必须要在 routre.config.js 中定义。（约定式路由不需要，只需页面真实有效即可）</p>\n</blockquote>\n<h3 id=\"面包屑\">面包屑<a href=\"#%E9%9D%A2%E5%8C%85%E5%B1%91\" aria-hidden class=\"anchor\">#</a></h3>\n<p>面包屑由 <code>PageHeaderWrapper</code> 实现，<code>MenuContext</code> 将 根据 <code>MenuData</code> 生成的 <code>breadcrumbNameMap</code> 通过 props 传递给了 <code>PageHeader</code>，如果你要做自定义的面包屑，可以通过修改传入的 <code>breadcrumbNameMap</code> 来解决。</p>\n<p><code>breadcrumbNameMap</code> 示例数据如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'/'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard/analysis'</span><span class=\"token punctuation\">,</span> locale<span class=\"token punctuation\">:</span> <span class=\"token string\">'menu'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'/dashboard/analysis'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'analysis'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./Dashboard/Analysis'</span><span class=\"token punctuation\">,</span>\n    locale<span class=\"token punctuation\">:</span> <span class=\"token string\">'menu.dashboard.analysis'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"需求实例\">需求实例<a href=\"#%E9%9C%80%E6%B1%82%E5%AE%9E%E4%BE%8B\" aria-hidden class=\"anchor\">#</a></h2>\n<p>上面对这部分的实现概要进行了介绍，接下来通过实际的案例来说明具体该怎么做。</p>\n<h3 id=\"菜单跳转到外部地址\">菜单跳转到外部地址<a href=\"#%E8%8F%9C%E5%8D%95%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%A4%96%E9%83%A8%E5%9C%B0%E5%9D%80\" aria-hidden class=\"anchor\">#</a></h3>\n<p>你可以直接将完整 url 填入 path 中，框架会自动处理。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://pro.ant.design/docs/getting-started-cn'</span><span class=\"token punctuation\">,</span>\n    target<span class=\"token punctuation\">:</span> <span class=\"token string\">'_blank'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 点击新窗口打开</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"文档\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"新增页面\">新增页面<a href=\"#%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2\" aria-hidden class=\"anchor\">#</a></h3>\n<p>脚手架默认提供了两种布局模板：<code>基础布局 - BasicLayout</code> 以及 <code>账户相关布局 - UserLayout</code>：</p>\n<p> <img alt=\"基础布局\" src=\"https://gw.alipayobjects.com/zos/rmsportal/oXmyfmffJVvdbmDoGvuF.png\" /> </p>\n<p> <img alt=\"账户相关布局\" src=\"https://gw.alipayobjects.com/zos/rmsportal/mXsydBXvLqBVEZLMssEy.png\" /> </p>\n<p>如果你的页面可以利用这两种布局，那么只需要在路由配置中增加一条即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token comment\">// app</span>\n  <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> <span class=\"token string\">'../layouts/BasicLayout'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// dashboard</span>\n      <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard/analysis'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> path <span class=\"token punctuation\">:</span><span class=\"token string\">'/dashboard/test'</span><span class=\"token punctuation\">,</span>component<span class=\"token punctuation\">:</span><span class=\"token string\">\"./Dashboard/Test\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>加好后，会默认生成相关的路由及导航。</p>\n<h3 id=\"新增布局\">新增布局<a href=\"#%E6%96%B0%E5%A2%9E%E5%B8%83%E5%B1%80\" aria-hidden class=\"anchor\">#</a></h3>\n<p>在脚手架中我们通过嵌套路由来实现布局模板。<a href=\"https://github.com/ant-design/ant-design-pro/blob/master/config/router.config.js\"><code>router.config.js</code></a> 是一个数组，其中第一级数据就是我们的布局，如果你需要新增布局可以再直接增加一个新的一级数据。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token comment\">// user</span>\n   <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/user'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> <span class=\"token string\">'../layouts/UserLayout'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">// app</span>\n   <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> <span class=\"token string\">'../layouts/BasicLayout'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">// new</span>\n   <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/new'</span><span class=\"token punctuation\">,</span>\n    component<span class=\"token punctuation\">:</span> <span class=\"token string\">'../layouts/new_page'</span><span class=\"token punctuation\">,</span>\n    routes<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"在菜单中使用自定义的-icon\">在菜单中使用自定义的 icon<a href=\"#%E5%9C%A8%E8%8F%9C%E5%8D%95%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84-icon\" aria-hidden class=\"anchor\">#</a></h3>\n<p>由于 umi 的限制，在 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/config/router.config.js\"><code>router.config.js</code></a> 是不能直接只是用组件的，Pro 中暂时支持 使用 <a href=\"https://ant.design/components/icon-cn/\"><code>ant.design</code></a> 本身的 icon type，和传入一个 img 的 url。只需要直接在 icon 属性上配置即可，如果是个 url，Pro 会自动处理为一个 img 标签。</p>\n<p>如果这样还不能满足需求，可以自定义 <a href=\"https://github.com/ant-design/ant-design-pro/blob/master/src/components/SiderMenu/BaseMenu.js#L18\"><code>getIcon</code></a> 方法。</p>\n<blockquote>\n<p>如果你想使用 iconfont 的图标，你可以使用<a href=\"https://ant.design/components/icon-cn/#%E8%87%AA%E5%AE%9A%E4%B9%25\">ant.desgin</a>的自定义图标.</p>\n</blockquote>\n<h3 id=\"带参数的路由\">带参数的路由<a href=\"#%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E8%B7%AF%E7%94%B1\" aria-hidden class=\"anchor\">#</a></h3>\n<p>脚手架默认支持带参数的路由，但是在菜单中显示带参数的路由并不是个好主意，我们并不会自动的帮你注入一个参数，你可能需要在代码中自行处理。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/dashboard/:page'</span><span class=\"token punctuation\">,</span>\n  hideInMenu<span class=\"token punctuation\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">'analysis'</span><span class=\"token punctuation\">,</span>\n  component<span class=\"token punctuation\">:</span> <span class=\"token string\">'./Dashboard/Analysis'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>你可以通过以下代码来跳转到这个路由：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/router'</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/dashboard/anyParams'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//or</span>\n\n<span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/link'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/dashboard/anyParams\"</span><span class=\"token operator\">></span>go<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在路由组件中，可以通过<code>this.props.match.params</code> 来获得路由参数。</p>\n<p>更多详细内容请参见：<a href=\"https://umijs.org/guide/router.html#%E7%BA%A6%E5%AE%9A%E5%BC%8F%E8%B7%AF%E7%94%B1\">umi#路由</a></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/router-and-nav-cn/#%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\">基本结构</a></p>\n<ul>\n<li><a href=\"/docs/router-and-nav-cn/#%E8%B7%AF%E7%94%B1\">路由</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E8%8F%9C%E5%8D%95\">菜单</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%B7%E6%B1%82%E8%8F%9C%E5%8D%95\">从服务器请求菜单</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E9%9D%A2%E5%8C%85%E5%B1%91\">面包屑</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/router-and-nav-cn/#%E9%9C%80%E6%B1%82%E5%AE%9E%E4%BE%8B\">需求实例</a></p>\n<ul>\n<li><a href=\"/docs/router-and-nav-cn/#%E8%8F%9C%E5%8D%95%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%A4%96%E9%83%A8%E5%9C%B0%E5%9D%80\">菜单跳转到外部地址</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E6%96%B0%E5%A2%9E%E9%A1%B5%E9%9D%A2\">新增页面</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E6%96%B0%E5%A2%9E%E5%B8%83%E5%B1%80\">新增布局</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E5%9C%A8%E8%8F%9C%E5%8D%95%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84-icon\">在菜单中使用自定义的 icon</a></li>\n<li><a href=\"/docs/router-and-nav-cn/#%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%E8%B7%AF%E7%94%B1\">带参数的路由</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":{"zh_CN":"路由和菜单","en_US":"路由和菜单"},"order":3,"type":"开发"},"fields":{"path":"/docs/router-and-nav.zh-CN.md","slug":"/docs/router-and-nav-cn","modifiedTime":1557916086090,"avatarList":[{"href":"/chenshuai2144","text":"\n        chenshuai2144\n","src":"https://avatars1.githubusercontent.com/u/8186664?s=40&amp;v=4"},{"href":"/m4jing","text":"\n        m4jing\n","src":"https://avatars0.githubusercontent.com/u/2697870?s=40&amp;v=4"},{"href":"/xiaohuoni","text":"\n        xiaohuoni\n","src":"https://avatars3.githubusercontent.com/u/11746742?s=40&amp;v=4"},{"href":"/Mikasa33","text":"\n        Mikasa33\n","src":"https://avatars0.githubusercontent.com/u/29498153?s=40&amp;v=4"},{"href":"/YoungHu","text":"\n        YoungHu\n","src":"https://avatars0.githubusercontent.com/u/7418602?s=40&amp;v=4"},{"href":"/ddcat1115","text":"\n        ddcat1115\n","src":"https://avatars2.githubusercontent.com/u/7017767?s=40&amp;v=4"},{"href":"/iDivines","text":"\n        iDivines\n","src":"https://avatars1.githubusercontent.com/u/16111063?s=40&amp;v=4"},{"href":"/afc163","text":"\n        afc163\n","src":"https://avatars0.githubusercontent.com/u/507615?s=40&amp;v=4"},{"href":"/kaoding","text":"\n        kaoding\n","src":"https://avatars3.githubusercontent.com/u/18542211?s=40&amp;v=4"}]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"使用 TypeScript","en_US":"使用 TypeScript"},"order":7,"type":"进阶"},"fields":{"slug":"/docs/uset-typescript-cn","path":"/docs/uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use TypeScript","en_US":"Use TypeScript"},"order":7,"type":"Advanced"},"fields":{"slug":"/docs/uset-typescript","path":"/docs/uset-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"独立使用 Pro 组件","en_US":"独立使用 Pro 组件"},"order":16,"type":"进阶"},"fields":{"slug":"/docs/use-components-alone-cn","path":"/docs/use-components-alone.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use Pro Components Alone","en_US":"Use Pro Components Alone"},"order":16,"type":"Advanced"},"fields":{"slug":"/docs/use-components-alone","path":"/docs/use-components-alone.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"升级到 2.0 版本","en_US":"升级到 2.0 版本"},"order":2,"type":"入门"},"fields":{"slug":"/docs/upgrade-v2-cn","path":"/docs/upgrade-v2.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Upgrade to V2","en_US":"Upgrade to V2"},"order":2,"type":"Introduction"},"fields":{"slug":"/docs/upgrade-v2","path":"/docs/upgrade-v2.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI 测试","en_US":"UI 测试"},"order":15,"type":"进阶"},"fields":{"slug":"/docs/ui-test-cn","path":"/docs/ui-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI Test","en_US":"UI Test"},"order":15,"type":"Advanced"},"fields":{"slug":"/docs/ui-test","path":"/docs/ui-test.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更换主题","en_US":"更换主题"},"order":14,"type":"进阶"},"fields":{"slug":"/docs/theme-cn","path":"/docs/theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Theme","en_US":"Theme"},"order":14,"type":"Advanced"},"fields":{"slug":"/docs/theme","path":"/docs/theme.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"修改样式","en_US":"修改样式"},"order":6,"type":"开发"},"fields":{"slug":"/docs/style-cn","path":"/docs/style.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Edit Style","en_US":"Edit Style"},"order":6,"type":"Development"},"fields":{"slug":"/docs/style","path":"/docs/style.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"和服务端进行交互","en_US":"和服务端进行交互"},"order":7,"type":"开发"},"fields":{"slug":"/docs/server-cn","path":"/docs/server.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Communicate with Server","en_US":"Communicate with Server"},"order":7,"type":"Development"},"fields":{"slug":"/docs/server","path":"/docs/server.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"路由和菜单","en_US":"路由和菜单"},"order":3,"type":"开发"},"fields":{"slug":"/docs/router-and-nav-cn","path":"/docs/router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Router and Nav","en_US":"Router and Nav"},"order":3,"type":"Development"},"fields":{"slug":"/docs/router-and-nav","path":"/docs/router-and-nav.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"设计资源","en_US":"设计资源"},"order":23,"type":"其他"},"fields":{"slug":"/docs/resource-cn","path":"/docs/resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Design Kit","en_US":"Design Kit"},"order":23,"type":"Other"},"fields":{"slug":"/docs/resource","path":"/docs/resource.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增页面","en_US":"新增页面"},"order":4,"type":"开发"},"fields":{"slug":"/docs/new-page-cn","path":"/docs/new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Page","en_US":"New Page"},"order":4,"type":"Development"},"fields":{"slug":"/docs/new-page","path":"/docs/new-page.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增业务组件","en_US":"新增业务组件"},"order":5,"type":"开发"},"fields":{"slug":"/docs/new-component-cn","path":"/docs/new-component.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Component","en_US":"New Component"},"order":5,"type":"Development"},"fields":{"slug":"/docs/new-component","path":"/docs/new-component.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock 和联调","en_US":"Mock 和联调"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/mock-api-cn","path":"/docs/mock-api.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock Data","en_US":"Mock Data"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/mock-api","path":"/docs/mock-api.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"布局","en_US":"布局"},"order":3,"type":"开发"},"fields":{"slug":"/docs/layout-cn","path":"/docs/layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout","en_US":"Layout"},"order":3,"type":"Development"},"fields":{"slug":"/docs/layout","path":"/docs/layout.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"引入外部模块","en_US":"引入外部模块"},"order":8,"type":"开发"},"fields":{"slug":"/docs/import-cn","path":"/docs/import.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Import Module","en_US":"Import Module"},"order":8,"type":"Development"},"fields":{"slug":"/docs/import","path":"/docs/import.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"国际化","en_US":"国际化"},"order":13,"type":"进阶"},"fields":{"slug":"/docs/i18n-cn","path":"/docs/i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"i18n","en_US":"i18n"},"order":13,"type":"Advanced"},"fields":{"slug":"/docs/i18n","path":"/docs/i18n.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"图表","en_US":"图表"},"order":11,"type":"进阶"},"fields":{"slug":"/docs/graph-cn","path":"/docs/graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Charts","en_US":"Charts"},"order":11,"type":"Advanced"},"fields":{"slug":"/docs/graph","path":"/docs/graph.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用","en_US":"开始使用"},"order":0,"type":"入门"},"fields":{"slug":"/docs/getting-started-cn","path":"/docs/getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started","en_US":"Getting Started"},"order":0,"type":"Introduction"},"fields":{"slug":"/docs/getting-started","path":"/docs/getting-started.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用（蚂蚁金服用户）","en_US":"开始使用（蚂蚁金服用户）"},"order":1,"type":"入门"},"fields":{"slug":"/docs/getting-start-inner-cn","path":"/docs/getting-start-inner.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Getting Started (Ant Financial User)","en_US":"Getting Started (Ant Financial User)"},"order":1,"type":"Introduction"},"fields":{"slug":"/docs/getting-start-inner","path":"/docs/getting-start-inner.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"社区推荐","en_US":"社区推荐"},"order":24,"type":"其他"},"fields":{"slug":"/docs/from-community-cn","path":"/docs/from-community.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"From Community","en_US":"From Community"},"order":24,"type":"Other"},"fields":{"slug":"/docs/from-community","path":"/docs/from-community.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"常见问题","en_US":"常见问题"},"order":22,"type":"其他"},"fields":{"slug":"/docs/faq-cn","path":"/docs/faq.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"FAQ","en_US":"FAQ"},"order":22,"type":"Other"},"fields":{"slug":"/docs/faq","path":"/docs/faq.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"错误处理","en_US":"错误处理"},"order":17,"type":"进阶"},"fields":{"slug":"/docs/error-handle-cn","path":"/docs/error-handle.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Error Handle","en_US":"Error Handle"},"order":17,"type":"Advanced"},"fields":{"slug":"/docs/error-handle","path":"/docs/error-handle.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"构建和发布","en_US":"构建和发布"},"order":8,"type":"构建和部署"},"fields":{"slug":"/docs/deploy-cn","path":"/docs/deploy.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Build & Deploy","en_US":"Build & Deploy"},"order":8,"type":"Build & Deployment"},"fields":{"slug":"/docs/deploy","path":"/docs/deploy.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更新日志","en_US":"更新日志"},"order":21,"type":"其他"},"fields":{"slug":"/docs/changelog-cn","path":"/docs/changelog.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Changelog","en_US":"Changelog"},"order":21,"type":"Other"},"fields":{"slug":"/docs/changelog","path":"/docs/changelog.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"业务图标","en_US":"业务图标"},"order":12,"type":"进阶"},"fields":{"slug":"/docs/biz-icon-cn","path":"/docs/biz-icon.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"BIZ Icon","en_US":"BIZ Icon"},"order":12,"type":"Advanced"},"fields":{"slug":"/docs/biz-icon","path":"/docs/biz-icon.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"权限管理","en_US":"权限管理"},"order":24,"type":"进阶"},"fields":{"slug":"/docs/authority-management-cn","path":"/docs/authority-management.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Authority Management","en_US":"Authority Management"},"order":24,"type":"Advanced"},"fields":{"slug":"/docs/authority-management","path":"/docs/authority-management.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/router-and-nav-cn","type":"/docs/"}}